%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: /Users/Matze/OwnCloud/Nachhilfe/Mathe_Arbeitsblaetter/Lineare Funktionen/Line-001todo/.texpadtmp/Line-001-Lsg.dvi
%%CreationDate: Sat Sep 10 21:00:53 2016
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: SFSL1095 SFRM1095 CMMI10 CMR10 CMSY10 CMR8 CMMI8 CMEX10
%%+ CMSY8
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /Library/TeX/texbin/dvips -o
%+ "/Users/Matze/OwnCloud/Nachhilfe/Mathe_Arbeitsblaetter/Lineare Funktionen/Line-001todo/.texpadtmp/Line-001-Lsg.ps"
%+ "/Users/Matze/OwnCloud/Nachhilfe/Mathe_Arbeitsblaetter/Lineare Funktionen/Line-001todo/.texpadtmp/Line-001-Lsg.dvi"
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.09.10:2100
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end
 
@fedspecial end
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF1BE5F191BAEAEC7FE400C9980E103D8776EC196E741AFE11D249E0C277263
80FBD329524C55943E25631F113FBD8331C0044A7A2138637206A7941CF02590
577043EB0F205392C34E18B1ADA47CE63CB8F01365A044CE570FA20446102210
F03C0647CD0CC29E28B149F84C2F39256EE1457CDC3862C4082A95B44A61E8E1
B4ABAD32DA3E2FB8D849B1C5CEE60F205007464DF38712737776BB6BB3223941
95169B5BE578BA13DAE40B19AC184CB6F260A1EFE13CC8438ECB56EEBD30ACDD
8E24F52934
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
dup 16 /parenleftBig put
dup 17 /parenrightBig put
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F0B1F91BB33D169BC54F45D5CA872DB5B46B0B
A029964C2E1D66752E114A0B3B5AC5FEA689F9C07862F709CB1A68FCC0D56172
01B9459BFE49C4E06DED7511324A8C312CBD65608EBB522BB7ACADD26688C170
0C7C8767943F654412D7D2A26363ED76F38AFE60A0A278D3BE72F1B600B4B374
FD0073D5CEEFCAF9CC72F9711E878C74B323528EFC7AAD0B2A86ECE4E05DC442
7B051DDCA9F7D22CB91F39B83D7754835CD33BDE24286C996BA06A79740C582E
0D51DCA3B6925B351BF10A4D246C22453200EAA3651F1B12EA07523349225E6B
8E0B7DE71A4B44796A72E7557FDC4C1E8CC4C5C200E0D8AC5E0747D43DA2710E
97EA37546D668CF7BE63A7E3604243C258A41120EFBDFC7AB8384A7F8CAD9CFC
BF520216E9D8CA8141A8A9BDC3C50A4A4FD1D6C8413033D5BE1C3D8139384FEE
54D877E046F8CDFA6408EF5DB52845098F989723DADAB789A415D3F265EC20EC
9B5D3323D67FC43A1002395148E0AEF11F9D1751E6700C0F7C81B2F3EE1BEACB
B6C20A80B90A4C30411F624514DB2691AF3A2E9FD4B90ADBB1D7F307A0C99DD3
0C0D6D7F121589B24B024017C8D4D84FB7857E7FCC9721CA0D04F6689CC6F66F
320DA98C344595737E03EEA54C8533DBEAA02277FA3D7BB40CDB9F118AFFE6DF
7366C1AFFECDCBE6F48D6BEE95A261D3E1324904D580523F86D999EBB48B0BC5
1A05E8656F65ECA565966C479B5457C13DFA2E2818CB7C8DA45DD0F670D9733F
02B9602DA57FC3DA4EBADEA47B35C5CE130F89DD220D0A397DB66D9A419B2618
E2AA943086F532A510C746B3AD032B21AD8FA995E8325B416A42A27E94169C54
A5D39D1880120299FE67EFA7F0E6BECD3DD91AE29927F42C27ACEE5FCF6F6762
112BFC3DAE32A059845FC7902842E4E32EF78D180204F6760F9896548818F144
EEBB854742DC77E6C1DF7C55C2145519A0C188A7C194AC0D7859734D3A378634
3673A96E16D79013A688748340E7A01B9528B192CDECD9A82F6618B017AC6739
F04F2B712C9E38240A06AEFEC7C59F1762D2A9721B56DFF7626C720BC6DD47BA
92B2EE47E7E0084D20297AA9980F729B7462310F7AA597427E359A6AAEC57A26
49DD460CCF2862A55664283DE845CA49B9CB27ACAB658DD9F3D96CB32E1C3EA0
A578ECFEF01315332988D3A0BED2C8AB0D6773348C153178057D1E2435367E24
534F137619C2CC56EB4DF7C52D01B76D331D223663CC3EB1AB5C709C2E44DF39
C43E990235274E270A7A2B026F7ADF78C7BAB4B59F903735376585C75D589FEB
30EC1AA7E4564AF41B9FD3F7D90C3D494A6DE0D1810BAA814E196596AA06D356
69D1FC5F24A757229737F9C7B949FB9C5003E59DFC3F18C893E2BC5027A5AB48
7D3AE97ACE9737A4C221CC4D0EE1DA133F00D90B04EBBDDC20F2D6A5DE232A4E
D0F5CCCB356B5B7A269DB2ADDC5C2C2F25D65A82B6B1EC6C9E381FB62FF42199
80BC805321FFC97FA8758743332491C8A6680770FA6F20FF27734929671CE3EB
A8043F52
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 109 /m put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D59360C8C44357DF473
7964EB4DA2EDFC44A24AA194DFF3495E425BAB69118ED72F0D07C72DFB31A87A
502B95B1D757A5B6A23355BB8273110338207914A285C022A392896D5EF9EC84
74F52B728FF497953D64147467B6A0D3A4C16A65F04A963E110673C6A4F3914A
4760560F1D19F3B517024C260AEEFF8DF1E669EE556B0B049AAFED69AA3213BC
FDF41906AC98769A1C4659050DF98C1A43102B1413A804754F917EE81949979D
335191691E2BBC3CF8832AFF7EA7FDD55B548DC8BA238367627461453D8E22FD
355EABF5658643CF184F8960225C7AD41F548235ABB568A32C131737F1C40280
664749B03CBBA822D906C6DF8538AB10AD3E90FE73D3E620444AB9ACFE1AB198
A63A8378E8D7B373FE58EF4AFB6A05A74B11DE1D306462BE88001CAD6B173EDB
9E45140FDD567BB36C334CFF23E38D9BAF89838CBC99D355ED2B7112DF122065
B389AB179851BC192E58F17103C36627A09EFAD2AB75188A1AA975B98E2B9662
40778F2E0216C9392A9DA1850FD66AEE84B29C8E6C9D916726A1F0BFC28EDE3B
3452CAEBA371F6983D980F1AC1967C73BDD8CFAE4BBC809B7A31D95E85053F85
46C483F5490EE18B58958F3071CB121908B5E38C24F3D710C47CBEF947339CF6
6C5C2BAAA5D2773294EE802ED9D07BC5838B7805B9B3D2189C93CB785491B2C8
D9F8B3F86AFC9B39F9C0DD2BE97CF5160C89E796FB7734849F80854A324F3482
EDBFC06B0E5167E661C20B7ECF8E0637874BF154DDD26183804DEDFACFC05A6E
C4E0086B033F94D877C007C5A0C59A31AEB877FB78D35AF2C4B7837DBC17F010
3FD65684626259F28FCFA41B2F15725854B1C6337E2BE827D5BDCEFEB986E14B
EA0080B2F4E29927146C12384381D194DAFA9EEF1E59786DC96062FD3B20A36E
608135A0483D4A7853E9C5AD0A1F9CCF40ADCC25FCFD5485B9CF641752F3AAA2
7276B246307E3BD497D7F1E257D6FACCDBC39EFC692A0E952EBE3D30AC97AB8C
11817B76B85B8F859084FB13EA318746117F9B3E4807E3353F737C0A521238B8
EF53F1F5BA3D22CCAB908A7569A49CF563FA4A819A2583AC0726D1B2D9906663
297A039151682248D8C20200C5067D3514CE8A70B3D4D464ADC60FA1C909BCB4
70A138B06B302524456A3E262F8F871BA44D8E616ED3B10EF26BC05F24F8E7A6
530C4F5CD31F30864920EF9A31AC02E47AA327B3EE730EFF8AFBB1BB9271E45B
F87B1B1C70E45383EAE096BB45050C9CAD26D4A9115E33D0C07D3B16CD5E3B4B
37D14B57C082CE09631CEB9511D95679D1E4B8A7CCF058EAE5778F91F65C5E87
656B53A92923A01EF66F2C5F751837BBE9B0D2ED92E10B7AC1157823A6B81AF4
17AAEF936612778B4DE2B8477226D964794B88962BFFA7BABB734ED049788E66
B9820C4EC01D0FF87102681CB1AC2AA7C0FD0DEC85133E760A7178E7D68880F9
EEB15E1CAE2A0541882344F07B7DBC6DED73699EA64A7515BA41D0C73687B691
A783F95943EF6731469431A0B1DF23380829D351A395FF0D10258CBAC966CBD0

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 56 /eight put
dup 57 /nine put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1D577B7D81EB9B61496A8BEF677DBB4D8F34DF77A4469B8A0EB0ECBB676
CB4CCA7B5AE8F11C3DB4FE99737631A4FBB4B2F9ED0E80B3323E2DD2566059EC
002A5A1D19849DF316B2A9707357D0B32672BA33950B2EC03E1D6F6C7685DC6C
7F08860D60DF7104C1241782AEC0052AC930CAE2910F92ED90173C983D1440F7
EDCB2ED0664EAC163E711EEC1CE52303877A36971FF679428CD4112021DC5C04
736D596EBB05A122E0CF314102C95A9240565B1C597C233C35AF3C703E9463C3
564CD9F27851311DE1D50BBD66C43F330C413E80C8DD45ACF2177D49874AAD2B
92245CCAAA7ACC77213C1D9EE9AC617A49BD651F40D4277F01E219CCC27B3CA9
B97DF87962BC4FA5249BDE209E906A7CF6A198330B0C2E5258E99E6B6D457C26
D57C9C6BEFF7369DFB1466D4EFB0B7AF9756B04581FFD2687D1B7D0E91DF2A4F
757436432A38A4B91F109F7114DF9812D49ADB79375A63926A8F697E8B5426B6
01126B2CE72AC322B412C3E81F070526CF1B50930F89E768998D60BBCD1908A3
817892545001652336E76C9DBAE4531557AFE03844F52006B90413818FC19635
60387DB837B6283547762DEE4C2F2372D4A7148667DB02D56A5F3349AB292DD4
456E8D527FD572C0114307810C5369775D0A51C491B3F81F3E497C569D014D3E
A415EE3EB6BE2F91A6CBA89394108F51AD49BB5BE5906D124DC32C312C7FE7A7
ADE9AAED2D1FEA0E1F090B0C1A293ED0A7E490344EA40DF078C177850A285377
78967CCDAF2BC6FC46C90EE279563EDAE79B181D051BC7526712E716A8BBF9A1
2B812292EED14DC566D0E359F8B79485822FB3597C364CC83AA3057245F31F7C
B874EAE1040778714FC953CF2B8F061FE6261C7CD773E99EB358CCDCCB13143C
85349D25F4F79A932707DCE0DCCAC788917B215AEC1789E2641A453E8E81D0B2
DA84260AA43B78891D1067614142CE79AD029A3E6630266CD67E99C403B16060
780DC2E399774B3ED349B6B50D7BC3B7AE2B7E347EEECB0738DDB069423DE7F4
93860202056E2C18AF5A9087274F133C976187B6D20DEFC4037557AAFAECDA4C
8EE42921234ABCC481599E5318AD2DDCAD6EB0E8C65DE6DC5D631260C6C81085
E1A64EC674098C582BC6A164A21B7FCCB30ADF22B8BBD4BD40A0F89747E1AD83
DEE57FBF5CF2945FC9584D09FB2B78D451044C95F05CCFA9D62E1B78F5E86AAF
C867C2F746D29357997CE756B896E87732C9EC481F0C8DD6512A52B897C6D6FC
FED5946A608EA2655E2E96781042EA92E48DF61E9516F1139EA0D559090D3261
7F67BC8521C3570BB47278020D980BDB29A48D9F2D960F5BCB299E6A81C3C513
9EB2CAED8312549F43A6B3AB7C8BBAEB06E84E5E2F88888AB8DC1AF0FFB77164
CDFD43FBF1097BF5A798BFE567A0C88D2BA007CE9864BCEC8DCA5AD82F023B80
A59E01E928399E641F853D5AE365CFC0940C7FF73AB1D798974DD3FC6FAB18A2
D5DE73AD8B6FDC111D33248ABD390A5415EAE4074DD0FED90BA80012433C6013
DAD73A186DD3781C4A2DE4618A0304F4AA7C8D3CE9C313C7E91C8B132F22DADA
5704AF760B8AEC65478797C5275CE623D36BD9948BB8374AD0D5820417378BDD
3A5E74A19E7D2F954F026A343A220607F940982C3A10E193B8F9EACCA84690E4
CFDBE1111129DFD067C8F8809812F2EB88154A2F29FB92AD00FE713EF74C6D82
6EE7A4CAE2E70C696DB411582ABF31AF56CE5336FA11D9A0BD23A562112A773C
CF2ED23DEC7C33D4F94A33447B4EFE2D26897EA761E5F9969A6BC09D2FE98D84
6CF801990BA33B01999D867FFC981835829822DA0638664BE2175A5EE930811F
0C2A95436F1C1853209800DBBFD914A0EE3A38DB1E9E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 50 /element put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
A962226E1AFD39AD32B28B924B247F85B87CC4CE00A01F0DE7DCC439C05297F8
AB66A0899A135B400DA86109FFA8CB56DC528C494B2833B69725F533632F8717
91A4E78EEF79C4F59E5F068B6A0ADB9FA9E3A09E1B0F367030EDCE6C24B46739
6B440EF7EF8132FD8C737FF9A5C55094A4FD845C598C85B33FA8FF4604B2D498
35C34DE75C45F616388779122A4979E546C69AE146BFE0EF19FD76B5917D4C61
0BB4437843BDDA54B5EF8BC43B6CCB503BBFE376E3F006FCE8FB9E7FC2A67650
0E1992BD234C41921C8BA60F57DB42574EDF3E55B1F3B2F503D1A782A7A8861A
1D5038A92528316698BC6C65514CF7370E5E94D214C2FC10CCE2DE0E98AEEDCD
FA57FFF7BE5E18584211904C38FEEC98B19C4AB7CC68CF43569DD7069C6E39EB
290A8F9F631012F1DD9BD605E1CA15DB1155A0566108B332725306177D891088
98A75FBA1F439DBF3194290C38160DD6B1AAC1ABAE13FC2606E00768E5C41BD5
FC6C5EB127ECBF9995B3B6271ECD89B214B8316FF2F7660E67FAD0158F885710
C44D26282EF2F7F4086E8C4C3F2201C6D197F546180B242DC964F9F8C592BD22
8725F1A77476381F6DFF03AB96BA536D2C679B1F7D205624C297A3C6CBE9BCC8
AB923B96DC7302067E94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
ED277A492B42D88D0E068D61F2BEAF96BFE7F399175DE7D08981736F7DA253EE
331F97DCBB941B1832E3FDBFA7650E0905E062516F27090476AD2FF0CA78B14E
13CD9482201FEA5AFD00A134F3C357412CEE5E264C20C39E157567538D94E69B
6B7F3EC896D42594593A016CB5FD306F440F6739C7EE88132663A1B1D635E362
5667C0843D4E8E1C205588BDD46FCA71692EDD0042913BDAED8DA7D7C8016D0F
B9B44B7EE36B8356A8740617776F18D167F6AD72D8B006DE3E4BD74C1CA8891A
8E08C09A601506D57B5EDC2FD998E405A987C4205CAD91AB441DD76337F8E54B
79142482B2FE7853B7960061A6C420A696A0C47538C692108055EAC99DA91CD3
B0A2B7AA4D3E1CE749165D28DA7E2AFEAD936AE066ABFFCEEAA68E1B41C74CAE
CABF8616AD95FD9ED3B11C918BB38D165644346F51053A08C551220E93385C29
C2E8B76655CB57458FB78C6ECB6460A281A80F502523BC02292E1B8125409C3F
A734449C3B34DADF947075BE99F21B31B00EE34F824317E8766999D17EAC8B28
132D2BCF954CD29EB760C8F0114D19D4BA0161537A4B2E556C0B64CE8AC122B1
6BF9132830C8F4EA9DED9CA2889A38D1393498ECCDCB076A6A7E850ECD3A062F
050B7B9907A9F37C84D143DEDCFB27AD763C746E1814DAF381905B63CF391ADA
2DF440658BC5CBC9F250F58B0661DD335E29F1931A004EB68BF10930ADD30B07
362F8C9C7F438CDF8944DD5A06583A75079194054F8C06AB22E36F01DF05AB58
428703B5F8FCF7156859F1497DE012A4ED81A8493B153CEC0FAFAAED622EF190
69ABECE38D053D6CBC34EC86D24A93624C7942CB3D9219D488F9FB992F7B7A7B
D6B0C8950170438A606B36244408FA18CCB93DDF370452380862FE3E7A56C8ED
2CCE3405EE642ABE81E3472653B118594A55413D85A2598C9422463D8B630AE0
02BCE4FC0163C20233B983D6A9B7902D0576B1AC15546F60329C64DA64F101A4
EA8A0FF3435977B74378CDA96CFDE41A5A9C4DDE601FD58BB5D3765E2387F197
12D109458CE00577D739A647E01CA61439570BD78FEDE4447480B542B229808B
A6F9636F8B94F996A9AA078DA71BCDC8C90AA36570A762470D545CE6B8DB9F8A
FB687987D1B6A10A4D671B25ACA342D6FBC1E488F81FBB6DD079B76D52CAA033
5D7A1972441590EB25F5FADD0126DD1FACDDFAD852DE686EFA03B2CE79CF2B15
6C144EAC81925E2ECAC5ED93F2D8249FEAAB72F6E1CDD8B7717DBB23BC73D4E4
E6B9BC5E023D2A3D947AC6CCE00E1D5247CA9F5CFDC5E6C4D9364A7B1630CA0B
D0282E98301B5F1E1C12B0E61751804A6FCBC03543F005AB57168229FD3DB119
73BBA3031C1634BCD70D985DAF5E7591419E8DD0EDE5E21B6655769E33F3BB25
4F206D8229804C61503E7E0D25DE6C8A067B6922582B6B526F518231408ED09D
DCC65E1CEF7A0818BBA19C6C51AFFECBBACD6D7E6FED25180F40354199FCE844
F2602194DCD6A4855C266DD0BB7CEEF41A5986B0057A4C06CF7031E1A081E75C
A959440D18A5F18617C5DDDDAE50A44DAD3973821B4ACBBBEFD2DC017C4AC11E
5A6EAA292E1E833265402264E3B583EAD6832E5BEB7383E2B970105CE4622D74
6DED0B4FE277F4F2A54569A59D638F4770B378B00586F8A890443897F479F5C2
7BAC92012E848C9B2131051DBED189118B9279A11243BF046098D3FC1E4CE944
8CD7D00E32944D0FAA5292F033D143C04BEA418AD1B5584D35A6E465424B0633
7662B94E70E3FFCEFE1D9D56A1660DAE90B755958197A33512C917645EC11679
69BCDDEBF9C837634AE662E06B4FA1285C9898C63CAB854E80B0886B08A72B1D
7674BD20263EFA5B048D8DAB71802509AD1931F143105EDB65985999B648A291
14BEB6794EF818060F4C05089DC0B83CF61D7087A1AF7E0663AF1C2FF053C137
9F44782C3AF121144C3038D3B4F66E0D1013682B37DB110F8C0036E35125E11C
FB8F1E397508BCB97A2A8751D5E97F2E173BDD0A4632BBD84EDC3F4E9EDD96EB
FA83D53571680A9561417015FB334C602DACFDE349DF89865CB602D83CD2DC87
0E1AA53E3712C683F56B281D038EA627ED64658353BE1CA3769040F003E92212
C666F243547ED3120BF4959153CBC63778C1315F6155E17F406C22EC02CE64CE
9F9DBE52947CAF49A78C197F6F40CB8387218CD94EF127847A48B648FD0B6418
527BC099461F3A9DA8509E7EE6AB98B4BB88F677952B50A79FBA651804B7ADA8
FF0757E1E1B9D9BA4F49BF0A476985495B8E94E473052F20C5E417A6AFF75A92
ED110F88E341751A56221115586A9ADC136D965BEBC0EB7984D2AC4CCF967606
37BF1042155BE10B371E3B43704BFDB66CCE11234FDDDA3EA1A434F7433154B5
29297E4E8AEB9E349683FC5E1C323236F71092DF30586958C707F0205C3F9872
476833B252DE278B7BF9C10EDE96B37089A1D702D5541B68C59A14614723BC14
67EF2FC0E98A2BB28E5933E2F6E50D3587A0C25DF46905F9EB8284105CEC3191
8A10A189813698D1A2701CD47EAD956DEC63D4C0B1B05332FED3F1B03471E07B
53966F0A5D85EC4BDAEC16B1C259922AD6DAAF413DD3DC1787AB924A6028F114
7DA54DB76F0405AEAF034D50D17F2A2913B639720FF467559773DE1B8637A7FE
55DF98DCBE9015D4A4D35B006CE68E4C31C24CF968810067A43B3DCA0C54978C
821D33E6731FA0C386F50D2C9FC7F252AD669BB39A1949292551BEFCF0BC932E
D8458A998EE077C857CF8618ABB04B362ABF983E4E17BC5EB1B9A6B368AA1AF3
A022D06B89D89A8A4E41FD9740AE9B985269CB4EB8C5DF677B725B3F51746691
838E600146F6C88E1BE994C9B7BF6087B51CE82D5A1DF120D636FBF48D278312
69DD7CFD21450727D615EDB0E86B46D773DF1959595A4B58157980FE07FB21FD
4553ADA5745AE8EE1F8ACD9A2D04FDFACCCBB612308A6A0ED3AB689244CE539D
01411D45D2F5BD0ED0868159FDFB3820D02F460E2C2535BE9C77E57EFDAB7374
603762EAAA72B0B40EAF746EBD64BDF181EFC6631175E77D6B6FA4121E1ED7F5
ED23CAA7FFE09897138C27770510D95D6D99B372DF4649D5E120C8C3C96A3D38
A88E5D4A95594651916D10434937BA7ECE3B966FA4A35BEE2036FF9C5C4232AE
2A782AD53550CFF43B4DAC2BD3A84C1A663BBF153B1A341AF31E0DD72AA1D673
5F23ED2BF63A091BD14AA689194994A690FF0E40EC09EF43CFE4C05C80CC2204
FF31590F567D1D45E3E92FA14AE1F634F3FF60E66874E26FF3F53DF9BD0973F9
49D378E2A77FF77B7DDE4DF3C603A04E426B89AF3444F27F6586BA423648F36D
891F5BE41F42B076551D8FFBC92AD1008E4A5662EC3FEF3B6C4816AE98278BB7
3759A107C62F9E2D695690A210349D897BCAA28FFD7D0C62E23987C6C19A8903
DFA1A10FEC6CE7AC23CC0CC2B92746E8267FA78B76555EE5195CED354781083D
C536D7D9313A782010E51DF342A7E9AFF90D8E0EFFF11ABFB1B4BE6B749342D8
1328E300C3AE106BAE1CB0DE21F608E9753E10294921977931F50031F5158833
1F5685A23FE1BDAF043D8DBF72B03741878DF93D518B48E4238F08C98DF27C75
4FF5970477BD6A43D4914A50B693A873A285371846C88ED94134DDC7221918DD
6F56C90F49DCE27B67727192F4791D5F55ADA8014F4145E91092654C98ADA2EE
C783BE56974386CA29D8E8E9547A331F1D85CD74A0EA882B89D035323D6297BE
0D9B3B61C751C4031A902B56A1B44CD29AAADC864EF693F867697B1FCB8A3945
E52100AC7751D1622C478F8FDA34EE32D7DBED7562E81FF3D2F463BCD4AAD095
5206FE75056439350C1A3EA2E56783A06A633E09FBC31948174053058668597C
632B3DE319618E145A868296656B253C4D0728E973F41B057A7126E6971113E4
CDF7246CD9E8A409D82963247298326EDA1DBADAA3DF3C2ED5E7F2D3C63DB34C
719CF324E3E86DB3A76CFCE5367A50123D7289422BC1DD32398E0E331E9B9408
5876C16C791A4C69564E8AA3B584E4871A9EB948742CFD23291A7154330EE4E5
1426748DC6B2BA0D675AC9D079546C415488407549657908B678F546C80EA88A
9ED40D7814A0B92FA6529D2456017A295EFBBF74CF227079D25627DCD5E4B898
23D26F7B7F6619516770986E63657107664F1A02DEF20F47F82D531A4807B002
85F9381338EC4E6FDA2FCF53E35A741C848FC30BD21F41D772CD6E2A986EFF71
F29653192F7667D4A0E2B0DE4267FEBCBD2DF18B4D286B0F35B8AB2BFAAF859B
976DF867D8694F5AB4EE1DFC0FA0BA532E9652D2EA078A6A4A739B31F57AC85E
D6E6F5099188C960F0972A121A1ECA62C07D3DFD25A866A52E36965364842B73
8C03A2A4FA12CD17E40F47B1A8CEA347566890A6EA1EE868700EF1E66C695C92
A16E395003D0C871ACA87BE5B850B03CF57CFFDA70FE081A8B5479177B1E2A83
D05419099B4CFFF45FA624FEE0DFFF8A4A5FAE2D3C7AD61FDC324AC0FEE40FED
3ACA1DA7CE36F57E59D651ADFFC44FB9BF39A6B4CA6B7695226F5C7C48144F8D
2849D20ADDF2DD71A5487ABA7166E7B15772BF5D304E919B1F4DF776068CB045
FB92DAC28CB9973B54223A6AFFC23A3DD7202B12998B52BA27AC3DCF9529FEFD
CD5F863DB8E924CDF75B499E818FA3D30FA74D1895F13D7C9FDA3B46775B8A3E
07D5449DC0F09FF30F9EEE68A3F9503DECADED952D333F59437F1DD944D80AE4
50ACDDC26246C5409A59EF13D0C2CDAC6D3B4AE69CC6880870CF5E9708798798
5770D8D7B7B4865D4DC3BE1FDAFD9348E2862D2A9617A93A750D775699489019
AD6E4639AE3E5B094BA289575E8D319188076A333500D0312785F1C36ABC977E
0A9600985DFF85B851F454B63BC69ADBD379A36C7FCF824EF67D70A65DFBB7B9
C37B81DDAE9A9653D63EC2A3C099D7BACB188496722D1BCAFF6C072A9FC358AD
E230347E487001291D55942CE4C69A59E3CA86DCCE44DA56776F12804A6541B0
0BDA54B0922268C371467AA7E55F9709DDB0B634B55BD979E7AB0F2AAD6096BF
7769CEBCE18A3FD13D135F9EE20D665CBCC14DFB63586884E7D19D9BB398DAC2
02D550443FAC7A45C5095764A2C713B7E571DB1EEAD5A1F6C5B0DD055F710179
8DFCE69AB2AC153AC0E04F55F8FEC487FD7ABAA449DADE5A5DE3E57C9EF0DDA9
62972D095D442A81FE54253FCEA4655A36AA42324F899882F2FD6130D15D3523
65DD66CC9FE7A0041B01EAE4498841B54106DC2F3AE86822D2F68242B8AF2614
E93C56ED2D3AFD56BBDD0A1F2E3E9E8F8BAC3C501FDBA1C994938ACFB5FE28F2
3C14DE3D0A52E68DE70125D2F11C9D8D6D874A8D4B9676ED5DD0E4B4B397E0C7
89627BB11044E75D8B5F1200BE876B511FB14FF0A0A55532D0CF6644AC8A99B2
D4B009380539BE578B2DA636DD98B1EB3538B485BDB768F19E45C0964361E093
8371419CBCF430E849A7476FF2F2696CA784CBEA57E4DA1AFC39AF31D7D78B53
4CAB15C74E8106A3588B590218BFE6000810840FA418B3452B05A9E0A4D4AC85
620A699E6970454D1A05BD79020B1CE3B0618781EA89BC78843A897FE3716237
54E2CD6410FDD0D2C9D73BCF1B830ED860EB8F20077BB416D62D4773B5B829E2
2336D85B2B5A0A94CD9E0FC2304BC953BA3D57813548F43D6CD41AF5F922EF17
584C74D02537D0E802F8A8CF828E60D68004C7E7E6A58B9080E27D59BC2723F1
FDE6946739263A644BEFD3E82076A7C952F6922F9A7CABB2CD0B3D94D6357ECB
84ECDA0BED9EBA6545141F2F90168AA0011A5494D0C3D5E5D0AFFFB34B48127F
221A4B711C0CF0F152C12C91D1DA169275FA32B8435A15C476E24A4FB28E8D41
D3F854E90F18EB788E7423762A706C68A14A5DC9E2C27A19BA8CEBFEA6E1508D
31FA0B6AF4BD7643ABE84EE02CC1CB4ADC5F61BB3C6BE501039B13E43369AD66
D8F3FD0E6B795753BC01AE72A9B05A9993B54313E01D4F3F7693FE4708FA0799
DE4FD8A7FA060F7513FA8E74BA475919B3B12C563DC05A68CE6C4D98FF473937
8956CBE160B52D0A4D40DC4438806776CBD7821C499CE86B4EC300724F42B711
0DA5557EE06546282F4CA95E10BACC6F3BBA29FA3AC2A43511850989FDE81875
68D4D19A7F3E2E97C872A16B770463C3F80066EBC426D7BE0A9780AA4D0A7C05
FDDA2D4837E6476F393A5DCD9C7369283703AAFDE0C262F5BF5A7F507B27B604
0975B0F7D0CF7120
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 65 /A put
dup 71 /G put
dup 83 /S put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 109 /m put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D91548869B4706E46E
787B394B35A15F8785449E1E4933AEEC5DF2260A93B782764422692D186C37E0
C235BC87DEDE44891A55A65149B4D34B58A0472090D5DA12EE54C9ECE80EA4C5
089A657E9FDD3E66FED6C967D6884A05725B9AC35863F3B67E8B6C1FBF5BA0A9
34CCCBC904877535BB256C5B5FB6843F134A953B5A0533BC60CB31FE14A124DC
B462693AB58B46E142A032BA8AA21FA82B278A73BCD04402AC0E02C6BFE8A055
FB505465C6FAED177DC1F1F5A686BABDA7613FBFE28C28F78E48F7E0BCB0D6D0
5CF8C8C9ABACAA5B54BF4F022D561046962741FF682B166812DC68C93144B5EA
4D59482A8D2A88C6242E27E179E1A977662DFDB921798C3A39524D8C2B7E982E
B6C5179D89A5D2B2C62BC83237D5953C6A76E4CECC6D70D64EFAC0982646F708
22479FEFD44F7B41D77C0C7A74EA80B58615781E82ED55645C6AC1EC92BAA772
8381CA95AD9F9D54E04F718349F44A29BDA7E16C6756F8C5CE5F4079D98CC222
5362C813F5C6FDE2DCCED39217E1506D53545B14926C125CB2332151251DA38A
9C522E8835547F48E91666CA8B3EE1411DC4F4C81FB8D6B9B9C6E1AA24F6E529
403AADE94D7BAF2B00CAC2EC0CAF9423816EA9BEB76489AC1DFF5E58D09E2809
3165655FCC4F495C37B325C0DC111706A85E7C630BE98B6F9AB44E9A9A55879F
1164A32A74FDE316D1645A4FFC6730DC5E30B0DDF27D10051B045CB558275B23
1F48FBC7BB8A40CDC021BD7D9559254A72B2E7B8169FEB38BB395DED77CEEFB5
8290FAE628A144EB889C7366DFA705EF1EA34EB7FCDB1F05C67D7F8917EB0EA2
BF0FA26DF6F9774C150E96142B512188782E7B3D5FCC9429BE7ADEE19CF74778
43D63226E3535CB7BC7470A52911C591E36ABA1E82BE44B74EC43962440BFA0D
0F88D4AF6B965CE886F95E596CD9A68C824EC764798C7901DCAC467FC2039467
3D9DA92477284EC5D1CFACE496DACC5BEAF2FD6AEDB2193498F8D752EE0F12B1
D25681FD4986B3D0009BCCD3181CDA2DCBCCCDA39723CDCFDDBB1A9D880847B1
B722E9021E6E038E68291873A96A8D4902956433D5BDBF5EADAA24DEA6625CB2
4B600240DB7E7C8C190CB2EE58EFF9BCA0888CE861ACF01B836BCEDA2BE1B695
BBC8FA06E2229E56941D3E78E79B9C4FC84F8540D0B1F950C1E5AD9A3892D99E
ED8731DCDF453724B9E50FD3B3BACCC0040BD1ECE32367B787C36BC85E49BB9A
92F688FF6F4FA0339E878734A44E602007B9EAE83C796364B08A3E304262D8AC
7B4C83F112CD368FF8B83FF5982A725941AAFC1110BFE9D9D190D8640959ED40
E205E19FD2900B6CFEE725F2EB1627597726AEF3D9DB71052A49D47EB8BB5A48
80E16A50868B73274E8FA738EE96EF188D8CFDD388AD8570D2757C6DE9D9E14C
895B9B13B538CE221E3E5B45EDA4728F1BB98EE220774B136212F1BA9D236D1D
216430CE8865AC96792C9E85D5F5AE98A842A5945EE7EA5C41DCC40B71FD82E6
E0A3A749C9DAC72CBFF7D7CDF37C4863094C7A408873BE943CCD507676B27FA0
820983E4C26F5317D84CF28A3938EDEE9068F87A3EC97B3D12748BA2BE070566
47BDDF0A44A1CB2D9F15977B30D4ACD863D10C9587A8941C5BC5EF7979A85C84
17C9347C0ABD1675445859339B1795D12A00FC50F3A7A66C1148F4BC266E7D71
B122F113544DC9B7BBE0E1A1F2BBC671F4C6D64BF123FF51C24BD3A84E75F0EF
FE0C4B311D08DB6B34299D8340128CAEF3C72AF1D776E7153903E808ECE2FF3F
C3DC05CBC4B5D1FCE99EBBBC6178F71B21E0CCF5F457A5B7BCA5FED4F9B4770D
BB500D10C288E976529AB0DF21FD78C810C8F15E1EC3EF5BAACDB1EC92B2BD5E
FB059D32929AD9D478B729F9F92BB1CCB7CF65ABE3EB2C19FB967C46FA53FE71
9C3F0A4B23F8E3E49FF33C4C16E0E76E5DF2DFF3B70D3665410A020E5509E0FA
1303F0A9BBBDCF460DBB25B4C52618C5DC242618F04A3880FFA941FAE3FF4EB4
6A5B2BFC49A2B78707466F720F381B8E40A63F008B47A8240DA70EA9DC4CD69D
8723C7E7A5B018E8CD90B937F66B1B059909FF2768E380EEC7BCA3693D4A7092
1AB4E5E7E65750A712982F9DA15F1F3CBD26321B0D318A42378C294D47DB7859
FFCB3CC7C96FE1DB0D7D248520C2D0698C337B56B532E5F795E5B0CF6837F3F0
9FB868087C593D31E06CBECDD4464412CF62579850445C6624B9D04CFC42EC88
B294D822D86D66A97E67C4A9ECB73B234197EF91EA2F784EE7C4AD705E401949
83EF63780E79ED156840684878E7F48DACE6F37035CBF9695CAF33D8F9984F27
CF900BF191762EE9E80762683AD2338EECA69AA9DCD9DAA2532190EB2E2CF6BC
140B6BE4B1CA5941D988B565121DA484489CBFC898D8974250C055496257AB3E
8CE83587DFE37AF249C736EF3C582173F8D4BB3EA8EB1FC5D00E48F4D54D9918
CFEA9268F7DD6FBD1709D94F3FB17EC8787D6BF1C1CED984A1A43035C60FB055
4524EB2C179F8C2FC948599C2EB94926B06F33669930EDBDA3900C3D17ADCF80
CFFC2D62C421EE3067AC19E1547DCFE443546886A5B222A8F6359B827071B5C4
02310A38E49955C55A34E12BB1E5B367361C9C5FCFF38CF00453A6ED5D497EAC
7B3EB393363634BB6215060A502E748D8297E420A8A520A8017D965377661BCC
6826E95FEB9428028E78C5234FA6C52BD250DDC4C544E93A6855238AEC182419
675DCFDCE44F6FCAD72FB81B6A67040073F56EAA893582EDDEA9EC5ACBB7AD9D
15D187EDDCCBD34B0579459313CF9F44728C9AAF7C58E8A64E82EC3EFD61639E
A14005BB162EB7E032C0922422B4DC4BABF943C9326150DE6B435AC7BF0894B3
8A7985CD2B2EBB751CC69F25FD8B4E747CC82AA1C79ED85327C2BD8D3032A07C
BB361B8B8D1D0131D53D8EA4B67C8F1058A4D18CCF7173C391796DA4973911DB
59E32DA85D4D6EAC73A033C2EB516B6C1D0DF0613DBDB071B263470587BE865E
EF7302517DEB663D7E5E0ED50EFF4E61A81EE28B13EABE6FF10390D87789AC74
B3AEA0BB197BEF6F1B337E19020330F9230D8041FC7841FF08987C6032563C97
D5FCADE33FEFC9A616E83E96B9995D539E4236F0747F5CAF8616EAE5A6B98AA1
DA77925738E7752CF35949DB4CBFDF1F49C2C05786945E07943450C5ACFF8B25
71EE6CF1D4BBB2BCFC6B7CA201FC20C999C450E57CF5FB20E99E276BDC6C2B8B
3DC1EB10DBFB940264D82639D63F1F8E0532E24D2E4EC6220EEF469791909EB6
2F8103F997072F7456BB6138B1DF152470E69AAC3823162CFE95AC1C9EF9F7AB
2B8923D734F9EF138948F43647BC1BBB0FE4B42A6984
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899A767F6A99C78F239001C028002478AB
E12A94D59AECA66F54951972795B4EDE80F67BF746E85C18F990C54B1A2A148D
DB41E49F264DF5FC0C890B501E1DA1C0D5ABBAB86B8C3C4BD9808AD436AA8DEE
050F18E90E9529CCB017D9D48DFAD3F8C2D69C77F37924E40EEF507C2069ED41
EC4BA5059F9A8983D858523953F8245D2B8AC53C60CD071C47F6E34CBCCC8B2D
D96ECB3D65C5F091826733619122A5E291FE16EF8C01FB54EDD95A82087F4E69
B7BCAFCC13B34B86F06197BEB2C71851C9B20DF35015FA19A6504D71557DA3E0
DD04D29C5BA37BF4193E5E18DAD2FDB2979ADB9D6C366646D36014824C1C2F4D
025709D28EECB76E4174BB1BC3F72FA9C2EBDCD2C65D9F14A564C797BD18BDAB
08AC186C5F47D69FD39E64A06B4B504C39936B614ACC13DED5078D17D2407154
718A61C721BE6785A1095DF65774AF0C2948D7538FB7D67082017D7EC8B32CF5
128FA693826271DEC0EDA53C557495692F7B0E0E0D3E3FF519DC261C5351D84A
AA8183977E81114F7C4B5CF140E0A0A26F922D82126B82CB98FB5B5B4F9FB617
30FE3F39C338E6A47CBA39AE6DA19468F81D40609F4EE464B575136F7E638FA4
19163341BC089FE680D9B2751763F16FE1D2F94B1FD2A4031F48A018862A3CE0
7B58EDA0D8A78E9B513CBADCFB1E70FAEC4A07E4E8EF03028F94B76258726C1D
E837680ED06921532AD45ACE4C06C4901855BCCF6AF9981C72DDA4E05B38314F
6AABD8D83F138FD8B9B60041F594E5D19383B2D7E34D4C9132C0AD46595DA14C
0C957747A625E5B585B02DE4D608698A04F0BFBCC4D3B59376AC64AE71ED4545
B07D057F856AEADC2441A713146D5B42D12EB8BC77822B924567FAD1097784E6
CBFB994D5B786863CF103B0988F3E22889A3E4D54BBD60D94F41C22B5453AE8E
086D0A3FDE5B518FD143DDE55E91EB1372010B1F1AA68FAF1DA06566EFDAD282
1F1EF08F815DA9FC81DB308E78F05DBA387C9F061DA8132A66FD0E8177B9BDFC
D593F881C2956C4250F5F28207671D7808C5DB8C916D3011D02CE45BF5E62E68
BE421D2EA0B2B90B9B8A38465533F2651C12BAB103BF99421DCA2A1FF4A14E49
3D274880218EDEE4A0E3FE7F848D35BD990E9B78FF583B35C8F097D8DCDA6E17
B96F08B9F29B0D513675FE8E849CF8FA4608C6DC073673C30F5ACFE803EEFA0F
9DBF7E8CA24D856793833B89F87E115F59AA2BECD6D87C8A89D49A6986A70B5E
9C5905E11A83282256B9EEBAFED19666A942EF50730A103B89A152596DD03EC2
262FAE9A22CC60739504BDCB140E3F6A5CDD3C57E071F52B765F40D1A093ACF9
C19170BBEE101A6BB71B3C3FE0F42DD3284EA715800AD9A9B7AF56296934D03B
ADEFF00F316B9337EC2889DBFA423354D9F420228D72FDBCD7F70E20616F63B2
C0DC1B982283844BF6CB1641369CCCE9B39EF5FC9348E2F27500A5BF924B7912
38D3A18283F6E71E56399E56944BBF51C1E6240805C3038A73D497F7B3A68BD7
913FB25C4E9E9AA6A609C574D48ABDB27598E5EEB4FF890CE205FACD0CA88982
82CB81A467595AA040632B8B3659AB24DFF6BC7E759B86E08B5ED6823AF1C31B
704A25927BF4B58EF85794BAAEE4BF03E66F3D808D3FFA87CCF47A4F591065E0
4F45CFA1B0CAB9547A683D4CA6293C66AEDE3AAE9A0856DE00A4EB68B4B991D8
822847C070A6CB7D5CFD47425798B7A60D26292EF3CAC51DBB388102E674C972
E3A3DDE9FE84A0A1C31B8CFDA9568B3B836A9470229B657876DFF667E3F5B455
5EBD9C91783A48DAE65C046D67C5A6320DF9C0BFDA998C2192F01A3EAFAB4EAE
B1EB6FD412A2BD7F04CEEC32B78372E74A8C3085D4E366293A58A5C7DB29BA41
01E5B57F50D5D822C2704F4DEF76AD242C7810648DC132E26F08D3DB7A1CD5A3
E4CD9AF1F5052E144B535EC56A0A2F82A1057546222028AE3C51A22D69AD0533
77364DEA41B8019CE51DE790C43FC8DC613D03591A8F2D965133EBBB3879571D
CD924B00A2BD3EAB3F9B1E1CDA3283C0424B11F4468CC2374C0A0EF298DF43C8
37324B907FAD864021457F78D3192ED99299F9006DB36350F6405A643AFA5FA5
4A1BD68B374A2EBDBEE1369A4C0217E7B9DA23A5068906A9DF56BE4195B2F743
0063A092EAC79BCF3F74FB6FC2C99AD301B93AA7F687B33656524DCF4234D167
F6AD72D7FA6401D772001C19E1A63EBE7E645FCBC1124D1F8F7DC7462B37BDFF
67A182804CD8A3DEA2D62D8204DD98CD09E67E806F75567E77A8B604F45E0301
5795FA9DF7D53A659E622B8AB5E575E26F8057FE12366827BF92AB47EDFEFF1A
3EA9F8F86496BA59F7F6268BAEA7A9653F1F3E9CD284A2B17B2F16E43F51A3DF
99F05E3CAE992A53975B421AC8F5803B4D13130F9658D7889941F6671B195BFD
1E73456A3BF43DA38B8587807ED4A60011B4944C026FA03D7990ADF5DD59053B
834B2675FD1AE70C94832B17642A0119B5772316A2FCAF0BC5CEFAC85FC4ECAF
428334777D47A0D91AA1346BF05836F06BA177850CBF61EE308AC29CAEC467BB
2AD202CD7FC7697389C795931778ABB9B354B51AE29FFC41FA65EF7C6391C6B2
3CC8E7A011AF17BB14422C329AE0BA411A236EC000852A744AADC8BA2C0BDB76
7DEC278214A2A47DFF9A7F01AF160394A462D09953DCC6B1F182556DE91614CC
C4AB603A5CBEF7B30F957D0CA503843602DCE3AB585C79E3AF3C5046DDFD43C1
D0E4C1A6F8706E783D4C2E72DFCFB57FCB0D9C6CAE3ED3A83866A11D3B02B885
3A3ECC9A26157043DD474474785A57CEADF73E75DA4B8ACE7A52E17D7DA82F52
44AE0680FEE259DC0A3B03F630B2E9785CE304B9DAE508C15C00B22EF6C74810
EA0AF8546B7F4473BFADED7CD69E047C3EDE7356986D19029F54CA543BA40774
F2625BC439FB07B6B3BE5B62F815505770FEA850B5623AABC3FCB97298C856D3
7E4FF71F3E509B34EE74D88734FBD23644C893E47AA009F8E2F7482604F556EC
F1C5067AE5D1F440E2C99B8641B435C572D33DD2E20519D88FE3B21330DBC80B
F84CA1FC76315EE29E20F73F11FC9691A6FCD3F9BD9DC61F254A0AE63B376AED
6B47E37CBAD4411ED47A362D42E5823174EAE9ED878D047D3D7A1BE9D3BD22FC
9A036A7FD8CAE5BEA314B5CAF8EDA77B03CF5877205E237A82D0321D07A21BB1
D5FA6F27F76366D1563238E7E4F0B9BF31243F791A848AD41C87CE958A30C336
2CDB0011775929B12CF9EE8257896BC944D2C8110004057BF9DC36CCC9066259
3F644D4C60B3A2B6295474A904D9C2C0886337D8AAA2B6937BE556094C65C96B
8B323F5F494DF4D46B342E53171B02D48C51E8B11DFF2D2A7E40E89F929CD778
4F20C39D85936EDD127743E91E27DB27D5466CF751795D7BC13D87D14A7C115D
2C86313375D8D768F9DA94855A815E6556309B58F408930E780839E1949DC6E4
C61610B2785DF0512B2EF428A2923A91B2F77E58B658552F985D1680F26F5BB2
94023283C8981EDCF8E0536F0E0A766224EA5D456CEB25D37B16D2C09E9887BB
264607F6FEDF59F7F0C15A4520D4C8D7902CEB4D2B53196B07D1FFA3031B3979
2B869AB71AABE3CBFF7B18062C998E1B7AD4B3D9224F0ADF93FA8053AC833F42
51F04D159DA667468781C1D4575DA8BB2101894B0C047DB7EF79BE854148287F
80A484F05D7624BCA26C14569C7CCC7F6499CDC87F4B2107BA9A666A041AEBAD
0827F1CDB91156C850BC4C84C90676AC614C3AA51976290C34C7B6B747685680
D6435BD8C66B82390370748311C9CB80EBCE9F662C46EF31E57B4B694DF8BAAA
BD39C5D2FB3473CAF693E433EFE4192FD100858768BE779D08E020782F55E907
D237AB1821B30B9B75BDB608A77B6A9BB05860A2D0DE38E1BF2F2D44EE311167
5DAE1E55896822628F60E941AC5B8C48801A09F2A1A3B0BE7CE8DF3FCC1E5306
23D16885A589F40C7A9820DC1FD444701368608E6AA9578F7A11F38011AA2F3B
E23F7C5E294A508B5367A11AA24D27913693E9F78BC86904BB6D030888E2A61E
69FC9B775A007EA8871F0963D628616B4348C9052A80CA1DC810D327953F110A
5991CF32B73653724D1CCB034B70C51814640FDD149783BE8C83F8664FF2DFE1
6524FC2F4C014C15C3CBAE6B18BC3B644F01991FA723C5F22B0530CD3382E7A3
654A11A996090AAE9F653FE3B7091443BCA512BED90F03DC4316C7BA5A7B8438
225EE6AEE4CC2D8A3FA89D5C588C94E426B23B8103DAD5CAE80C6547E89D4A6C
BD71922806A7DA4AD227C89956CF4719D8E095D7601BD81EDD908928FA612F58
9CE439119194010DB7DA78ACEA700035DE05AD9E9682F94AEC9E3CB751B4D088
D95B5900E4A7B55D10B2689854C14B43489CFB77E98DB00ECB145C9CACB70D4C
06637A4A1A557E69F42F18F83E1E5076444BA39FEF295AF9440C63D352AC97BA
6C33C080FAFB7F9E376BDB7988A0C0E59DB7683A108E526FE1AC4C1A47D8C21B
77D566104E12A987146491939F10C0CA81E1787F6C1979B3371D167DF9743921
5C7F715C1CD466145A527ECA28A36B339D81FBDBF2F9E5AB5817E001E4BDEA6D
E170E6696E68CC777DB137D210C0890B99274322BC4E616E14D4D40BE64F443B
66E2FC9C94D5828B9A2A19558DF4CFBA0F064867359518DC88DF321590920F28
A3C9FAD06D5CB96D262282A489825B5C6DAA213D771402422DAEB1937B920E87
85684183312F60BC6167CAC651681C8A2119E2CA7EE4BCB73DEACE6DD9D60E8E
244F5C5B6060D2DDBFDD9F73E912D0DC8CFFB5611705DFF55440793AAB62FE26
D2A5AFF34530F1298F5DB434B7EC51128087D8117A4837146CE7A0CF9A7C0270
756637C9164C8537DF459777340D76C4F7F2F325F764F1E6AC2B8729161E405C
F06B91E781399189F52ED09A48086B40676990E4B52975AE895C5B0BAA2487A8
8B529F132058E88858EF43B4A403C8A7A52B6F61BB07C99A752D3D6DA4AD11CF
A1E496BE684860C4F0BC346CFD2EE026BCE753BE1105F4CEF6A8D68267EC3138
E4079D1FD61EB484D5CD33FDABDE0E2DF365412B509BB5746F7D44706674D637
CC19B6F1B24455E3554298ED4C5C0A26B55AD6336EB49D654B456E636D325E79
F6F161133D99ECE3401886F9B7FA9B5BD6743D6B0F9C7B0ED504E74A5FA95B1D
DBDEA529B9754B4F0E7EFCFA401294836F632C7F9DD6D9FF10CF6875195B574A
B03A95CE546519311DD9CB325E8EED3C13682B37DB167685C0A610F82CC73D68
71F5BBD8D6B0F99335E4164E6FD3873345D2F945E28E9C85C18FE6A505203436
103DD7A69D28458370BD9428F48AFF969030FC38B6737628E568BDC99C88D6E4
973E0BB25C6CA4081CEDEF9563108A892671B11DD33CC102F70F1D2E39C01AC7
AA8D9E2F9428C77FC9CA9F4870FE229E7515CAF789B790C11BC7113F026394AE
134466B34969CA9EA689F0F7E115CCA85BBFD0344A398BDCE559D3342D945FD3
F88C9EE49289F24ABF923BF1F0DB37E3FA7D32B6EE90E0B7F99B119BFEE6396B
6777C11ACFDAF8E39BF35DED0B12D4145F5C6BA3E5A60143FAEB063D23BA89ED
A836270AFDAE38361E21F854BD89CEAF1BEAEAA1A99F75E29C1F9E13A006EC84
97EE756EEF7901EE2D9B82790D00996A785B1E00A91B39D20767ADE3123DDFF8
7F90FDFD8EF6448420AE213D89FF97EBD762D9983EEA44D361A23EE444E65664
EC52070597073759A48F6CA273AE047D7D0104791586999A6BF443E372ACDBCA
8A7F3C8F0C1521CD2BA8360DCCD0C9EE567CE891CB30E250A98EE53C261BE8D1
6AF8B7634C14BD447CDC89BF0E6F05911EDA80A4C537BFCCBFF5A25E8D003713
367234E5B93A0760B852782BDE113598D6FFD1CFC7725D52551BAF3D2187685F
C2B221D2B0553C59D295A4EC726022D0F92C011AB2E9AE89A65C8FBDBCEE4B90
5F7287E5168B50C1A0C60F7542550BB4394289053B726DA6DE13FC1CA9233700
9C13E8ABAAC19A3552C8B63AF5F4DC013CD7CDEF8DF249E6C371FFC22BAA0AFE
BD61E874EB2B8A68F80B3F630089B4869461E45455D0ECE261F6E3C13CA51FB2
FDA2B2E47EAF9B93F93EFC9B0D77C775B26AF9C3A198FF5739C7B2D48B99DC4F
5B1DBDBC832D60E58A72953458730EAA97E512100462DCCB1341B54480AEFC20
42285A4330E53A3D6AEF2574AD61519CB9413869EE99A36ABC40CE5118E1BE62
D8ECBAAA3A5CAB5114269B71E48E02A16FBE5F50CC074C98C189C334C577F78A
79F459090FBA65CE6E9AD08A7F035020F679106F8809020EF67782E520354999
BE93241E35D898DCF84D502222535601831E813816CD35068ABD7F2C41325146
F691604BFFE2E09BAAFB009598671FD3DB732FF265A216F9C747F9ED88973F74
32A6D7971827C86AF0100681E72DEB346C605D5F8BBCF6EB6F72FD4FC425CCB1
89CC2B8CBB3FD1E4F7E8EDCDDC0B32CBF8276BA3438BA3EE246933045DE1DB02
D0D78964D5C9FB29924ED17A2AE7154A86228D4F55546B6FB5CAC63AA2F610F5
11E4CFAC5331904C44E2AAB29E908013ED3CE631E200296EE741F16B126423DB
267AFA967F80C8260340BB7B6AB886CC861717997A857CEAF1BEC424C3BFCE5D
F6A1CF3CC9B0F80C8E29ED1E2CB6E07DA4A69086347F56E1901533695655EE42
B550CAE03ED38DCED849B8B7121155CC0187F0C02385F7DEC39372DE576F582F
60F9AFD6A79509CCD8A77E38A4722E9ED0460636848AA1607E7C413077408FEA
5231FC9E434D2367A927614E835F51E63E09DB93FA97BE9FCC41839F6D370152
DD51838810E002D9996D366C3CBEB735E3BC43D6DDBCE847D533E5A24DD9492D
05EF37F1F6E94DA8B7B735F6DE1DCA44AF2A4C15EC0DE9AA9AFE6CF77A23B198
3AFC516FB3F028AAB2FADD5AA2B320B6F6DD587C96E8DB5B0EF2EF586D19CE12
35112E1D1325EF34296DDEF61A79132A1138F3EC19A1B580D389622F0C69FFD9
9DF9A1D6F08ADC5995D857CF8E51037A2E190CDEE6AC380DBCB7C2B6B0B8E517
998F36B770D901A82428DA343DCA5AE98768A07675454BF1C1BACE357083C64A
1E298A7942F1C42EFB4621389A8924D0EF7458087B54D706C2BC7D1A8A3EE39C
C5E24374B6AE0AD371AF1987D9AE31AAEDE320A0559CFFBDFEAA11035508F23C
C2299F6C6004F7FF450F38BBED1BEB540809826AABDB67C478074F3862EC9708
1D32FF147266263E1E797C2F55DD94C356CD14A8E9A887E9C139BDA700C1022B
64B479968F05C3924C933877AA8710A179F8388FB245A328A7DB6A762EDCED39
A2CDA2167CD3A56B5A2FA274AB0F63BC50BAAF7CEA88D373B314E400070EB4EC
285F8E915D4C899646D0C203EB66BBF528F8467581A6FB4A16087A0EBC9654AF
CD75C8B46049A2FF09EC5884127EECAE5ED45A86745E2476CF7848189B894725
97D272B425A5E3124AF58E8D7BD54BE09084475F79016F38C70081DC79AEB9C3
7A0690251F5C6BFEF7F6C2176D55FC8F79C31580A2F5B925A2031B4749456C3B
23B2B7887F0F9AB7E91E812B00614CFFE57973A0090B35B80EC3509AB40FD004
CDBE623EDD5DAEAF3E28D501348D60CF21B56E9BB66724E0CA6EAAF2DE8D6CCF
F824B8F4380B740723A9A2D4A069DAF9A42B61D64E0EA83347DF694ABA88611D
A6204768664BF14767F0360C9B911C757A2194AA8F2D9485EF31E40747CE8228
4920CD8A6252BF281412E033B73771B487AF262F6876CBE655CC716EECC4DAB7
81B44ADA464FADED3E973269D39C70D0928D8EADAC60E37D22198A65ADDBE9E8
56D2E1105D34184EE5A0E34B0F32EEE7CA9C79380EEC836C6BB9AAA79A79E0B9
3DC2CB1D824BA6912379CEF50DF2BAE3647176E0495DBA89D4C4E6FE316EA956
F9884A4000ED51FCD2351C067CD0BEEBE9E2BB72A7A52C58A7C163786FA8FAEF
D6148A1C850AC8EBC3DEC832CD24AF945BBCA871A2411D9B3A0DCEF5F96C90C5
7B48C91C1B998EC759E931549D89915D1150BD95ACC646A3CCCEE85690626E66
64E8BD4D458D882F528F85C40A66FB11E8861DDE7728EF86C231318A9AFE63A8
F1AB2ED3D21567ECCD4DAEF6FD16434D7065787374B4B471B927051012D526C5
05AF1EDABF85FF6EEA5E07ADD887271E7C89272E92295C7A940A9F2FD4668311
E0EEF4CC55BB3ABB0E37660C7C103D436290AF3057428A48EBA811EDE7CB7E62
222C0E5BA8B56B201ECBB496FF2BF705AEB7D11B363660F3888FA7A0487CDEF4
4ECA5F938772BD206B57A0A8CB7F3276BC13716898AEEAADBA36DCEA5054940D
797AB7E392C58BCF2CCFA3B394366A43938D178311577768163B13DFC8A210CB
04CF37265148618C4A85A5506B8A25F7B210205A57438F443ABB66CB83A81271
1C25E8ED8341D28931A9BFBA20646BE94E15F0770506D1F805511C8E4A870C33
E1BB2D71348A9FF4DACA09A0D67BD08AA696684B43A61A245FDA07AF6823D439
624FEC302AB2A9B42CAF3BC0284696CB6885CD766F79EC696D54EC229512887F
DD695F70B0247520F2D4DAECA436BC9ED061A07F0B5E3DAF9CE29F5C56207131
11B150D80CCDA3BCA6D3A523B80543E5C71271946BBD7D05935588A8A71C114A
562198F605FB049C4D7AC5C474C2247A0B2523D0FE81C0C798C1E0B99711F398
2180C730E12688247D55EEBF5D9E2A5446F76534441C52615CD9282A59771008
939C9D50106FDDE919E3F903567B50D59D6043E5DE21507573CE16F04C717548
AA6F3D9B178EDCEBCF6970A09BE3536EE12E019A9D22859D15914B990FFCB0D0
5A510D17A5976E4D90C218BEC7D4CA87B116CD804D0A719CD4E8F73B0F18EC28
A96CC8CE2A27D097080BF26EC0C7514C58990E8C5F3EF9E3064BB81E62A54FC4
DA0CF2671F9B23F405598AD98982F4CF020A9DA242BAB1C3A23B5301D2364D16
D844E6568EF1704E6CA60D1774E48FAAC51B5049D278C4CC00FBB14C0DCAA264
EB22B79784BA484231C94406452FF94999FCA8D5FC1E3ECA1B860FEE73A89CA4
7470A50E6A4198ED5B6BB7C4369F44CD8776EBDA66B0A4FDBF5AA4FAA3B9BF4D
C0053FB78EE1409539061E5E5F4BE904EABC6BD39053135645FA806387E83301
CB58B9424C83D0AD28B76C62C7E332F9B05D4FC0B4986A7843846CD6DA58B427
DEADB8BEB065355A59CC5E51AB1D38B9F30FDEDCA9B53260CCC50CDD5A8BE159
A4FAF12CB653C9D33862063C0BD547F980B44B3F03E5A4745D1E0010118D36E2
0335A8561B67237367203424FF349C13DCB137D3D849477848A8F2B885D397C8
41BAD3D494054AE3190D72D293D19F9C0A694CB11407AF1F54A658596ECBA121
403FA6347FC4E9745BA8BC44D14DCD5118B5DDB10A4205373D8359F079840D3F
413E14651BDD5E230330ED98A93057AE80387733ED49C61C3FA9766C92570D2D
1BBB29949C5D39C69F94497B4FE481C5DFBE37193F2BA02160A4524D8CDDDB70
477D9C67D0189C6EBD0F22533E09DEFAD062AE48D82FF078B008A743C01ECC65
9F95BAFA45441FE11F56E04FAE76C03C179312D4FE74C69835A3191677EA542A
AE22E0F6D5CB759BFC78C907C458E5FB57478D52F3798246A06F9C88B0A1A950
B14853F2FF4AE3376D3D64D6510F73AC7B2ED5F085F24804E19C4AD8F1767A4F
79B2095E54B16CD173CD5E1BA0742B46EA71B5095C1DECBFCA593B9A88B37BAF
7CAF5370EDF60499D1CD906A1875A2702504045A6DD5DC9EB9E491D69A5D39FB
F00F1BD7F4CEC397A4B4DE093E154C1CDA2C40EF9636F3F77D947B7ECCFCE240
2E3E6AD4A8900FF944E197522E88C941526C7811B7A8396493FA06C62FC5AF12
6BDBCE2DD08FA2E52BE7A22E86A6907942EDADEFC166DFD5320A3ADDC0797BF2
8256EEF2C789195D7563E197579F0DA17A615C392268DBACCE1DBDF1A78D22F5
F2D87598F79EC486B2D793544CB192A0FD53449F0E881F42404EE1EDA4B369CF
7B197FEC95C03A85892810D52DA8CD0C9FF9A0F2A3BDC2E7CBCB60046602A6FC
6FFFC736DB38E4FDB2C10681C54829553EB42308A2B95531349AEDAB6A1C69E8
0BA99033BF3870875287143D5950FC91D0D993F93073E419D08BFDAA3955549E
925A3F143CF8122A5F0F7CD5E164ED6FD0E0EE9F8A10A1410294BF1D9EACDB25
B6914E2C56472132A1A111AE3B7C647628E8EE8C15F9FB5324AE7CCF549F7637
A5D6BD59ECA92594ED1E6B5189A938DE6896D72B0CD6A171EB9A666D75440953
2BC70C3D4094F98FD906C777E1798DF88646807A47ED6B99C6DF020E3D8FFA12
368BDFDC6623F15CC5515069A95E6CB37EFFC6014135FD6F75875EE6507ECD5D
21D5D3AE5A097FFE58FA2BC93D5A3B1DC26BB050BE17C460EEC693C16B054860
43BC07BB9100B1992D407177ABD60587103F08A794E9CBE589540AD1CED13522
E97F6FFC1DC9FE6B049B2E1DB863F63DE07DD87E005EBD98589E6AC84C709CD5
C31B03E3DB69A102488F32B254FD6C15045198C0D567E419FBCA21DF5384D6F4
DBE64EF49FCF8E7E7593AF2E03E83C630D01C326DEFC5EC4BF981D7BCAB7498E
7BD58490D24673A1123A22892B52146CC322DD3AAE8D190808AB4B0F2FAF595D
7A95168C6AA9E422203859644C302D4B1F64E0EFF38357C8EB38AFAB778A86A3
AE486811702A85311C7142B39B42B5CC51506F41C0EA120EE03EA8643B208DBD
5FD9D1823D52F1BD458DF084F731F6AF5C08136AB13B7F9DC79E2EDC7DD51217
57FBB59A8A20219BE995D3321EFD1DF11EAEECFD14BC8A3574D32F41B39AF67A
8B3A730322B176195BA14C13C2C86745D9AC5E81B2D105CE83CEE02AA5081B91
596BD11189D307E1D978F30CD463BC757AFE6453E1784DF6429141E1E1223548
188459CFEDECBD57D99D9858A9E044FF36163C81740A60DE7BA3E21540450C55
F67F0ACD48F901453C690DE5722C97E2EFF1CA96F54A7D3F339EAC90A6A4BCA3
00E5D8C9E4B325AA04517190C239125D1FE8AF1E4E777C34608C8C9ADEBA7491
577EDD5A942D04E4C3448E23C8A0DD3A6CD73BC476B236547F6D1C299C208C0F
8DCDEEB8775BBF59EA7202B806F414B206850B3B8C0280FC67A306D71D5459F6
8C25740F232E444BFE08C9D31D3863C871FC632957F373159AC49F917FD95A4F
C533D473316178CEF28EB6DDF2C2255289BBDF6F85C9F2017582AE4B0CD3C1CD
E79200BD413888A3FF577D1243CBBFDD563183E680E87172B62EE5ABB3F4DD75
A7A4312F687013E1FF6987199315946B5BBAF0006DA2E77085499439AB6E623A
2BF9507B23290D70487FCE04C40EDB90AAEB4EC633487550BDD17472AC1B8324
53D4ADA2C0931038591694223360BC32C36588D4CBCDBDD1A3707FE54290E515
50DB59E4322DC523E5AF02348C047F0832E0E10A43011BD87BA39BEFE27A8C6E
BC92E00685E959E1E8C9C8FAC6191DB6B982DA14ACAED323DB02B2392AEE1CA1
FFD63A335613B47C29CB32F54337F8F8F140B308C4D3E7146C9A03F3DDE8ECA9
501277E128F52DEEF30B110DAAC8B6B21A54214A5DDE0B23DFF34F952178365C
77216B564458322ED1CB601CDC915ED003AD2F5948EBFDAD99E84069E3BBBE78
075A133B1D54F52CAEB5E200761F620732EF67196B86C770AE6A6FC053205C11
17BEB1FEDC94C8510128CBA0A22A251ED1B814A02E9C93CF38E4AA95557A7C59
4D6639E96F6D82FD72F9D38DF5BD9581F43AF30CEF7E8B36ABDF192FB8B63601
68DDBD68FFF130F5ED26EB2D3320A0166FE14C835E87A57007B594B0BEB458BB
64308F7E7B335B105815653ECD7826BAD00D4DA90B360364D5A0B9CD8807EE80
8BF33DBF1E87969E4BACD1011614AFB2405AFFE33AA533FF2E5D4AC255A4A6CA
3A94517F78471A0D0E38D721F88DF65D5E946C65A4C358401FBAC1C47C8B7DC5
C2C1C5D3E6301F8D9A05DEDAA6171CD1E8A5F2BB87EED0C73F28425F2A0D4D1C
1151E620BF53361CF3B0503719AC04B9CC577F1C4224F6F5F52C89AEF34B6E22
44172B83B1B0B5ECBD5080F51FB494CF2260A4EAD5B7E80EBD64092A5554F992
E6BD5B9D548EB45643F18204616B963BA28BBFD92AA5A14E7CB52FC8FAA96236
EA472C8EDEC227F2BC6CDDFC00D98E34594201011C011EA6DFDFE117EBAED663
B22A1546A5AF485688AEB09682193EB0EC4A34C63897A0AD0CFE9A4DC6C58341
B6BA6B0E86DC435C8EE13209B5F4D8A0E9FEA9B226824F6A37F0709C4DA6C1CF
8AAE46D5DD4BF02DD3CA895A64EF8785E4B4BEE5E7F2216D7367C94BA20B8AA7
F0EDF2F772B9BA1B219A2152FD33A807AA0C5DBA724909C1A29148DEB530AA0F
94A01DA42C53BDE88CC2C71509CF87DC55A3BAEA363AF841F9E3D121A3BDF181
6FC35BA4A820A017FA6B9191760C2341DA33F15A5D79B165C2C163CD69CD146C
F57A4EDA44CA0C3CD6EAD76AB878A7BA2150ECF82A1D7750F7CFE5800393B11A
92EBE248800D7F0F69D9F0EBDB99F1FF4EAE6216C76834544E8E08FC13773446
2287D05C655DC580F83E6933DF3A2121E7D87891D43881C5F9085C1EF041B4AC
DF21353F370B35844B1B41919988C78189B1A0EC5766421818C10F3A2C716D0E
106BCBE42D82F098BB7B7349B50F56EF46402BFBA4BDB61EE45F2CDF40A99A69
6624D2F065801B3A7A43761405A1A7EAC55EF75A8FBD72D565899911823193A4
A71EA3E49592AD0F698234387F8ABA250633416DB2A3FACC4D1D42171313525E
1E4EDE4D4B472A362FD4BAFA31DA0FF3BF32E806AD809738068E7878898C6452
9179D9C456B3D25264E54B411296A5A8B255A56763A43ABDBFFAF55A142CDD25
4C839625D4E9AAC24A9B95490E49C16C8AEB2DC541963DBFE4D3BC2778106861
37AB4F58CC042E538D3AD9C10DF31A371D49C8AE59C744E25E2884DAAA15BF0D
849F548378E072831971127B7FA1489459944BBF1283804D865F2F126A35393C
2F4C6B8AAF995442E6FFA12DAA8ADE7D2C3ABC32E64EA6C0EBD9E38F8A4FC963
718C03C70D0BFE738F75600BA41EA1AFF042AFE03FC063B4F467E2038736D40E
2C59DFC3EACE8A5DDBB1D15F0C876C636F31A9E0B790BC6AB44B240F41DB926E
064AE3CCDD45F07346FD25DA501EB80DE7CA63CD36C19EF4AF79983D5172DA2E
2EB3C71B994C85EF0D438E1C15460D6CF2A4AC904F6C14A78499E6428AD036B5
A50721A9BFD86DEECAB495D3F08D50F8E919889E15292506226BF88DD99F3323
78694676A5A0EAC23087A1423D6C1224EE53A751C4152F31AE048707457FBA3A
994ADDCB3867783CCB5AFFBA08A4CF51908A32217DA5D69F7E425F4A71E0ABC5
1FCBA6005E7FC6FD349DA718C1BACAA51F9E04836A9473B5267D4B3D077C73A4
F6FFB7C48B8EFBF2A7F7385CB51FAA9735E707BBC255BC629086F91ECE5E523B
CB2EBA36143280C65FB40786829CA9417C9F127C83B16F310778F614269F3C9C
3EB955608E09D6DD423540BBC1ED9874252F0D7A50D68043457B35DC755AC7B8
697F4A212F1CBA96FBF72CBD3CE6EDB29D9BFACBE40AF9D6A3ACA61B7267BF90
B15B357C2F486EB26DC7D55EB56E425436BC1560661AA96AD20D39E7D640105F
3E31C7D919143E8D648BF4907880134F6DD94F101145FC013F1A64EC26A62EBC
78652257589B069B84D1427295A254FEF80C579E210CBFDD7F2886EAF0E9EA33
8B23EDD4D6E8FF30B192EC0552A31A46FD5F2803DF0BF73763B9139317F41475
2D07430A9E5B7F45FB6F00A37300A9FE4DB5B47A24F1AE81BCB5B6FDE9638AC7
5B7798D02A79BEE0147F7EB2755A6B2434BCE500F78A226C73D75CFF62AD2B62
B5ECD9E8A74DB6DAAD4AAD247631B54B2B1ACF48C2215C120B29CAAF1409D054
E553DBAAA0F90F572D411DD049CF337C0EABFDF41F56AB44A01ECBF0F3F6038F
07FC10D735BA9AA1317F1488C7E75EF8AAFEB469844F9A38FD9A1781C89A86A9
A3AB35A41EF2DC002BD8D609336547E323502D704EDBC5C4BED46BDA37B56DD7
095992DCBBC1C33D12D764185148CA67271296864C0EB21FA5B6072A0B8D543A
28FD46B211AF194583439A8438C474456992AB849E81FDD763E54A3553E3BB3B
49B04B94C95B3D314769109C49542D5A1A3CE5CF1EC4C96A491B18ADA58C791D
1F70C589B66EE9900572844B09EA0270E87ABB4FAEB441E4882B3059DBA18A00
4CA5905715353EBF1CF044FEA4DAFC86A4B077C90186F11C5AEB08D2C09AE065
B36B2DAA71B22ADE1210209C2738EEF6C6D3C3C00DE376AAB9B3BC3061104174
62FC6868A98D65F27FD72C7EC9C17453E0B1BA466C3B8E7D98A8EB4181F5BC83
F948AD353C1160654D865A3684B6E0FF521715151CD2115C9E741C3E03AB9EB2
172382135F7D094BA387A9C21A9F5D5DF1280ED9C5C6BA8358972E8167DEA164
9F54430BCCC39718B204B48310D8D9A6BD66554A03F5A46D9DB4A1E0BCB8EA40
682F08AABE8991E7E087164FD334D0FEA11174008194E8438261AFC191284C14
774FB9454F3242541FA8F87902348F5E820D43058F54E4F22C1BF2152327F765
E094DB35B3D79449E6DA68AFD94F0A0DD6C3EE678F4DBFBDFE30AE521BC5100E
13D8B191298B1DE626D0503DB3BC188D605AD21F1703A8BE0F776045F84384E6
CA7738C88B3673D31EAA8AE8A09ED897AEB879F3E580E9E94EBA49FC95242FCC
0FCC8983F5CF12B4ADE3EFF021368B5896A83086A9DD95DEB4EED01417AD631B
21527855C079939060CAC33E3681555F84F9762ECB5E8DFC885EC04D94BC5567
DF57197A7A0A23DFA6BE42ACFEB81ED5D497F7A425DC058F3C7F7E351DEC10DE
2E44DB86E588693C547BA82ADCE337C2629AC90EBE671877B934D3AEDEDA42E2
A590349D9A6BD000BAEE2FA914C82A229F8045D340E7809A4A90D79FF64CF8E4
BAE7D058A6AB07752FC19EEE8097A410A406B73A0424B78F0ABA5E2F45F73CB4
687AB5C58C2C11B1EF0233A973EDCE5B6BA16D59D274D8E7E21B27BEC9CEE4F0
EBD514105484A4DDD00459BFACECA5702FC754CDB848E815F178E86F7C9EDA80
36FF723EED99E3636859F04A371B8BE52C137A8AF44E2EE4D84A2EC117D50398
7642EF747AFB35100BC4CD66F10AD5AB91E590C606476164980098FC93E76952
236B772C473D69B16ABD7E4F38A85E9FFBD2E973B918D7B966763DE878DBFB39
043D20E63457ED5AA95944ED748FFAB5165CBA24069472DD6C19D08C25E59F16
548F091D2C0B0797676C26ED1D068398D98110BC37A283EAA7A608564DABAC8A
EAAA940F570D0826E5433C25A5FE8968FE596361166DDA3E4EC5F13CA5861F3B
824FAA8BA47E8DE2F7F84387F87A069B3B0B53E815343B14DA7EDD843703C420
6C04B7C52D477AA8B079A6A93055ED598D0D5EA9018D88C7DE9F214EDFA4FCD1
78D65FAB990CD610B0A8DFD6A7491E05C0C6FC7B4DADA773146FA995ABDB0DDB
9DBF9463C27326AC7ED8FBA0A3A6E8A48D64FC753F3197223C9CFD0572564069
6B370DBD9B7FA5373D168602FC944FBB5230FBC59C7CD93331FF30040A2EF5BE
FBD6314D9051C9CC94A7607287641C6838F43A6ABB79C3B84222C01F0BAC659A
189AA35753AA44C58100851CC85FB6079E1C5573BF7AD0BBEBC8144180D45377
B7552610C7EA038CF4B904F504642CFD475934A07F563082C5C00CF82023B94C
5E0DA9A31F9C49DFBEB24C94C93ADC954B9B3CE500B0611BA8E2F57F3274D1F2
5BC54EF2A0B01A4911173BEFB54022C02B55274216D196A01DE56B115BE2D089
2F6950C202128D0F9C44EC4393D41EB64C32426D3A1369C5DA3F1B3FB4B3400F
9913249C6F1EC3143438373D93ACFD2F778EB0C18EFB659E73D7FE80E48EB1B2
D5A30D974A7E9B24DE17ED2AE3560AFC772FE8AFBB29589AF81DFE8379679784
F63786842CAEB6294A4C68207EB9E914C6846B1710F387955D9EFFBBEF6D5CB8
B5D1C96120DC1D4A49FD15D7B594FEABC302AB5458874DADCD8955CE0DE589E8
3D544FC24F5C75B7182BF827B16443284DF88F67128CE38A3BF3794A0BE5B900
C1CA88EE3AC083152456D1AA41DD7643D81D973C44EE80F36B650B643B2423BF
5A54046FA04B2FF1E27963647A88D2401A80CE24777B6B51D2B4127DF6F38915
9E80FF68EA4D777167E1B256F893E264EC8B8DE42241855951CE601DA73C2B51
F37D2DAEB9186B9D8AA7A313EB6B1CF97065D93BC9534EA4CE12D51F58B2B8FE
B1DF7D06346EC0D1CE9B533953478E98F10A66B70E9B262C690076A36CA5DBC0
5A790CF4BDB53CBD3D2B947C611D88EF5573B5DB16572FAA7C41501397301905
27017BCD1B405ADC394324393F2E66A44F1D31BDFAEB245D4610671D3927F162
92FF36BEB5C4E5DADD2547FE7AE411863DB2410E1735B3E157BD4709C3FC1A13
D668B12C5D44A4A87F68BB02B1D90BC4DE040ECD3C3C6DCEA8E473C3DC5A29A2
0469AE792BC1178BE026FAE3D5B960B22DFFC246B8681A2112815ED509FBC647
1FAC0F150F1CD421CCBC53B3E846C7EDFDEA9EB53C472EC27345452DA31E38AB
C1F2A618F4BE44B02795939D9BEE749DE172052D4F83977D1CA15C92AA33097B
3C7B9818D3B7D3B354334AE3CAB3BDDF12362C5E81BF78DA7B2F7BBCBD46C4D0
B2E4927460E877242A03C53A7F638E3FE0F57EFE45F4BCB0B429D3E6D7DE6462
010B1C48A2E0593E472B57D202116AA3E53AC69525C92C4A5E96679ABE5C1E1D
6795335FAB060AC4DD9D075383DEF3EE7803A790578B162CE3720449E215CB4B
19557AFAEF26769D3359FA51F69D5440250B0CC8113FBD5B6AA2DDBC92833AEB
C6E4B7CA051F165F639F9CF036300057302368419A9E37DABEAFADA359646416
0CC70C78326254EE671FF73712F063E52A8313DE704527A6B56A54FED1FD414D
67EA0050A471B2F8CFFFAE6691BD37E431CEA17602DCDDCD5F088A6338A70CC7
14AC2D98DE543FBA23F4F3B7030EF79356A78F61A5425FCE05378ABEE618562A
C9F0E7CA4B0B8145D8AAD598C48C3686CB06BB6CF84CD33FAD800B32CDCC113D
4177F248EF181479A7C6A444F6941C73FF085450DD24D6D731C47D63DCED30CD
3A82DA5BACD79AC7D43D95ADD0B1AC8DF05B5C44439F53F727ABA4802F0FE950
C10E2C82352D6C9C9E1F76617F02A1AC8B905136EC6DE0F2F849692B5C3D6061
BD12AC5931D8E36C312BB0157CA696F812B9C6EE61D2FE29113B09C57DEA2F1D
0B51D21CE37451352B5EDF3601267FC47BFA19477F07586A991E7185A81224A2
CA44455381EC3B34F61BE868AEA585F253C8818A33DB1DCF42DDE7631DD942CB
866F64C8618B045FD9C7FCF123E6A46F32F540956798145761A6882631B790BD
466FA06CF5C663B874DFC977D0DC9FC835006DA0CEDE004C48FF60BCF2B9075C
EAEC4A3E0B6137C3821E6EF983FB4A888D0193FA5115A7978272BCAB24E6C20C
6F34D8A5E176F1A64456E7DE0C26774C66293712267293C81E876D432300FBAD
27BA7C7820EBA727BBB81B07AEEE94E280139AC71E221FC9468CA4EC898BCEDB
DFF0443AF7AE3616777DCC7F608D3D4575F7DF4D43028F77E4F18F9D343DE0A3
DF617F651937515345C0150314F0F1F34A0C817DE31D0B1330F4BE3E5E9D6ABB
3EA92DECC5D5C50E711E16D2A3B26B91355DF13ED37C9711FFC58BFDA91B0D65
B330B5572E0820681B211C0E0490ADD7B7C63F4377D760358D943F0E8F02FE24
B8F55AB73E8BF5053B258CD5EC1E8763E83C3B89FAF50DA7ABD0E6F425F86602
D009263860ED50D2E5C6DD769843EEB5061519E040C16151B599B26DB5CE64C9
CBB0ABFDAB8F14502A2E11F4B30052AFC2458E9EC99D177E98264B2CD7BA1CC5
5AF876C615316697899A9F0F471975119C4C5CC8845379D19E58EDDA7F1BC060
3B8CC66F3CB6273D173C3741266CAB5332478988EDD6C74AC56F8FE80E803983
D795F44AD0E002BC8219998240BA1D9531549F4A9CA2F1913AC27C7FF60498CB
68CC846FCE631F64147A8C10027DB4325A682E79B8C4C97568FCB6D44C362CC2
72125008D01197FE41479C31B5F0EE82674040343037219BB54B5C2DC4FC4606
DC0DA1215E3AFFCF8FBC1E300BC1D8D1255CEF9E0513AA9E9C7F636C334E537F
A23BD599172ECDC9FB77A3847DB8B362E73D1EDEBEDC84574B7A6C8BEBC0B7A5
3793D5F00E9143FC80E4CD282801A8FAF1CE633CEE9CA4A33227D16CC9E6FC31
0805ECCE03153D72DF657E89B2FA3B18A8FA61C0F1022471CBC95E1B25E6F50C
400ED03AF07436934B1AF893BBE2BF03848F1EE371B081B44F3858171E4FA082
3C52E9D834111FE48A13F52C4D73018A4FF0AEE2566A744CF7AB9716278AC35E
5C87317D1E684FC5215512AC4F58800B553D62895246203570DA82414036FB71
9E7BC6D725A2104A0BAD9D72CB889F4F2D71B8377A80E971CFD88E5A7C55CA44
47C378F8F2418F8AEFC4E40990767870E08907F9A10EEC75028FC0F3D49862DE
59BDBA126439F8553D1EB1DAC75B97B47EEF7FAAB882C945135F73344B36E7AB
2C3C084C08BC0164C5FD2F1768EA44C9F2EF7591CFBA15FB416193F5420B4C10
CDDAC3E404E589A2F92AA5A3A4899C6AA458AABD9EBAB49CCCAD39D906630A6C
9620E9231A255DF15B9898E195A10A5D4091FFFC75A267DA4AE2B87CECE382C3
878742798EAC712274806EE981EB2700A5D5055409AB8A4A17210521C69B5602
463E14956AD877F5FE300E9721248331FC5A14E9D59C49FE89EF1B2ABDC15EDB
C092DBE7D1F5A89019223BE26F08D31293C9CD9353E040B54A3AF2CDF854D5EA
A5687241A38E641A980309D173F82E166D9C494F7443867387D115808041D52A
C9D7C371156565E1D08FAC9E5ED30A102DEB61EC798CBBC354773AB1EE2A9ECF
B030A870B7A0A74319E26F151A785C4EB2E343C6048D28CFDEBCCC102FA80B67
803AC1AA2D70F33DC8166FE67DAAB357AB94672F501BDCB1C3CC19083C872801
D324796C50ED93F2157927C176FA2C41A546E104D1E3F84E02A987D4E4D3A64B
9601F82B97A2693678DDCFC194170B082D535B24BBE80E6DF53F0ED86F0751A3
DB0E5D731AA86F318C681B57AC94933993C743A02AF8A70E5C53EEEF2F114AE8
506EE658AC392F879E19D9863CBC54978F76B27A1482291DBA69195D07794820
9818B01EE38650E54B99437B201B769A22FF22A977550F87EF5824019C32170B
6D298D6B20792B5E4479E5D1D0FB68665C90207776237B5A8D390B2780567F8F
5201B1934C8B0D30CD8A684BA5DFDDCBD45CFEDC89CC659783362067A0E924BE
CB37C5FE084CBDFCBC3273863C185091AC182D3F4E5BD4BD35E20A22EB7C5BE7
7287EE93B4E8284985CD2272C38A9DBEC0E45C3CAC57F8269887DB8139D171E8
25C3668E4C41C7DA99CD7278DD437AAAFFF18E55E71EB5A071B1353A1A94669B
C34263563188652944663E8681C05B7B34027403A850F49C42A807AC99F16937
065BECBDD4A09E6B66E728E75DD23D9F909E9961E710D32AD49B6FCA0EADAC02
8DC219C1C00F9E5C07CDD9D3D26E2D2EECFB912B90D430426BDB4ECCB05B0B9D
132C16AE05DD6D273052BB7E576C64EB9F77BF0CA929A40201CAB3596CB01674
7B9B087CCA67D736504D4DE011001C45A69F7A3CE62A07F2686424ADACBB26D1
8511746D133EE786AEE10B72DD41F12A893ED348BE68D1D0CD59FF2125261FAA
731F88BA684830B857B8F86D9C4FED0F6E79A93102662C66EA2255676A5EBC7C
4C58E2E50E9915C5CE8060D34BBF25CC4EED98E57E69C223ED6B93E623E4B879
83C1962BD15A79E87D6D4FDB021C9E7D60892F5805513B1074E4BF3539DBDEFC
0225F0485474504C039857178867DB7FDC869D370E5F6D3C8B576A4EBE97F43F
C99C31825199FE0A897EC99EBBACA80D2237DCD77461DFF84F203ABB3459FFC4
22FD11224DE85914D7DABB80B3ADB5E03A08ADCE97A6BA93CD2BDC55AF1B810B
23250ED7B880599F245FAD651B76E60A7958B03F7510258693F7F2C2F1E51732
DC25E9E3A2BDD497A502B0E001E6FACC82BFC2D3ECD4751A6E7C66D92C6D3F8D
4DECA12937A8DE5FFC11CA7BBABB1869E69CA1C0065EA921B69F5006FD792B9E
18CB967E03D28C179E990F2BA06116AA192ECBAD81D1E579CDB282DD248395C5
0CCF35CA832E8FB3DEBF61FBB513C6178A5ABE95130A7148481EC0090751B6F6
14E82755FBDBB4DC6D00CF55D01F76CEB94E1F40CAB2E083DFA1AB44961C62C7
C22C7CD4B8094921371227A13F42B2672E361119390580834AA39CB71BC788A9
B87C343B52334EE45F35BEA88B08E5CD2C6CAEB295E0F5B4874038FB96097F3C
546F78192C30483E7DE4FB9717097836A5031AEF4ED95BFF03612F772681B9CA
0363C5A979719A929D604A5D8BE332BEB41BC31B0521408C853654D591AAD449
2F34F149B48961D5902D7A7F32F6524EAC65383FC392191DE215E8824F412C5E
63AC72DDAD7C981663A02D0383F92F309E0B4DD5D07679E1D261BC8FD0FAAD8D
52DB2A3DC73785B2B613037F8F372D1768DD9245BA43B7F256E55BE496212303
4A84A4AD4E87E33631CFA75704E5123606E4401692BF9E036CCCB9F39645B1F7
4CCAA1B9A5D327748E999BBD949190CDD8F2594CE1DB80C259260C17A9BD02E7
EF562A19E1E82ABEE5768F26F88E89F90056229839DEA4EF997B4B5C1112C148
22F2692358C96F552D1C366F3B5026C1F92F1864058962789D84756E276F19FC
D9C90ADE62CCC7BD47AF5B80633650100EEF23F92A68B3388530B3C95106576A
1B704899C3150187F3F43103D80D08383CA8D7571FFE166D5CE6802B5DFD63C0
B9E04C78EDD89E83CCCC3FB747B9CBB226114B8E706B4C449A83A4757A3A38B5
1DE20E76D0CB4D2C3CC0168452F475B30BA9FABC500BCE5DAFB0DD6B8CD4CB6C
A3729EF1603F6475B0918632AF38DDC291E4AF1271323DCCB285508F9AB0A247
8FCC33B3F59BAD0496C82706A9537C5D1C62C9155C1DDE2AE469DD113623430F
257B3765B0DFA8FA15E14D8276184B21796DB17CE6E467E53DA84F1F0EE8CC23
CF2787DFC9ED46B9BB6AA0389062670509475B490F555AE6836C72C10F140029
602EDDB576E90862DDC98DBCBCD1E579A0557F90FB4D1DBC569F4476DE4398FC
CB4606E4EBBF4F661298C90764A48791289DB3F4C22DABB78058247D200C0236
3E938C26228C049036DC1A5E4358D2AB7A76619649325B41148AA3899F71F0C0
903FA3FFBCD9F300B6712D2E5A2641BFC33811F69EC420BF6D7A51EADA9F4DD9
9BE589125B1773B3DBD40D222AFB440EC236BC49B0DC2DEB2D0E19A33D59252E
D087B97AB5523D214AF6EC100D9307B5656AE5444889CCE00C76D6C95CA2AB6C
246D0E7B59F7775FADC1FE35572B93CE3C32C877CC55F6CB55EEA448DFF235D3
A272488123B9B7ED9085A3831FE2D104F415A76D89745D303A724FF3A3A0B05C
5EE1F05850B910FC88AADE19F87112FECAABAA6A367F6156E54950FF54FC5B21
DB7FD12BC96474803CDA72A703992B60B8922A1B89E2CD71791160DE7A32900D
B19D2DF0BF6840325466552756D6E322D6A0EC2E1E95BA79D4F2C89B097B6F53
DDF503704ABA602880EF42FD80089790F37EF72B76B8845E403C8D79AF6CAF1C
4682C9167F7B578097E8BC8000BCAA5088C707508BD388997EFF437B1C9392FD
D97CD2AF9BCE86A4116AAE273AD15BE900E51D43DA5428C6BDDD5890D9C0A79A
A8EAF5E220CCDA9820F685A60CBA873B4CE03A10C7620B52F58929944B89B0A0
F7A28EC43DCDDFEB2258BFDCA712A9BE2CE79DF69EE9BD13C3E6E6BA90C5CF4E
D11C660589B2039E91A780AC381CE5A2182841BD6384D9D6391B392EB2A4E0E7
827629AA6BAC7CDAA30C8AF68EE85FA9082A062ED8FB49F16FC488CF4E664512
43922D87F880FE768440150FC91D2EDC000031ACA11A3AEFA203675CB807E700
875989587F5B2F96D156030CF365255C2B2D9F02474BCED5B8CE09405AF1CDBF
84D89159F09B8A195E96FC5F4BECD50424C6B24542402733C19B809F4A96F523
0350645000DEB1E488A7F394CF0F02F4BDA9BAA8202DD67BB6BF81EA5A794AE3
A554024967231761C9608A88EEF4B387BDBC239F6C2ACE521DE8E1CECF7A7BC5
9DA6FAC3C122F7BB0383D52C3C488F432D36580EBE4A489A4128FC90EABA594D
5D766D27A9282CA414A5F94BFF3D78085C89D0A9B7C60FC430AB930AE3185D86
956AFE469F0FC24E5AE78DEB90C54BCF8A08B4D2EC582B31DE914B315D4FB883
487FB6E0D7B6814476E4B0231C6183A59F1CCEC433C3E4C479C159208B9BDF5A
1C309D6745C7940F95E7AC52F1631E782B1A3A11D994A7B207BA2D47B16E8C63
CC5C5F2A3163B7CB0E6B05C4195F19C6781B06F015719A4FA6901D0E829AEAAA
457E6904054CF25FBFCF3CDFEFEBD4AC11530B936753BADD82E59FD09D015A32
EFC30F94C66A421EB0A18A473C904495A197F5B398950F9629C5A6157422A8FF
1A65F2A0E40EC83AD8DECDBA4AF5C8360E912A046B61A0EF7A12D64EF50D20F4
E8926EFD1EA7151DCB874B893DAD59EAEE7858DA831C46C8CA2E512B402B45AA
BF6B1A09C6DDBB61C218F4A0C56E2316A6FEF88F01E2627AA1AD3E956B6C0214
1970184D8FA91D4B617236459BB07465B0D74EDF072D293210CD4D96BA569E53
C8EA8F61CF85AC000F2B7428307B592034EC15A440E8950F92090BD5E7DD97B8
852973FDBD080E6F44D5F1BA0B22E0811503CF78B9953B6E411D11EF2D5D6B29
8194683DC807AAA006D91C40ED0648A254D222709DAEE16F80C213DCDDD815F4
2675EEF033AD2B1E69874342A66A87F63B638C1DE695F16E868E7873DA73CFB6
CD289D0B584C4C95C10138D87D3EFB19642EDFB48CD5CE6654CBE7AB39E3673F
6A11010FCD948E03A41F43A1A407C2664615871AE5777C1E7B9BDA86519AF543
7A6446B2D89CC9FE962383B25EEF2C075CD1B63DBA93DEE7C9C90D6EC2B8AEF6
9B4CA9BA83901741C20AB2A2781066C297FB5AA5F203866D77D2ABB74F9B0391
3B84BECEEDA7EA9B5E1B8A12A8269E30EBB33243159607F48DDFCF799B4B52F5
90BDD308235780EB9F8A16F1B5E6BFEAB5ACD28836166BF2DEDDCAB7C1B74E05
425E83D9118A240669B1DAC2BF0677CE909A022545F7EA2C9C4D9538E51CCB0E
4394BEF80847F5A807A11BD9F9D0574C3BF79B3A61EBC63B87EC986BAFB3323C
353D2128427F13B51DD9B83F7AA69DD767C3A9649E3644A64AEF04359CF3D7DE
7350F3A864BA085C29EAE303A9263B66896236DE36B7AEA9EB94830DA4A91C15
721546589F3AA6561CD175D106635E475CCCC704205916D6B1293D4E21555488
4ACCAF547503BEE1D92A93D7C880269050022E57E83D58D041B7399373D09CB6
A9F3DC4FAB517A8537ABB79F7244B15B62B10CCAA73E90C0AE9FF0DB86074B57
1D13AB66968832301F976E3B5CDAAD3A98F851EF22AA0BBB98A1B5D4FD625D45
A28490ADB02C24C640F351C32BB58B685370986B17CAEBF24FB177C4FCAAA0CA
6DE122A9A244677EB0BB425CC16C98AF0639880DF9975A565B9DF9F3CAFCE20E
78BB1F96678AB0F7B7EEDC009B58B678D0CA713057F83D598A7ADD5D7C6A9CD8
5B8D363CD748C9ABCA8A0110C9BF2DCBADB88B6CD6D234462C7D377CD7ADB1C1
20D9D112C0C75A43E4A8891435BBF2974B73B4EDCC964AD03D3F9063E9E4356F
BA6786E0EF8F533CD594B5AAE459C2568133D54C4DBD4A2E0B063D62D819290E
ED597734034B6B65DED645085F06CCE510C4F0C929434DA62AA59213E26BACD1
D9AB12CF10722AE9056C3EA592DF40A0074E329927B8FE7E84A25311A6D10D5A
A4045CE6849E51573E8C8EA056B35C2EE3AADB80EC5747B7577ED4AED6EB4373
4E99E280AF523B088D30FD2B5F31861EEE6E7A691E62BCC42AD41881E82221BD
FB5FA84FB0A366DD87C8BCF4F29F6E8900289E59AD6372DF26FE2391E01D2155
C74B9F1EE9542274A9C0FE96D2EF52F14BEE70362F66A2F91C89CF28E975E6D1
A88E206D03F261DCEE3BB4113EEA700B05337DD578497F824B9FF43B7FD72445
DD594CD955D7F95C5AF677266E24DDD402812C51D441ACF2FB6065128D50485F
216E6B3D9CC2D0A3ED1D2D84C773EAB63BDD140E7957C9461684F7CF01A0FD3C
25D67872FB1CCB088B7026F1549AA48D91C0CCB6229DF06B65E648F063E77404
2804C82E7B8C3C0415D05B748686CB8E959780D313CE25A763F55677BED519C0
A73EF4A8B857FEF50F5DD1DA6DE783B53B9D3571472A17DA7FE93E0063503177
535403ABCD0DF29B5E6B80D6083DBADB7FD5C22DB31997FDF2D42BA9D5EE1684
FBA93C06381CB071821D9098BB8C854E97E5DEBDBE3BD91C8D69DC9D87AE1DEE
1A3C9FF49A3696AFC0F5509FC5D028134C51CA551CE60052A304C00801F06E74
295433F936E7C5602F40B044F418E2BE0F26EE921FB3F073286ECA6D5F65B8CF
DA21A455440C09BE0D22976B472075A9E61ED572E7FD8FB1988F48DC7D393E9E
CC2C363C96008E32530966263CD0F7F32C8D9E819AB8A2E04833B74C7A59DA26
36E63F7CE3798EE474FC77C3EC02242B4D9A957A08D74970C0B9123C5C67C5F9
C3F718CCBC388DA88D06B1A5C4C1E898DAC4F92AE78F3BF8C350F262F2499ADF
8836ED273E2CED252C0A81EDBCDBADA314874A6391B71372512958688A8931BD
E773CDDA61EA49D81EBC946C40ABC03E07501E1E3D06EDD4E7D0FAD1EA777B98
44CE140C1B4F1BFB5A387DCDA0A61A1A30D4D42247CC847020F546CA3B602A77
3E4B48231E934C09E13CB705D59C3A886399FB122B3F3C1F0A9B208512BFA998
E515100474FDD940D1E2F30C9BF414875824438D20443CACB66CFA6308C6A0D0
E15C890846B404B3BF36F7BE43E240BFCE53A42275290864636965492B8D8FB9
67F04DF70D8DFB8FD3D37744ADFBEEBD9CA17B788D27513134654EFD3C35F8FF
EA1B8BCBD938A26A4C1F53C4668490C46554C210B8B1CCBE08DE13884CC251BF
AF53DACB19D52A19EDA66DEF9CF225F38FCB6E9FEBEA6691BF6FFB93FE567BAE
AC80ECF5D7AF10C3F9EBA648D97D2285D1E04916343E2CB46AF2CFC8AD6CC179
51EDCBA6928E1144D5E3493298D1EF1C9FA25BC0E4F36CEC86630A065EB9BA99
6FE768DE7306034109AB4753674622BC4EA5A512FD8E2599D1397D4A0DCBBC92
13E7657B163BA2D82D1214B81CE79C593E5A3D3D9F9174819BDCED0C11EA9BA7
3457CA2818BEC1AA7DC44DADA34EF872E1C813A70CD9C601504A48A9A13A7606
4C17A7F048CA4F16B50BF75ED6FC3BE268422FA6385D9772E87033D1D3136E33
1277678833CEECAA9C0870AA3E1AE0515447FFBDF00C9B95F2CD7C396FED6AD1
1DC3EB963E513999FAA23E6074B8EBA19873AC7947E29F15D0BAEA5831B6EEAC
5334A534B14113FD5023EF7712AA36CDDACA72E924BB0556ABE94192369CD912
F00634273645BC2A41014FFDBBEA2B41A52302BCA7EBD13D5312D433E00B6352
F926D9A674405B02A9873B4EF35DBE7F973812E1828C0D774016B2FC9EB81021
A8F8727C266FA74A8837982F5F5BC5A004F53EF49429AEE2995AD10CAE59847E
0F4A06447D209919A95956771DCB3861B53C72C0FB2BADB8A012BF070C713D5D
2C66FC8075C3DC50C7DBF0F4D8E9990E682A49BA02765CA401D6785819F73F29
2C1E6E63FC0754416459392E0249AE8C34891FD7C75A26116ABB1665E71372F8
2B827BCF2089045E155E200F7C684C31E652A3B80A44B7F1FD72466569BD3762
DF2C7A779400C7BB88D2FC2D679144E5A65DD13201F92487F8A644A7696B2020
1ACF9D6C17FA27FA4270E0A428E7D4F09639A779A252F8348745D73E9FBD366A
0D2C021CE9EA9BA377D494E4CBDD95F945992E4B63D312C7BD53D2353A2B447F
9A2954A857D39BF485C18BE7A413C484B239DDC5B1C0CC80E8CE93E85A287BBB
45B04D767462693C3877752DE5FBC4034D8B43821CEB57B5E28554F0E59B4AEA
0B7AB26A7843A69823F4AAADFC681DCB0196CE9C9FEDF2CC8AFA04B36F4A006A
77DD0ACE35A3B90CEB2761089C3ADD9AA598AD0DB545FCE4B534ED70443DEA5F
C49A8C4F861BF7F0665C5400D5A0F1EC313E8995C09A040F9B0F98C06B4C138B
C98AA06BEBE4072C5C5C1FBEEAE40DFEFFD1788A7F4DCCDDCE5E0F78F33CDB3F
D729E19585AFABDFCAA7460F632A14B951E9B72F32E12474BF275818DE42D8A8
7D1EAD3957053ECA46D7FF5BFAE1B71796C7BA0D7E40566F9817B5ADED7F7DEA
A8AF70090724D8CC7D179ED136C2EA7F6B2C8E360C11536998D5C72102E13632
98B71102185728EBF43567BF95BB073449C0145B79F6794980C06653B319DADF
70CE0C48459D7229105E2990955E87A496D2787082338FCA38147BDB84520FFA
2C117AE4D35070F0652A38291ACC9317CA62BCEA8E2AE8F7A9720B16F4C9AE3B
920E8116D7B35A14C8B97DDD4C8947E223097BCB9659B304DEC353D691D85139
856BE8F0D9739BC36585E55E7ED79B71B98A18DBD1F490C9403FFFEA5565F005
86B7AF6E49E001B44E792D1542C8E2ED80E0D53A118549B7CDF1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSL1095
%!FontType1-1.0: SFSL1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsl1095, tcsl1095, lasl1095, lbsl1095, lcsl1095, rxsl1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Slanted) def
/FamilyName (Computer Modern) def
/ItalicAngle -9.46 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSL1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-150 -320 1474 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E724728647E86B0DDF0DF
27E470DE304BAF6B908EB3795E1E2C2EF1C03404F1DBE0D3E3C183379DE9E0FC
0BFB0D61769003C4A9E55431A4C3C5DBFB2752864A9A725F367EF3165F7E622C
C138303769E5DC370F262EE5CA8F59C0831C0849547E8357BC5300BDD59440C9
294CE784007D57CECA937A34BED5119A5E304D5261DE9153D2DDBCCE739E6198
9070CA375A2DEBA40443CE2AD54F4B3D184E9846EF9C2C567CC19A512C73A990
6E3D61BC03F048A3FCEEEC49D7E62D00A699D12E4459F98C8423D946E74E9041
3C8DDEA7C255512A023960324BDDA11B92459A83DC5A6A119375E450E0F3FBE8
6BA5385413972A464640F061E935AF7989DC229C4E9DF86D9162A1BF33567C0C
31045A0C5CAF0A394B694D99E97BE7B58C3C427F8F48C15094463323AD593CC9
CA898C6939F284563D4BFFE656737D635FD6BE414094FF3384A36F14024D9368
6E38EF747E4E8F662BC7E7099CB166191BCC2410A69BCAF57F21FB55FE221CE0
BB8019CF28A7B33F6011048B700E1220ABC2B49A835457838BA4E238565CDCD6
73C74C40FAF34BD971DBBCCB60B2BD7AEC5253B4610F9137BF480E3C9F1CCAE0
F24F8F13C840D3D815D51C6C1BC368DBF428B5454132BDCEAF909FFDD31DB259
4E6F6B41EED47EAB63DF8B2D6B37DD024B3483CC13A06C356AE9895EAC769BEB
EF5E4839973091137858C1D8596000C2F85892D574194F0EA9B44085C3BBDC87
5A1C250E382F837F4A493228B7DAE705275B56BA63D4C4E5389B32052EF346F8
9349BEA0C53D690900696B7E92555F3935183C17752F1DE829847D167466BFFA
CD64CB39A99A44D0C255646911E40F0AA1A0F2EBB1E1A34E6EACB07A901BB4A9
4CED1ECD64E0FD0679EE72B812BE81BAE0196AA209D1CFA5C8267F794ACB69E7
1DCF71A547123C8464BC5DE64E0717E7B076251A9019C9AA9EB921266A103431
05E947584617685896EB18120F759C3D5B8305C186A61279D544E2B62DDBEFBE
EFCC6D6706337662B94BEF7C919C6829379849A19401260A7434413533269ECD
C99B60755D87C2F5FEDED313DC59B60614C2D7E72FFD2E71F2020931EF7C6287
E8933A4FA58300298B12F3DDB5318F92C6F33E6D384C155A789EF1DDB768507D
A2CF9AB31CFF42FE6B4F03CD53252501C2796B15E89FD7D5E9EDC21FFE4679C8
D20B5EA6C04F961E03169F13B0C2720DEBB9432F01A550980BF7FFCD72AFA257
B92EF40580FFC7D49BE88BC83E76967445B1F5730DE62C03875E50B14B0B6BF1
FE86A001507C04521B40EA1CF49975BFEEA0B2276AA0630DCBC4306D1D96FA21
AD7B1C806F4ED2BCE9A2B379B89EED605D72D0BDCC2A72DE0E9B41A66C608F7C
ECE80469201E64134B6D91829737B529FDD96D6C22A99E04D6532BEFAD6A9354
2B26C28A9D9D736D429C304296090F66AF3738F588D612DEBF7FA7DD4220A61C
D00F1BB5284434C917AAFE03A6BBAA3941B1056B6A3EFA631A9DE24D6E9DD8B5
26EF02EC5DDC3040E38CC2FA9F6EFE382FE4FBBBE7EEBD2D0C6FD2C5B3A41F00
08BEE50D97D2C3D6D004AD27CD4DE92D89F549D7C9959A0017F9F909E698BB12
7E4D543A7B128893D0D808E5933013A67DA0E78383EA858AE2A1BBB996C90D0A
557D1A0F97D00BB653C274848D0B49375AC07EAAC1F39A8CDAC4722F9EFBD234
9A572B8D9C49904081F5EE889665BFD5CF095DC10B658B1D2ECD03DE2F234B17
4D8B17FF27457D09F34E3AEA8B78003042DA8581975D4C14CBD9CAD608045328
4D21E7A6E9F0D06720FE1AABFD0D697B6365AE4DAFC3A88E05E97214FD97E281
20D8A1373B617E061109AA0AD371AF1987D9AE31AAEDE320A0520A1F095275D4
E9C6C475E9975FE2FC20D0E397EDB7BD229082E178AA6A6FCF0A1A038732E38F
7E37270241205A1E1B08F580E612EB64C4DC165BD6C64C44F44C208B84C0C7F3
CF111A7DC0B91D4BB0C8BECD16F1512AD2F69615F48D4050677787ED921DAF71
2A0135F35B9B1CCD769147E7A4D00F27C2E1AD8CAA72945C94960840005C7528
27F9AE2CC60088FAF1ABCADDA38D4EA22B3F912EB2DC12DAC3E890DA1F075E84
FC2FE0B2A3698E3F7166E15A9FFE7EE7B8FE92CF64E7E6A79BDCFE3F44CDE174
513001FEB070116A145FB3B0272C619E6A3CC8A3F602E7D0B639E2FDAACE60D5
A6009CC1644BCDB9A47BA7F0BD089F9BED1D904E7C6DD6BE703868758CC19E81
DAB955BB114FDF5F688DE08C84FF443BC122E310304907427C229938838A5454
CFF7A7DDB93250698AA0AB99C610D5739BED2629572529A19B0C080808C73007
08BE33F3599991D07DCA2785F52A2D9587FDF9FB095BFE6125C41C1EF08F815D
A9FC81DB308E78F05DBE7F262AE102DC020C35ED1F2F85E0B962B2967A677BFE
E847A8F50AB34063E50A0A05DD71CF004087F913EE0CF4B5284CF8FE9A2E99DF
6BCE0BC5F8D563531062B5F19117BC34CD778B057EBD29C3DD113D2D8A626621
778463D1287DB8D742DFE83E847C1720B47420F1C8B4AAE9F22CD6C76650A7D1
AA9D026CCD1B21B70D7FCE2E4C2ACBD6A361AC8026558DC3FDDEDD4109073210
DB92D6168DE1D9C33139E956AF79A217A315FA7B7962AAD680278ECE63C3448B
F5C2A651BA10469159C8911F844021FAD8EB29845025DE74A792B3389C249A86
EA1764EAD2D65F03B4FC9106B4610C16C97EC9C93466FDEF6E41F8C4CF1DD88C
50A2F6FB0CF63CDD5FEDDF536A90DB58EE30B33ED56B35AF4D871CBA7F5D54BB
399F7AD87556AC4B2DF46A79E76BC9A21026B5AFA16C3C57DB545CF8C748DD42
9C3FC85114F9806D271AA72073495CA295BE6933B1441A8253334C9FB1BA385D
79739EC28346E30F68F66AF1EFCE9A8C95E447FD020938E02C10A3347D516A08
D004B567793B3917C4EC71FB0A9C2DB0C2F30AED4EC343F6FB448978F58EA8D5
269BADB658908BBB0DAE7BD18E01314194A8D526E8D61539CCD9463C68299180
2075C8AE72E7FB4BF0203DCD9CCFEF19336B13B81B363A7D8859EC2DC27A2920
3DCF46C4D38296630AB077AD96270F0C2048CA2112051398DFEDF0573D8D9104
5389AA77C19171B22E3D34293A98B1B422D93FC7B19A19D7E1D95D49E54FBB28
E2127A06C26FD439BDC79AF24B1E51A20F41119742F4E3281AFF60FF78E65D6F
FCC2C2D56AB22553001E833160B5047931CB24F3DF7F49D69B9ABC11CEE2ABE3
7156EC48C2532054CE4621251A287D12BFFB2131781F3234B3803A4FF311D78A
EEE8FECCFA6183F750C799A8E80923EB7201344B23A1D8B0D625F520920702B3
9B46C32C799AB4D33D2CD6D855305C3AAD370B0EEBA6F87BC92CC7A3F7829296
DCB0F684D19BA2E1760F73F58522EC6FD339BA67EB314266BA9F1FD4D5835F6B
B7657CF2A0A2951BC9E072C0C1AF20D681702745D81B88208E6816770C93BAFC
0CD2293012310A50802BF2042E8835311074EAE9ED878D047D3CAB2381245451
88DFD681702745D81B882339AFC82735A1CF4D1CE19E46C61A0AF4332C928A33
04A859D98C2AE3B0DF0C1360B2BFD99F2DADD5AD8283DC9CD1C81B93B844F4D6
35520B2269035CEDDCB3B5518E2C1C1B11096363748ADB403A2495B3D53C4E90
874B15D889F41783A3EA4EA466656FE8721A5C6BE598A448C9272EA02E66EB1E
A0DEA60602D6153A670D00266FB7345BA7A2F05453FAE1D2311E6EEBAAC514A4
2B46541BCCA8323B798C6D3B8930D7C3D779DE50D50FB3CAFBE398912A3F22F4
B3113BDB5E2BC36B8FF68B24CBF7D79A6F974915B838EE89F05DD820578DBEA7
E3BDA2BE4024C50C8B5879AFBA7DAB4DD0635346554D16CB650CCF7751A240A6
16073A9F1E34262FCCE584AA10ABD7E9C00638DC06904F0680A8048B59AD93EE
9AAA8BE98438C6183E093DB16D953B78679A23C0BD615BDCBF3B5BA481BE014B
62759399EAEF8B4BB1CBB26A53901310676CEEB2EC4F37D2FED84DC3206AF06D
F3306F4195D35DDF81018CFDE16F37C7B58B6AEE2B56D12D33F599194A044C55
E21E9D187AD9CA260CDAAEDD0DD902F450285D595ACC5B376A425B37F9D9CC85
30B6C1ED9E4F1C10281CCC98E0D1C4D5047D4BA97D901A1D503D7B9E6CACB70C
5FA5B96078BC1DEB158CFB707F08A181350D6EF2BA778817174AD09B9C92F21E
559AAD015A3ECBC6773D4A8E05293C88179956E369C418B77A92E0B718668A71
C7D6B094B14FBA78D14931B4D1566B478E0D9E6DDD321D51A2E412FA202D41DC
88A30D3828EB29E0B32B95A89478F8C8EABFF56F5A09C1257CF81E56651BF157
3997E08AEF740A455F3E1C163D57FE05E7CA830163AB27FD7C001FC6302F6880
23B4B5B33BE92A0310DD612A295B5B72491AE0E2CF7D447C1B6A40A3AE997242
3C51C16C0F6BDFAB854748172F646CE344F4D76996D0127E23FDEDBE356E1CA0
55F80607132B66A80659D1E8011A2C6F184EEC7C7E614CA588BCC95C23200FC3
221F142BEBBFDD58DA9D4689E5D207751DE0BCAF73ED468BF58A186BC6BCF43B
A455DEF3CCDE1AA8FCEEA48E815FB47A57EC73E5A4C4385A2F5AE58AFD4A3364
A47680E82D0E1772753E04311775DE97A802E45496D7C99530F426D5FF7F10BF
D4467BAF34835CAC34C5C0677AF2B3C473C5EA77E3B244C14AB5A245DD8787A7
83D08A069FDE9003CCB87CF1C4757B78821D52A03F669ABC8CCC9C7AC2BDE2F6
58E07099DA3B71E6EEBCAC80D17024F4F0FFEAAD16CF75E9C06B9D593022C17A
C8734181777CAB9BF9C20DE216B3319E23FBE110BE6274895A3FF937C6CB1882
1A811552CC7B72E43E34639C248A2A6CE65ABB4A94800D73007B4F6060FC2937
DD6AB422FCDB929D94565781BB77FF203C063E252CBF5A12D572721B5F946F7B
C232B84112C1A88BBFD5F134F4974AB098935575983B743D597766C94041DA68
A11043DBCE995E7867954D2CF55961C0512ED552B37D8063F5ACF719E5F6F66F
12DA59625C437D4C180DB0CFE5C8FB8FF538B1093E1F9990481264023390ACAC
DF7E603304077B139B5F11BC14057875DCA5493CD69B4380D32A7A87F0D17FD3
7779E82F47ECCAE0749E97B5CD13C38604746D826811F7C8B663A9376B871A57
E6EF028103BDB5DF9E7D3F4A4F87101381555294F65A8E3C686A3F8D65AE50E5
481EB898AD834EC65107E430DE2E62E8C1194AB206E3823CFF7708F7D78C26C1
D30E3B6AEB7EFAE67384667C5369467F0663C927DACBAB9737D011CCE9F0EACE
9F97B5911158713114F79D4DB71C472FDA891AC2744F8E4755484C073F981D15
ACAF54AFE9A9008A616251A86BFD4705006E4AF46A848771EBC0694A7AAFC805
06B00336285F6CABAB72E7BD0196059F98ADD1ED265E96E4352DE80CA020C752
34FD6C574117146FE57FB77CEB986AA1C9FA2BA8C45C94919231A51D25C9203E
539817CB0472CB805AA9A6B5BDD7B27C047D9CAE387378FC232393DB32E2A00D
B9F0CC0FD934823271837120F2A13D7BD5C6118E30484E2971044E7021EF83B1
D328C386E13F0EEC37407D44468B5E27C4A2496B5ED750549C0238926AF35775
327FC5C5AE70093518AD9000E3CE315A4E18071665A39BDE0EE7368EA1DAA264
9DEF78173384DE6ED387C051B641383D1E637D899BFDB630A8409629BDE3F089
B8367EC0271CE295B620B9E745F4A05BAD737B2A2EC8BB9A8959A0E13A259D3C
B47377A99EBA1F9EE3D8D12E98D4BC2114A4BE40B4F5243B4982C503D49FCD50
08E8448ADB78D43F071C647F99018C117DF0B2BD415687124F18EF6716B368D9
B0024B395111FF2286A875B95E950CE999820A15ABDBCD9CA636723A64D100DD
7C66CE6F1B457BA89C4DBFFD88AC513E0B07D6CEB2FC1048E824D87501B5369D
B1C94389DF02CAC58C1BEF50462E59BF1FCD59DAEAE142BD2D4E912B80B49357
6E0891DA51C599E10ACACD6F9A07B3684E46E7D7CB3F24C7CFAC0CC95021DF41
F5BABB2B6DB8070A4F3EBE2116D50CB7FFF1C167EC360688F5269CEAECEA0500
A1E37C1AFF542133868010EE23C94C0459012F203FD61DD9BE8F5906465A49E9
63B3FEEDA37DB82E63BA2E5D206C7F6299C49CAB1B3844FA3CE4F785404AC5D2
0F8912226D571A18CA48DC1A6586DEB6D302F8913C6BB60832AC06E4A3F1A61B
11727E311D760A1F9672BDAD415F4B34ABCAFCAC2FCC33FE8717D9483C3D90CD
CA8DD26EA6B25B067BF784BD3D8A0CE8DE1F408884FE98C1383EDD3B140DF8D2
76745C88DA2EC25B75C01085E9FC6CE00204AF7959BF2D966705D80FBF09FA2B
EFDDF91B4766FB91947CC743CD6637B6E3D52454F7C7425B6901476738B002FC
42139850ACD990092546AF937F0BE8B4197E509F4927641511C5A17854CC24DE
67F7B766485310EA9A9B88EA924090D1CBFC4ABAD1F5FFEA86E9AE215C79C1CC
6A1C88EBB6A5F4AF5E70B13F6F6CA317C1A7351FD00A02EE061CB4F460AD9C33
3DDF5AEA23709BB667545DAE84A4B76A65DD7F4C2FC1BD83C432BB7CFA94083E
1630C801CC25791BA4CED3A6A94C8FB201C9E18668AFFE056C5FF626C1A840B1
5A1B11BD38059A4C12D55EB7424FF583C132D24EB3F46C7B4D72201FCD020F8D
B32F5ACD29421BADEC43FBE482BF2AC5D42F6AB08C51234A87D8D42B543BF4D4
904A9DB221D6A26F83828603A745468784B7F3091ABFFE8E8BFB5A609F0CBDE5
6745219717B3D088F9082913773A08A6567F812747A6031D07B6460AA696EE86
80F72AD122D14B6D6CA60B1F2A679835679A9F84B87CE63A1021B0A1895306C8
D08B0940830186B286AAC2CC7932F017D6ED3ECBC400428A279ECCED5D3EFF2F
F4BD7C970E4315D069F56424D43916E799AD04298D971EF7EC0426EE926FB26C
E338CFE5F50CF2937BA69AB97673FD4284B8D14F4872A439CC804FD1A47B8D8F
A5EB10E25BA41EE9124C48BE11B77F7D00AD989DF67305D3A251D1A607A5B5BB
C5E1DB6A0DCB8D0CF788A0FA47E31A57FFA78AC78EEBC9FC68AAC0AFB8C0640F
4235A2606102198ED89B9258E67A7224A4407BF6792C4576D24A193B41947777
FFAC047CB1E103DD35DC762C859BDCAD57DBEA349465832765B86046AADD8EB7
05B6CE72AE5E6A2D7CC83709E7B1F043D9B2AAB1BBA3E92751BF4083B295E46F
4C3D9A8E9EE0D6FC35E245F700BE22433B7494A1286004A1E58D5834F928EAC2
44CAD6FA6C270FD424EE4004343402A24E6776FDCBB2742EA6632DDB8B2D8CA9
72455534CD898A2EE5DEC3654ACE617B6F2F761AE694105ACB71A11C776391B8
FA4438E92AEEF0BF2AC8AF46D0339DEEDBD48EFF2EA4BD68A5B8EACA7A287CBB
48C561EAD1AF652E42295E4B5DBFC7B980FAB6AC77AF90111311025418375FBB
09DB7F34F072E4B04E0B4799FF851301BDC31198D30DEFA88A0633B8108CB555
236A14368F9BEF10EC0C46F4BEFCA79E8620825E5DEB9673894CA9D7E303BB52
2D20F91AB973BBA8D26DDB03EFBAC85EEB91A62ABA6EF344788245856108F8E1
9DCE904CD39DE18B88453D0C4E9DF81B2CF16CC8D9E67963016A1C77555FF8EC
6F39C81C5A9B589423FE8E386C646710BCF518C1B92FAE3EC2CE003245CD099D
44CE016458B114423F70569776A23C0723DC47BC6EEACB2B99FC2CC90D816164
6AF1B4E859D84D50B004A7EE85F3A49416670915B9EEBD5FEF21CB1244B88C6D
380A1B63AA077E58DA1004B15AF6908F243B673EC29ABDFC6722B8990F570D08
26E5433C25A5FE8968FE5DB4282EB7D1B85B203D71DC802866F884E5F7AF4E5C
79529C029F278F612B880E6C0D430D1D80858F5CE1C414D709C1BE6A726E2C13
8AC9AC0982C104CC919D280441616F73EFF152EBD59359563E4E498DEB47B3DE
081EB2168B3D1B42607647F6EFF89C97B5A01B4C5A035E864189F8259826F363
FA856BDFE6C72D9CA6F9C7E02536219A4504B3946B09383D81DD3904D85C32AF
4018D631818E1A0AE690E4E750565C6A63D4E868BA31AE79D3432312F8E8EF94
71F7AA5A5FCE33CD2BEA504C976E945512A38F8096C24CA17E70D61E78B3D6C8
D6FFCB26ED9010DC52B17C1802B3B2D454B2A62BFC379A48A06E11E57D7B2C53
7FACD18F19CBA04421D8A4631EE275B83B62D4195BD05545B04A54FDF2CB3FF6
66A0EB387276C69F3E71E5A53F2745950461448F3DA9EB1A47F2AB39A3FC9E26
0FD436684182C9B8FD83A99CED30FC1D066C3EA0554333695BE2B2B18966478C
A1E13A16BF7C51340B9C57773FFB718C4CBF13F9DC35C339CC467E4D22C358B7
33712B9197536D5BA8611C7F47BCAE3BFFA9E2A00F8C0F3266FE3BC28C1DDE65
747AF8F5643D441C792E662C2CC8D20E7B2FEC571623729CE14FCBCE484B7F55
A146D8BD2A38F7C07680D1A9AD9007EB369B2A6B80A956735284020E97B3CEB3
02886322215C3D8860A508795CFFCBEAFDDD7DC740742D3E421F18FE4A3D877B
221B0727107B7CF39E05810E65F566A1C695F8D501537ABE3F15F5FBDF877D78
FA32A7CF62CD4DD8B065A9C367BE5F50CC074C98C189C334C577F78B283C5DF1
BE136CA0E13E10A4B31B29DCAA3984CCFE734DC86FF098DEEA0A248016B940D3
A8F1697B4F4B5763E628A466731CE41B2854E7251BE2E085671644E889CB71E3
7BAC2C13BB200812BDD001D2CFBA62ABF0533F151B569A0BE14E361B541891B7
8E0C530AFA5FFF62F8FE26A02632ECDFD0BF913D2697A4B5B87D1DEFC1BC0BD7
DF733F07DED0FF4F9086F239DDE63EAB225F2857D63D5CA74B5F3FF6CF40DB53
A552F5999A1B500D357354164DC008CDD674A19F38BB8CD76583C605038A8FA0
AEE394CE83436E9945383FD01B9530C7333F9B903268006A99F5B0B9C60C10A7
595A3FDEF5A78A41E4BF5384AE0E66F0970A4099F55529BB528DAB42210FA563
2C0FFEF90A864DFC8050FA52A43BD093520A87455633663995CE6137298747FB
DF9B6D3DDED36978583836894DF65292F0BBD05A4E26DF502BBB968B61EEE2DB
E4E428F10D6361548940602AE0AA7A295EA4EB39FF1D17405A3620270BF01EDE
1BFB64EB7CF6955084AA74B9E8459ABFA31EEA92EB52EF994980B921C47EF745
92B6FA0D4B1951C648D1F75FA0C7E46A46B2BF96C8EBE8FECCFA6183F750C799
A8E80923E993AAE8523E11CEF846426006329D340EEB3E41D99EF12FD3CD91EB
213A92541054C05B972D78A68657BF6ED1F4BFDB27007903DAA149088143F1AF
BC0E85D15EB6A459A08F09CA41D28ACDABBB8C2B2A3C9E36431D9EE9ED999020
B01CD2F176ACB3B40C2AD40F13350F70A046732B115C4E8026D233EC0AAB9022
A6C6E67F9E62416D85AEDB5A78DB866EB200F60801805A8C4D880971F692346E
A5DA9B6FBAD028F92D0A7C89305D2E396A57D348C8699CDBBAB318BB72913810
1F8384D7183883808F23EF4AC14C42BDAC9617AD31DA8D1CDBC4D20F3F418BA4
17939172074C40600FD67B79A8EE5E0528B365B81BCA25DC1D0D4C3FF37F2521
E7EDE4696CA09440902D0983B4EA885CD9DF121103BF80775281FD7A8B4132D5
C35C47D639FC201645CEC2174D0E6422111BB81D4C8B5B1DE06718EA3286BBB2
365138869D666EC10BF1C88AAEC1A55A459D3F57504048C0F210D1A6B83F242C
D7D3BBE4559246C9FA712D7711E6462FEF6165B0143AC59698E084E5A72B86A8
820EDCBAD52B8C391B9272AD31963B379EB1559F77B9DD072CD64C3B048E3EB4
66D7EEED6E00DD3B183CFA64757CCE0BB0CFE5C8FB8FF538B1093E1F99904AFF
928652490A31EFB184F781387785659BFED08DED24E434D98573336D5F16497C
F076AACD1E69F824581A91E2E30EC3FE52FD3545E8853A6A8343DDFFB840F5E2
0C8806D73D94DAED2909813121F0ACCB72A0FB54AFC17A2ED5AD1274BC51C67D
CFD8E886857484E09333F26EC047B16014275309AAF5A4C5E050CC75AEF32776
B3A29543F526B92CFA68A927D2D6F8B4ABDDBB6FED5048600778C4E66F7F9B8A
21A3D319F5A2C3548BC3C9CE8F5A887DB9C8A48595E399ED18C84F86A7D5DB98
6A59AA60664D2B3CFF2DA1552EED275B1B6443D5507F563A528E1E6DB60D88F8
D524DC50EA94E931CF4859A76D6205027A35B28C8C771F3B74C0ACC8DDEBC0CF
FE5D7849D734BC9844749FF7C02F4CC8CB0787E20624CF500757712F7A57D062
A620DACA7750D7EFD51E830EA429DAA585F70B5D1040054F2BF3F2A0AAD96571
2728417DEB91020450E7DB0A8E981347E21C316C918797C4B949101FF665A780
6D89E7739681A0E5273A9BF938E6AB16B2A52ADDF6EF861CA2B6BD49B44A0EC4
6AD2E8F794C151C257CF9BCA17A2D508D809FF461106D38A5F42EB62DBAC95A0
53B2A38C80CB0D5520F6080FC68ACF427F7B09C61AEE0B67BC491273035EE652
1D41AAC9B1A9ACC5F02B868921A1F27153C874D9E7D1F2FD32C072BA4D82DC3F
1062E543EF66B98F9F45C2ED71955F3F321192903A4F9FB2A08B48360A2F4C86
3DD60FAC84A5D33E27382663283EE9D309C72DE267794D6A060830BE729498C0
147C5B77224C103909C02130B506FB4732B136ADAF438E48FD16EF420C1D801A
E1CC3071BB8EA01F035C399EDED6AF7A70BF27B19A170DA0767B6C0A51F66AB1
54DAE7900C218542AB1F562B205191673BE8DC07AEC284DEC07925EC6F2C26BD
DAE0294BC44F4A5BBD6CB72301B0ADA3A44868B78687774923664DB8CDD1210C
3242B4017C11A635E09D7066AD4E54B8072927D0241DDAC2F69F99C2F361F092
77C8467852C6167A41D9137E9542C692F9E5A139A6FD5A64D6903A23EB4F7247
C1544BBA54D01D2B42B3980AE7CE89485C5F41E675B238AEFC6CE2A1D9E51A4B
61F5B691F04E526C85C657D1C6E550D9BA09C5CB3FE06390D32D8B1042DE5834
23A2EC4D219FD964D4FB01E6220B001AE1A142EC970409266674CA23110FB41F
88304290CEDA8D1CDBC4D20F3F418BA4179447036070F045637BF6F46DC6CD4F
EA8E18E3A6CDB35E8E468A1B62C8929FFC1FEA0F312854E772DE956ACE0CA995
B7BE5DE65590E7C217D43F798EE0DD3FC02D26B276628633378ACE7D3CD04517
0F95D6191F3287E32BEFA87A839D70015EFA7FFAA12B256EE39F1899A0F1A13A
E321001D5ABD368FB7792298859FDCFC04820E2C57F585DA96CA166C0047D28E
14AA058A34FFA56E5DAE5E432EDB4222EFC2A63E87293390E2ED53A79B75E175
C64DE59E00E9253C9B160D225ABDE2A5529369A03D501AC6601146907D83D768
0C6CEDACF572324DAB9A7B6FA299812BC828B6E0B9EB9C83FE340EBE8F03A38F
43D05FD1B1DF59CDAC54CAD5EFF289A9B7D169B36350F6405A643AFA5FA54A1B
D687FD91FAD6E45EAA03EFFA83E84F9E953A912BD611825E99124389F65E0DBF
66CDB26E66879D869EFEBEFC3DCA6A8D6933DDEDA10171D4281080BA9F50E917
85711E3B419296237C9DCFEE98A7EFDA898E95F774F78F0959D682E13C4176D5
E5A86ECF2693940C90625D1673093CFD71FF2DA588399B10AF8971DD6C9A8993
94FF19037D8A673AA447EB75BE531D3B1B7E41694B03D9959B4266FEC7816571
2D78192D10CF9C166F966894FBE80A900AA27783C45CED390EBAD6D893DACB09
DCED2FCDDF7AA5E402A021411BFAD49CD62F83C6E32F6A21DBA1C204D4BD2FCF
4A5A0B93CC99881FDF09A9379E3924A26B286DB76B9F56167D8C0F3516C416BA
03AF61F982FAE658E188BDB36EF4B50F77F5A4AD07FE07EEA9F97EFB002CBF81
8A2B50712DAD0A53BD9B9AA3BDBC5FEC96D9AE9E3422DA16A6D082123A6A273C
184E496719A54E6030D04576A763849DE2447210C874F6FF9A95D8526E02D446
3AD45667B53A1D027129777BB56802707822DE85145694F4D6DA385489B60ECA
96559EC2AB0A689FD7A9AD35E79BFB6574BA23C5BC8F67C41E14CDBC3A206057
99532BAE1FD33EE749DC5CA4C868C094BE88B71855F6282481DF824F81180C3D
F89F1AAEFA49BF6F1E3384CDAE27F49E9DD53956A4B47759B680D45ABC17D942
30C074F160D43BF068C10D6F9AFD5F149516508792883821BB22E6B2271613DF
7982E97287956C9FFAA6A1C76238C4D8192B7963829012EBA17B58B154AF8543
39C59370DA9C9AEC6A83C30A70A34323D56D124F73FF91CFE5273B704A1EAAAF
6E9D46910539801393C3FF55A96331BFE725DD4D7F5438D7B87EFE37BBCA049D
CD6F8E43E60A0BFE64BCB9257A6D6C19DB0DFE2937634DD0B9B612199CDDB4A8
7DBF06DFE56AC88BA4381C92831BFD61B676F4FF319CD64546E560F1515875DD
9162752C73293FE05B5383C49AD96E100EEB267EEB8D7DC98EBBF55011AD5710
635340105E022A41D7A0D523C06678F931663CAAA896AF9D4FFF8AA0AE3DF700
E40C28EFABD4BA03F60F0C7D018DE4AA3D9A44E2D7AF48FA2D631A940A62BEA2
F092A3E45C380E879F1EBA09F3D11260F11B602B9F48832400850E2EDCE10917
24B0A06962764A671D66EB451DEFC390EB33C21AB0C2F48F82F9C6336D351A69
B88CB3D6E329D73961D494FDEF9E3EFE930AC07EF5549AB1D587C464B81693FC
BC24C0033AEF18CAA77C3E1F216F33D02958474AA95A6AAA2347EDC8E83A1771
73F2A93F60D8B8768E8FA6442B793D291590A381B143BD48B95250D72E01FBD1
740F7B3ED9A79FE6FD1A5E16B3A6395EE76EDC73CFF744AF97D7CCF83084CFF0
D019F1F131BD76E748078A88E853BD9A751F6137DFEA833004F468947318FFFE
992B3B2B1C8753E86C5FC40BB41394D9297AE0F532F49A93873CE97AE2F4DFBB
748488CD1BE8D856656281EB2D210E0397A5835504BE0F327FEEE42B483BAC09
D6689ABF61B74965FE75BAC7FC7A6812DBE86F3DC693E6A3105A8A41BE553D01
2754A6D029ADC5EB01367274B59FC6F2A799EE15D2122400299E1D502C4FC51A
EFECB5313B7F713716A217722C4A06C2AD4CFBF4328BC54E15C66B9BEF2A7B1C
DF40AC183179C30EA709E549AF3C0128B036D82B1A9F8D9EAC5120BF7BEEE925
6AD518B3D49E24589D3D46AA18829E285AFDE19C788B5C2BF115C29D834B54B4
64E495144D01E56DC807734B35CE28FBE3996E7DCBA58B2BDF073723D92AA3B4
EB58F6EBC3B73DB3C95F1BA7E3806A1534708C378F40466D5AC1DF4BCFAD1DF9
6F82FFCC4145600B49D598C4D9F57045BCEC024AFFEC504702002CF97B0F8E59
055A7A457FEC6C9A25BBB0636B8E4CC1591ED81C16A8E8B4138360A410A6C781
7D55874870992DD4C818EB9DDD10B6D5846434F37294723C825B0D6141DBDB78
A0491432D70D1417541EA61390913108145F747754CA79D8F6EDECE0E8BD8B48
E55D304B11B5017B4E7CB7ACCDDA8AFE80469C00CFB4C2F573C66FA03DF92D4F
5E3F8344288E79B2FBAE3CB6DEFB663D035BF224B6EA61C8CDD9758100ADD9CB
BB97E584D5F85E8CBE85DB16F4691EDD31135B78B5383119AB3704F849C2316F
95BE42F08A3A67AA53C4CD0B51B2211AE0E9313F4B66F62A24E625AF3230DCB8
85A1095DF657706DB32077063F6ACB3FDA289F09A5729641561D7AD08B8AEAD9
AF75A2A43084CCE18B1EAD9B4110333102E3CEB940813583EC09EF5766F00C25
007D304188A9E3D175616A8220A8D83DA5B505B5F326EC465D50D094AA31D13F
89A74D8550213E1A5EBC2304E6EC354780B61D6065BB27BBFBE0D970F75D8883
F59C4C51FCF85D95A91E95797161ED0E0F66F65C923E567B225E703D9A28430E
C6591FC47CE0E7431D2565F9EBA3B9318546BDD02D36CD00AD9EB380107A1565
581A5FF98FEB82C16DDE509CC7308875A44733503D4DFB43726576FD8A8494BA
A30F8C0F3266FE3BC28C1DDE65747AFEA99F6570EDE5C0912F7EE4A96379C955
E57F3A02DF9B69F620A60CE0A04EB773F097D8DCDA6E168BA9221228C1780DFC
6ED28FB793C3D9C3ECA83702960FA88B0D6952F979219B247AD14CFD0DE38445
754256FC5F537264C0D006978CBDEBC7D6904FBE0D6CE8FBA82343EB98B9B231
4CE4935EDA3270A103648997E867582A142A89B65AA64D0A0F1FF41447CFEDDF
EB25F63DA842A6235E343A01A94B4F28882C72FDBFDEEF6F2D2FBD4E421297D3
6AB8A7D831DE499CEB3C9522F47D6FDD7BF7665D584E4DD35D907DAE068C755A
7D1DCA5D48C817186CF4E77390D80B0CEE8D52BAE71F9CD3CE185CB98D42D400
A94461DDCC6AD816CEC368CA4EF2AFE35798B908F5087CBF8B4D7693BE05736C
A382BEA56E3EF92C7435438D4144862CE925D163BEA22381ABB958B4E01FF750
7BE4D608D72543F7692E2DB480EE39BFE6AE6E00456948BC4C4261AD72D8A965
064887899C110A23D2970B441E2A35AE083CFA2A5F140D8342F8EC352745F5F8
2837228484D0F967E12DFDDC54827C9D5B7CB54E36E6A5E529D8053700BDDB4E
2DFE7EACDBCA8A7F3C8F0C1521CD2BA8360AA2050D539F5A13E3370708E6CDD6
2EB5BC836BA4FCDD1D0C71A23F67F3E689B2B26247DB5A3BBD16E8873A811954
AF92E3AC314AF8FDBEF52517DCE8A204A24A2FC36B05E83849821D077FD359E8
DE829B03176768ADD400CDE2BE2C5C14D8B964B980FA031CAADF93F881C2956C
4250F5F28207671D7E3FEEB31A46EADAA4827160B800375848784CE927596DB1
D7F391E34FE1FECC661C05B430BB65975F5B4A6E200C668AAE2E394A21B05070
FCC33D46F9C2FE922A8DFF9E29EFDB2B70E64676F88660178B7B0C497981F764
003D85CCCB15B587A1B4927F33964F03B0B331DBC88524130625B70FFEBE287D
F97EE708E78C118D43A76D582650EF8767142FD66C35F84A671893F033848E67
D08709AF1C5E5BFA1E256EE5DAC923CC821B922CB3D690D600A83B33A8B638F3
F610618A28CC4ACEA44C5BAE3E0F2C80B41E2AF91D2D707E6F5C409DD6B28E77
20FA95A0B84A894016987D62B6EF971D7647937DFF15BA94B1E87FE23F11E215
234565C2D3B94A7F638C8D3E34061F9385348C498E5A68F3BC6BF940B24672F7
3C7A8459BB5AB88635C3E1B89948BE9F32EFE05F0AB5524286430D222CF1EACF
0056E7F6E733AE98A7BB53EE4D694987D9A8FFE4A0A9EE68CC87B7529181FEEB
B743BEA31BF8F5D86DACDA93E7DB66C9BB07EEE8B9372FCE121D8FE4FF405287
7522B643BFBF372B75E65D6FFCC2C2D56AB22553001E8335B238E1B400F441B6
27C895947416A78AEAF6B4684E6CA7856EF78B2E03A0269B0BF62D3CBAAAB217
F5B4C4178DD66BC0CD9D58A7A9335A29C98D586F5211B7DC6B86BEBC65D2D965
B2C0F5895C8F92698037332C718B17313FE3EEF55C3C9D7850F97A4EBB3A274A
153B9984C76EDE45B5D6F5A5F33CA31733E09733A7D4A853D99C635B23570A7E
D33F437F385B924C89E14FB51BA5B22D7FB2451D4A31EA1AB1E37F1CC2B577F6
563A2B05043D0FF84D1F2F7CD544A329ACBE29B7887A6A364F9DD44A4F97A21B
7BCAE322CEDCD02AC1360F2D4238B539BC80E89821A5FE6C48BF44B3FE1CC88D
DF9E06747F17C14C8FC935AA1E2EC698EA640F752672D4C6B94014647062732B
AE788C6E93A08D0ADAC6A25A53AA6722A42F260E4494FA899FF43EE984ADAB27
80CA144ABDFEA50BD7829E7491779BEA526E7DB3648DA533B77F21B03D8D3409
2CB9FFEE9C4BCA7580DFDFCD16805ECF58E32BA43D04F4AFC36788C3083BB242
A624B13C666A8BBA72F9A2B918B36E0AA2F1AA183BF679A1A86E19133BB0FF3D
DD591BD50B8B3F946DCC5D5582975C8B40CDF1365D4D7B25D72F6C4FF50C0765
F8EF31A8DBEEEBED91E9BE7582BAD97673AC1977D3B19D4130B686A72F66991C
9A4C428C3D33CD9618E154DB6EA731DE1A297D6A284F65DF8552047F06EB2CF8
433AF289140D57A2345F7B505EC40D1CA6CB491D0E5F26C0D00B886F36177687
89AC1A7462AF121798F939B0A14466651ACFCFC452840709450CF8AB68232C46
79A07170CEB26E9EA3F22C22C993407462E8E6CC5950E784B6DAF6D519908D78
FE779653101CF9B1358862A20B63B6C4B4A2D1569E7C0A36A874B1B8EB78A3E7
51CCD96F8BFDB95EB9A04F58078B2CA03636DDA52B7CEE9C1C40CC1D2D08A45E
0B6ECFEADD4B4B1BA1C001ECD5817954C34EF2A6C32D5B96E22EF96AF7C6793C
BFD47446A02C80A2298169BD16E41C05EBE31DADA8EBB3021793F7D29D3E17E7
8268E68763FA71905B11E2716E8A4DFA11738948B7F460EB4646B0ACE7D783EF
B34369F064553A8B2EFCF013DE198123B3ACCC888095F816C7D3D19F7E5D4908
3AD2E94A92117D05CAC8EC8DF93598F9DE2DA134FF86E8A76D1B59A095DFCBF7
9F7E8F84DB1517736EBB1573CC330DF822EAF99F19A291D7097A2D1A35AA6923
A0908D2D27C4AF9D94C2A2A6FC1E4FE330F426D4633D5BFD57754E6C26CD91A9
FF01A569197A4DE3298DB8902FB15513ACB54D72A6F8601A08C9E2C3B904846B
05D93A1E711B777F0C5695077C01C3CEE888B93E8E99C1BA9C6BB24CBA9354D9
C61A16A10B5766320E0435F1DEB4E0897425F065DFBDEA1646FBC7BD1FD5DA7D
362130EDD83DE01A7155501DCB74F4013A7AD1473E6701C98E1CCFB1643E0B29
A42349A79AE46C72B949992F894AA2814E0CCCA8E37A073D8E7FE2E45158F6F3
19DECCAE46DFB7E689C9F3C869E8157A489EC38075524C7200CE4833A2C29087
A0BCEBDE8EB89919D35F9673B05C8829BE252B3AABF45F253DE4C3743756F431
0B5864861E53E77328A58A6038BB37EB7C6AE8C677CDF4313257EC930F421B92
892AD2BDA74FB24154AEB359F7D8E966414B6D2FA8C790995AF6D0CF8C02CA2D
CE30214595548F7D099B38819E0CD319DEF0CF7C396EE60D59B1518216B1211E
15A3E61398F4C19B369CB2D1ECE14A0D14EC21435625C0134D9CAF0BAA99D2D9
3027B82A097D10DA30AE89D11684B7F99DE79C000BD55B5488859197B3FEB005
3D822FADBD441A15DB36A7CE9E136AEEC4002E465D4FD683A72358A2901BA0A1
9A63AFAFCD3E86D94CDD97E18B3CC54EBB27A8E4278F6B8EF6F337FD412F7086
6CD6B8CC69985203FC5A94326DFC9D63E7BA131D39AA4AB220777F9BFDE97271
A557F13A2EBF5FED549471D0E6407E1CAE1E0A8BD139E961782E667F66EA8478
2D97245EC9623F99E876A9F6753B327DBE0582225FA9FC573181275D043DB033
6D00E4DA08CDBA631CFAE5B21929C0BC1410CD68F49474858E6EB6B031584CCA
5FC71128DFF105F86682C5FAE3241E39257BA17B41FC053263D6F44E31010918
C0981987123B15EF926EFE3DD47A02744C904646F112EB85E4D2D0F7FF63254D
C6D5B33AC9DBA0382413549CDE0004AF46D08FC096D86C31E0F4F985F314396D
8A8FAB19F8028D87DD1D1FDD78617485BC44E54DC6CEE45F7B89235814AED387
19C9370979AF54DBFB372605FF64E9EB83525BC0F7423A3E9C817AC92BFBB5E2
838B6B7E880F3DD94C5D8E494BCB5E1FB1486464CCCE7D06AA4B9029D9BC1BC5
5A9695C40EB7B502341ABA904DAF37D828EEB36FA74318606C77461FB54E6B83
48ECE22D25640B9637C9D355916EE9B2B084E097D8DF6925A9A5ED019C8AA594
CB8D47B3D359D1F6B6ED013E755E02C7B61130D662EF3F4964A4FE7890DB5E5D
56CE361DB5CE952E40EC702AFD1E51B1F25BFD2D171406E655A8D22B02566584
2A98E6F6F4C50927D6DB0E8D1EC40C4DAEDEEC7D0D0F1C9945E847F8A155F797
16F9E00529E3FF2BDA0EBE43168D49F08CDBF2A12E504C927899E83ED9D4FCCC
C6FE7E4E32315E6B641825ABB71F33A4AF8B6D99CD05528A94320E81D7A3C392
841D62867C69C889A09B22CE0A66411F6FE1C7EA30F534A026A77A1084212569
AB56046E0AA46EBDEF77D797D0940C4336C73F79346DCA47F4812FA2EE0907F4
A3AEB332534ECC7FBB5A9833FCEC1FDF0318867AA6EFC25C627FA0ABFF1EC724
2FA864D9A49EF50E9C391AAA4214BDE313BA15724E558FD6AED912614DD0EF5C
D2059CBF82DC3F5ED92FE4D1FA7221B10D2AF07E59F3503F7B62C563A28D8707
F2FF0755D79A6C7885DD864D3119CCFC4033401CD0A06BE0A96C3657F8517C92
CBCA670FFD93FB6118FD7CDC27E719243DFCCC09335C3F20C384C3AD669C22F0
7048505E6D2FF224DA4C429B69324C26B4A5E5B41ECE95272E13DFE90FC97224
26F488C90A6FA28CC511AFFD3FEBC372566142FA545490A645CDA076804AF3E2
336961E535781736C0D62F944930A0611B964446898FC3D366A59249C22BD051
6F95BCF0FE3DEEF4DB68633901B0ADD2C18CB26A8FCFB61CC2570DA9DC9F61B3
BE5A3CECA168E931ADD63206710B7E0B25787EC10E6DB731ABF7F18BBBEDE193
6DA1B1629041DE4E26F607841848B7D8BC390A94A53F164ACAB47E8B6743A991
53A6583F273AA0E6E018512229293F188B22215F0E3C02772990A86B62E5364D
C18A20132C7CFDF6D63AB702779583953B10EF021FE63E65C536447E7A695205
C0956C3BB7E74F87087F483E487DFF52B4E11B6D8A6BA7228B4F01AA24A2D592
7D27282F90452ACE90C47E03C2040223D1D9768E3242A24227466B7080025492
0ADE4ECF587476DA23518AC2530D8652505B69C335DEB26FE8E89382188156D3
D019270D9D91350F62D05453EADA838CF7493AA69C31CD659D14057A3A18D92A
6337625A4E141720419CF6894325CBAF63A80E48C9679372CD76E380B70BFD35
C056B524BF927D66DDB78A5F1497AC6F92D087899229ECB911DB0034B7F37B8A
1103F045AA56B08A3E77A99107AE70383437521B71B570C109E4D6A65E737D98
FD4718E83551E30841C147A213A1519AAEF09D0613C153A34B33A74B5B0FBB3D
DC16E8685E265848C4ADD740D74522DBA54EBCD2B8FE3D4DB5BE4A28834F6E63
618C99EA70952BC4B63840D5DB3DB8D94792EB605390E41D5BAADFFC964CC049
C75E4AD676A1CCE5BC85D9A74E667F6D988BB03D178A0B1BE012968477342F05
B34E78C9C56531E89B32C77D565162B97F766F551D1DC21674584A4D6AD9A257
E9BFBD40305406182BE1773079429DC6F99418685BEBBC997E3213CE3F6E227A
633CD6A4710FCC9C028328B53DC475F131F5C46AC1076315880954693F144ED7
234D86BE7841197B6B2135BCEF55FC14C22FA5D1C81C977B6EB25D20A45CB247
DCAE2799EBA01A4EB48DC582E714D4F156E61421FD9B38122D49F30253E42A7C
17EC9B2A0BF4CFEB439A97787F0B7E5AFF502E77C8A8544717A2BDD756A479F3
09697BE09BF8706D9C344AC717C5517945754C87E67C132ECD756DEF623C5605
2FD1611C2BC882B773ADB5C7B4D22DDC3D9BF5E1843662CCEE6F35017960C107
46EA2614607F1A0A62B15A52A30FA3528B52A492078D22BE56186DD2FAE043F1
77F24F4B786278BE009E215BA7613BC0F568176AFB0B3FB9E445AF543D68A5F0
2840C7E3E2D4C5FC9A0149D2D7562AEDB399B20DB76C80C4FE6D06A819E8000F
FAA89D76FBF5B16D4374498D316FD185497878F9ED54117475947BB09C136835
58F8D830010BA4A175DD161CF02986C1AF6A604071A4CAF96D5534A66A89F368
B348F4CB84A02D4FED23B8067B61694BFDFDE220FB3111EBBE6CE7A81218C844
68F535F716B89A8379F06F0B060727E5263D7E15A747F448439A465BD0EAADE4
95B59A690975916B00EA374564048C4FEE21BFF6A6D5CBFCF7CC6FCFF380766D
8E360715B7F4DC6226BE3933C2077BC95BFBBBA94EC74EF68A19F44466DA0A02
6CD8D3A6145BFA22F6688D009198EAE9DAD025AFBE2A3C56AA06D459C9DC98AA
904A0ABBEAADC9D59A1240C45D16AD1CCB28A0269A41C29D7F128AB26A882CE8
2D37181974EC3C31305CD9FDA3248FDB7AD74F213AB23113A324AD94B1573CF3
AAF2DBCFBCD35C548D0F326402A311078DD27B053143AC18691582B4336E566D
61BD5A1FD7CF5DB00ABC672275BA14734FB3A5BC1EE0C0958BE057979F0B3973
853190DFA6C402E31AA42BC1F73A9C27B4268295B3BF1CECC2745119E9FF136C
7864BF8CB02F21D7D880FE57612EDA09146EAEF465A62921EC7D9A1F162F85EF
9659320F8D816AE4E8746D7369EF4884F6220F154D17B7B7479F7449F482C8F9
C1FF37840C852216D396D08F723435BA336EF8ACD8E28AD629DD4003C1050C03
6A44E1A13B2243EBD68972B2A3D922710246D3FF12F9F0B5CAFD22BC6C3F8A3D
F81CC4D58A4F5AA634EB70524C7D9C7A86D2F0F7D176D018388E664C67F657A9
BFDBE1A378C5CB06FA88D773B8B788553C2743451072F539F0210304BBC38207
E633673A8A1592DE66E07178D1AEC51958A0BA23DAD0827E94F033C748D9C171
A20CE2324A4703C0ED880E5D4A83125D832747B43B4A108BB375D1C59D87480A
330E7F32D752AB35B5E48370100ABA5CC981E9175DC099084C722FAC1A7C56EB
2397780C674976B86A7FC211D2DBD27C99C168658B6F7FA259A90C4407435433
2ED132904D1217CB3FD26BA3326C58ACF83F8ED1BDB031A643FFCC223D807EFE
E95588E04EBA60E99838AC096CB727E940CA1C00E0E61EB4B303C51CA89B5349
2D8D32A4162BE9CA12B2428C78FD992DDD3698BE880839480F8C4F643EB110FA
757C14596D0BDFE69A05A7E41E888AD9A4E4D717B6414D9D0814CB964A65669B
C37A8B12398D65831A5E80C331B716BD79E6E2A40CB37646C3504EBC5089B10B
501ED28F34D5C77B013689BD7CC862E8DFA493C5A26FD15CE590DC55627C75FF
5A939C08D19CBBF218F190EB650AEC399AD4580A8F92EE91D8CD0158EC170100
30F1F9FC08417D1E227E500327AD9FC7D808D434FB9BD57F94D39E18636E01F6
DEEF14BF204D9A66CF96EDBBC5A5DA8C7D6B734CA1E5864F4E677983521311C9
FD9A53C43A2E1A112EF0BBA80EF828CB64F90E6E4ED090663C24F857598DD76B
FCFE3EB6001CDF982C28C8815278901010CAD1CA4DAFDD29F63FAF481009BBAE
BC570CA5310829BFA554A1BFF7F7125B6940F3F89599D349A19838EC95013048
10E7B9D4209EAC7B5651DF4301287CC92723B2A5F9285875CDAC7A87B57B828B
D7CA5792CF194CE2532FBED2A682AD75E827C8BA1874A89CFE87269E636371A3
0D9822ACCC16BE8296748CB8D64713A9C01DA4723B706D5EB5275D43CFA03BEF
4884520EF959B6C53C21E9C0C82F56DFB4E4D507889292851CADF22316F2BD2E
59DDC56AC9D9F7F6175F3D6FC06DAB41C98C594170BBAE4A4781CB56C8611E30
245754AEE4FECA790319501860477E0CE12CB2065B8B5BFAE29BA96447198373
DB42331DC4EFF11C964EA054D45CB626D1A339E03FC72028022F1174F933B020
3E545917DEF51EFD1255B0CC1C66B7571F82BEE80E63DF5496E0DFCA9C459D0A
C7A10EC3E8A2E93D36F8E24F496591332DB7897983813A7A6F6612
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600
(/Users/Matze/OwnCloud/Nachhilfe/Mathe_Arbeitsblaetter/Lineare Funktionen/Line-001todo/.texpadtmp/Li)
@start /Fa 255[55{}1 66.4176 /CMSY8 rf /Fb 236[67 67
54 54 14[42 42{}6 90.9091 /CMEX10 rf /Fc 146[62 4[41
34 34 102[{}4 66.4176 /CMMI8 rf /Fd 198[35 35 2[35 1[35
35 35 35 48[{}7 66.4176 /CMR8 rf /Fe 149[25 55[61 48[25
71{}4 90.9091 /CMSY10 rf /Ff 194[71 1[25 25 45 45 1[45
45 45 45 45 45 5[71 1[35 35 40[{}14 90.9091 /CMR10 rf
/Fg 134[45 52 10[80 4[52 43 45 18[56 11[71 5[68 5[25
59[{}10 90.9091 /CMMI10 rf /Fh 3[50 129[40 48 1[65 48
50 35 36 35 1[50 45 50 75 25 48 1[25 50 45 28 40 50 40
50 45 13[50 2[61 4[70 3[71 59 61 69 1[64 68 6[25 8[45
2[25 4[35 35 40[{ T1Encoding ReEncodeFont }38 90.9091
/SFRM1095 rf /Fi 138[50 35 36 35 1[50 1[50 75 25 2[25
50 2[40 2[50 45 13[50 5[83 56 10[68 10[45 3[45 45 45
1[25 46[{ T1Encoding ReEncodeFont }22 90.9091 /SFSL1095
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136 -442
a
SDict begin H.S end
 -136 -442 a -136 -442 a
SDict begin H.R end
 -136 -442 a -136 -442 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -136
-442 a 0 TeXcolorgray 0 TeXcolorgray -128 -327 a Fi(Matthias)31
b(Linh)m(ub)s(er)884 b(Arb)s(eitsblatt)31 b(Mathe)852
b(10.)30 b(Septem)m(b)s(er)i(2016)p 0 TeXcolorgray -128
-290 2008 4 v 1880 -290 V Black 0 TeXcolorgray -128 -128
a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -128 -128 a -128 -128 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 -128 a -128 -128 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -128
-128 a -128 -128 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -128 -128 a -128 -128 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -128 -128
a -128 -128 a
SDict begin H.S end
 -128 -128 a -128 -128 a
SDict begin 13.6 H.A end
 -128 -128 a -128
-128 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -128 -128 a -128 -128 a
SDict begin H.S end
 -128 -128 a -128 -128
a
SDict begin 13.6 H.A end
 -128 -128 a -128 -128 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -128 -128 a 0 TeXcolorgray
-16 -36 a Fh(1.)p 0 TeXcolorgray 46 w(Gegeb)s(en)e(sind)h(zw)m(ei)g
(Geraden:)122 b Fg(g)s Ff(\()p Fg(x)p Ff(\))26 b(:)g
Fg(y)i Ff(=)d Fe(\000)1832 -72 y Fd(2)p 1832 -57 36 4
v 1832 -5 a(3)1877 -36 y Fg(x)20 b Ff(+)g(4)121 b Fg(f)10
b Ff(\()p Fg(x)p Ff(\))25 b(:)h Fg(y)i Ff(=)d Fg(x)20
b Fe(\000)g Ff(2)-128 -5 y
SDict begin H.S end
 -128 -5 a -128 -5 a
SDict begin 13.6 H.A end
 -128 -5
a -128 -5 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -128 -5 a 0 TeXcolorgray 174 114 a Fh(a\))p
0 TeXcolorgray 46 w(Pr\374fen)31 b(durc)m(h)g(einsetzen:)300
227 y Fg(g)s Ff(\(9\))c(=)e Fe(\000)665 191 y Fd(2)p
665 206 36 4 v 665 258 a(3)730 227 y Fe(\001)20 b Ff(9)h(+)f(4)26
b(=)f Fe(\000)p Ff(2)120 b Fh(Der)31 b(Punkt)g Fg(A)f
Fh(liegt)h(auf)f Fg(G)2308 241 y Fc(g)2349 227 y Fh(.)g(\()p
Fg(A)c Fe(2)e Fg(G)2689 241 y Fc(g)2730 227 y Fh(\))-128
258 y
SDict begin H.S end
 -128 258 a -128 258 a
SDict begin 13.6 H.A end
 -128 258 a -128 258 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -128
258 a 0 TeXcolorgray 169 377 a Fh(b\))p 0 TeXcolorgray
1611 581 a Fg(g)s Ff(\()p Fg(x)p Ff(\))85 b(=)e Fg(f)10
b Ff(\()p Fg(x)p Ff(\))1436 757 y Fe(\000)1517 696 y
Ff(2)p 1517 737 46 4 v 1517 820 a(3)1572 757 y Fg(x)20
b Ff(+)g(4)84 b(=)f Fg(x)20 b Fe(\000)g Ff(2)181 b Fe(j)20
b(\000)g Fg(x)p Ff(;)15 b Fe(\000)p Ff(4)1593 973 y Fe(\000)1674
912 y Ff(5)p 1674 952 V 1674 1035 a(3)1729 973 y Fg(x)83
b Ff(=)g Fe(\000)p Ff(6)180 b Fe(j)21 b(\001)f Ff(\()p
Fe(\000)2521 912 y Ff(3)p 2521 952 V 2521 1035 a(5)2577
973 y(\))1729 1189 y Fg(x)83 b Ff(=)2027 1127 y(18)p
2027 1168 91 4 v 2050 1251 a(5)300 1419 y Fh(Einetzen)32
b(in)e Fg(f)10 b Ff(\()p Fg(x)p Ff(\))p Fh(:)1566 1673
y Fg(f)1636 1545 y Fb(\022)1713 1612 y Ff(18)p 1713 1652
V 1735 1735 a(5)1813 1545 y Fb(\023)1906 1673 y Ff(=)2012
1612 y(18)p 2012 1652 V 2034 1735 a(5)2133 1673 y Fe(\000)20
b Ff(2)25 b(=)2400 1612 y(8)p 2400 1652 46 4 v 2400 1735
a(5)300 1975 y Fh(Sc)m(hnittpunkt)32 b(v)m(on)f Fg(G)1089
1989 y Fc(g)1160 1975 y Fh(und)f Fg(G)1411 1990 y Fc(f)1457
1975 y Fh(:)h Fg(S)f Ff(=)1695 1901 y Fb(\000)1746 1939
y Fd(18)p 1746 1954 71 4 v 1764 2006 a(5)1827 1975 y
Fg(;)1877 1939 y Fd(8)p 1877 1954 36 4 v 1877 2006 a(5)1922
1901 y Fb(\001)-128 2007 y
SDict begin H.S end
 -128 2007 a -128 2007 a
SDict begin 13.6 H.A end
 -128
2007 a -128 2007 a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -128 2007 a 0 TeXcolorgray 179 2125
a Fh(c\))p 0 TeXcolorgray 46 w(K)m(o)s(ordinatensystem)i(siehe)e
(Geogebra)-128 2148 y
SDict begin H.S end
 -128 2148 a -128 2148 a
SDict begin 13.6 H.A end
 -128 2148
a -128 2148 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -128 2148 a 0 TeXcolorgray 169 2276 a Fh(d\))p
0 TeXcolorgray 46 w(Aus)f(der)i(F)-8 b(ormelsammlung:)33
b(Punktsteigungsformel:)f Fg(h)p Ff(\()p Fg(x)p Ff(\))27
b(=)e Fg(m)20 b Fe(\001)g Ff(\()p Fg(x)h Fe(\000)f Fg(x)2973
2290 y Fd(0)3012 2276 y Ff(\))g(+)g Fg(y)3203 2290 y
Fd(0)300 2389 y Fh(Auf)29 b(k)m(onkretes)i(Beispiel)g(angew)m(andt:)i
Fg(h)p Ff(\()p Fg(x)p Ff(\))26 b(=)f Fg(m)20 b Fe(\001)g
Ff(\()p Fg(x)h Fe(\000)f Ff(9\))h Fe(\000)f Ff(2)-128
2411 y
SDict begin H.S end
 -128 2411 a -128 2411 a
SDict begin 13.6 H.A end
 -128 2411 a -128 2411
a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -128 2411 a 0 TeXcolorgray 179 2539 a Fh(e\))p 0 TeXcolorgray
1912 2743 a Fg(h)p Ff(\()p Fg(x)p Ff(\))84 b(=)e Fg(f)10
b Ff(\()p Fg(x)p Ff(\))1505 2881 y Fg(m)20 b Fe(\001)h
Ff(\()p Fg(x)f Fe(\000)g Ff(9\))h Fe(\000)f Ff(2)84 b(=)e
Fg(x)21 b Fe(\000)f Ff(2)1662 3019 y Fg(m)g Fe(\001)g
Ff(\()p Fg(x)h Fe(\000)f Ff(9\))84 b(=)e Fg(x)1719 3156
y(mx)20 b Fe(\000)f Ff(9)p Fg(m)84 b Ff(=)e Fg(x)1891
3294 y Fe(\000)p Ff(9)p Fg(m)h Ff(=)f Fg(x)21 b Fe(\000)f
Fg(mx)1891 3432 y Fe(\000)p Ff(9)p Fg(m)83 b Ff(=)f Fg(x)p
Ff(\(1)21 b Fe(\000)f Fg(m)p Ff(\))1861 3547 y Fe(\000)p
Ff(9)p Fg(m)p 1840 3587 237 4 v 1840 3670 a Ff(1)h Fe(\000)f
Fg(m)2170 3608 y Ff(=)82 b Fg(x)300 3925 y Fh(Einsetzen)31
b(in)g Fg(f)10 b Ff(\()p Fg(x)p Ff(\))1514 4179 y Fg(f)1584
4051 y Fb(\022)1681 4118 y Fe(\000)p Ff(9)p Fg(m)p 1660
4159 V 1660 4242 a Ff(1)21 b Fe(\000)f Fg(m)1907 4051
y Fb(\023)1999 4179 y Ff(=)2125 4118 y Fe(\000)p Ff(9)p
Fg(m)p 2105 4159 V 2105 4242 a Ff(1)h Fe(\000)e Fg(m)2371
4179 y Fe(\000)h Ff(2)300 4470 y Fh(Sc)m(hnittpunkt)32
b(v)m(on)f Fg(G)1089 4485 y Fc(h)1164 4470 y Fh(und)g
Fg(G)1416 4485 y Fc(f)1462 4470 y Fh(:)f Fg(S)g Ff(=)1699
4369 y Fb(\020)1764 4434 y Fa(\000)p Fd(9)p Fc(m)p 1764
4449 153 4 v 1764 4501 a Fd(1)p Fa(\000)p Fc(m)1926 4470
y Fg(;)1977 4434 y Fa(\000)p Fd(9)p Fc(m)p 1977 4449
V 1977 4501 a Fd(1)p Fa(\000)p Fc(m)2159 4470 y Fe(\000)20
b Ff(2)2295 4369 y Fb(\021)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
