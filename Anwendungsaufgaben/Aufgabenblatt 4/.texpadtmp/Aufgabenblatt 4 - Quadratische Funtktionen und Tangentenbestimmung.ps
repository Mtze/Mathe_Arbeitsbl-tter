%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: /Users/Matze/Dropbox/Nachhilfe/Aufgabenblätter/Mathe/Aufgabenblatt 4/.texpadtmp/Aufgabenblatt 4 - Quadratische Funtktionen und Tangentenbestimmung.dvi
%%CreationDate: Thu May 19 15:48:28 2016
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: SFSL1095 SFSX1440 SFRM1095 CMMI10 CMR10 CMSY10 CMR8
%%+ CMMI8 MSBM10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /Library/TeX/texbin/dvips -o
%+ "/Users/Matze/Dropbox/Nachhilfe/Aufgabenblätter/Mathe/Aufgabenblatt 4/.texpadtmp/Aufgabenblatt 4 - Quadratische Funtktionen und Tangentenbestimmung.ps"
%+ "/Users/Matze/Dropbox/Nachhilfe/Aufgabenblätter/Mathe/Aufgabenblatt 4/.texpadtmp/Aufgabenblatt 4 - Quadratische Funtktionen und Tangentenbestimmung.dvi"
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.05.19:1548
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end
 
@fedspecial end
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /D put
dup 82 /R put
dup 87 /W put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA855
15895421CD4FB9817B90833D98C453B3E6E24D9CEB5516F3FF8AFD668F97C05F
88DAD038B253EACACE1A07F28D9C9B715F6CB08AF08E8E864A86D9080B02674E
74A0D7FD748BB73455E1C8FA09719D9D0D2118E6D57B858468F85E3481CCE647
E32EC20FB8B64A1EB617C74206D409E20DA98C5F0F27073E8FFA55CD5DC77EBA
72A29F06E5D4722EFD97598A192BAE87851451CC1376827947997450D33CABCB
57814D9202516CD5BC7337FD1E8295CEDE7D7E5AB476071E9025B32503567E11
DAADB881D10B720417BE8B90F3C6383F81F21B7CBC50188CEE6D35EB8A2F03B2
D870B49873E663C1F8F00C75FF574283FA395B728B59F435246693F48BD05285
ACB1C60E8526E90DBC88F90956A1587DD0A842FF6BCEC22ED9C4750EA410EE9E
2D9A3949BD7881C7EE13F3B897D9444B48BB8BF7D1184913B8DA291AD349DB75
B318620F2971C9C20AD06F12F9637956B4177BDC30C8244DB566C473E477DCFE
9DF7CC9CB5B83948274EF9882275616C14FB9D2BEEB732A64B33BF3166D0FF96
87B3B3DCB4F177420E7600CF036655CAADA4C1B8C35DFA6551E0EE980609F610
0781608ECF41CE0D958460361573652704F80F5EFE7D2ADE079F8E9E0C12181D
67EF4CAAA44BE4DC49B0A559229F3B7345CBB610CA8A0A377E96BBBA4784F4E1
1F0BE44E40DA2AC030F131B11636F0970007B5AE7F6EB2AC696C667968F08298
6E7DA9BEA2B96754C60D52F6FF4994A79E56212D40A4C8A40D25FB099426A9AF
3943E640A38386A6C7B06E344808CF78570040DB42C2C309DE6EA904361496E7
61B015D77D34429519EACABA362F9B46AF4510E89CAA12A5F65B39F0776D4277
FE1494038AB2DB176250A4F686C7258DBCA23400E2D76EAAA5D4EF89EC3806C9
38FD8F4D39557F934E9A0E33574960414319A0F408498D780BE0F7ADD83AF233
49F7D69D84DD8D1B6B04162369517AD3A1941510EA2FADA1F43B5084CBC1C185
AB8A03FF691D9DF6438B2724AF4AC7E78A6E1F0C9D7874E93394300912083BDA
4CD6A3F53402F28DFFADD463BF179454AA3FD4AD640A0BE2F7333E78B70EBCD0
32968E3279B3DBE75669BB98A826D815508FE21F9FF1A05D4B7C515D63E15200
1B786A0575A747F56F7F90E31E4B94DF3B2874444602F7DEE57A596BB0E76062
CC13802990DAE1B449697951529B333385CD3B79AECEC0E66D3813F3ED75B9BC
87240FAF3BD6B27BDE949B00CF73C28050FBDF438E6D427DA9C3226603DBD463
30774DFD3EDE8B9CA795CE4B332EEC60AE440D028746872202AC84F5D016C6B9
A1D2576C20DF4DAD8CAD88BDF5AB753BFA1F2390F1D70ECE0D6F23197815BBA9
AC786EB3BE485E22C0DA81EE045F15B80F0BD349DAC214C8AF8314829DA5F5A3
90A62BCD06520F9F4B2693C4CDD75995
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 102 /f put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D593104140E6AA9CFB0
4E0B47C91E504BB6A95B2CBC36EC03BE01897C3D498EB30FBE4BD9584B9D766F
CB3CC7C96FEA1D49169F89E303F37ACA22B9C8DE195C735D9A1B34C733631EA8
67260C7DF410BF3799C22230276E6C1C9427B1CB8DB78A35B132D3CA7EA05347
8FF61F131FAC28AAA825C2413CAB01E9EB28C36663AE5594DFECE6591BF956CF
77D8CB686EBBDF0AD53D679CF656FC41F4DD7F3877EB46D5011E368390749C00
92D5AD6B21C45E04F003BD996832191F362B99FA83E1D7E6385D815244D9865D
697E6290F02207E53630B3DA16D6E8704B1F3074F339DBA6B5C2B2592418A866
C07FF3069F0CD90C515649CBB287A0137C1A59DD44F25B01CF67E5F054F3B148
2A7C85AE3F176774E24BADBEC70EDA7B234163E9826B23A433121E1166F84038
FAA73307A1929E4D459A6D0773C78D211532AE04EA31B563D09233ADB3DE1D5D
69EC544DB3BEF633E13FF85FBF3F0B45
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DF4743FAE6668B61F72C8700992755522AB11C765981A9BEE0D040039D
6C2D64ABED527082C97CA606127AF5C0C98647BF46AB8149F215BB0F1087E62E
740D8676CE8A486096DFA164A37E97EE630B2A16FF4BCF31B9A630D93C278ED7
6D6003D463C33B8AB5E8BFB9777F0B3D3243D650AC5641B91082A85801F907A1
54CDCD22CDDFA0F5E255F1F7E04A621013F0F3841D824897E67DFC2F5AE51C4D
36411D26424AA9702018C26AE65120CE396C9B001DBE259A3638455C3F4949F2
BB23F04E53097AC814F9DD04F0F26BE3F8C2118311C916D2FD21628BBC018A31
021BC222B518F904ABE96333EB8A033D13E80033452B2F7C8F400CE65F0EAB91
81EF6447CEE4BB024AC35075D24EF62ED3E393401BA04C01CA115E0231AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 21 /greaterequal put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC4784A97D5A8F1249B04B949EA49CE82498C9CF0E72AB1B6A29
CD235A99A72019D29CB8C5CE21AAD45E0DDB18E2BAA3766D9E544286BF1E4AF8
9319F6B060A9785E543F75CA0E47693F237C7C4B4AF0A43B2CBBE2C0E8EF1A52
E7E50AE889687EEB596903A3DAC04B864403D2697FBD5C29456848D130462572
8CD2375C1469BE1B6F645FFC5BADA6EBD0C60476548EFA1F990256FC4DA3172D
3AE371D10D7D35623F47CDA1BA82CDD43A3DD9C633B67ACBB2D999D4FACCB3FC
0DBEF52F3E029A2FC362124C89839B7F68DB01F1A8A77CDC623AFB94BFB220EF
200D16B15CD6AFCAE10BE37C09D10672423CA92BD219425C385B2C34CB6A43AE
8E15431A61AD9B26CDB1607E2F1474F1111402157DCD07652B9575537490D571
241ED221B0308D32CB826C96D98F18B04B0E858822C690428C1CE0AE080C1EF3
103D03BE5EC983713A0E9D614B99235B56236B2265F646777239ECF34A6493BD
BB3982A6DE6E27AA188EE6ED3C77B12360EC76DEEFC9F8610A430D846C3C35CB
35C276C27119F58AD28E527269F80D6ECF3ED5BE9E2517123C5C0F1581DA12A7
4955EB2D655B504007DCAD92B526A9DA435A53EA03A0560D566BCD53601B9848
EF3F373A18A001810E426D817D4A6E2AD02A0C9AB2977DACA1CC799A01F2EEBE
761B3FF86EF91DBE5E4224E8BA94B4104E4C6A6B0CFA55B782737F73FC6D4434
99FF7DD5758CE81D61FA3A5B03264A07A087C1CECD89A6695C7BD0974D25230B
983C5F907845CAAA2BBB28C2204326CF45FF4C5002EB4E12BB7BB18A3E3BA299
C3C62CAAB5BBF5433A98E38928D24BAFECDB4B3C34EC1273BCE3EDD9B12513D6
27E9467145D6F42EB30CAA27D2E6DECD1ED7FB6CB2AD5BDFE0CD53945FD3ADC0
C170FBA19A080E9DAB102DEBA9B9D71786A58B76CB44991BD11E49158D22B47D
D91D3E10260BE1A57AAEE72734742BC2F1A0062192D1C9F80540875E658C0F63
919D6BEDCDF23EA2F4C60D8C4675CD614AEADDD53C8D4384C25955397A146ED9
3294FD299089D1F835DA136EA44624457BB719B05853336C6BCD57EBF0B88410
7ECD28A06B59E804582D21C544
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 58 /colon put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
ED277A492B42D88D0E068D61F2BEAF96BFE7F399175DE7D08981736F7DA253EE
331F97DCBB941B1832E3FDBFA7650E0905E062516F27090476AD2FF0CA78B14E
13CD9482201FEA5AFD00A134F3C357412CEE5E264C20C39E157567538D94E69B
6B7F3EC896D42594593A016CB5FD306F440F6739C7EE88132663A1B1D635E362
5667C0843D4E8E1C205588BDD46FCA71692EDD0042913BDAED8DA7D7C8016D0F
B9B44B7EE36B8356A8740617776F18D167F6AD72D8B006DE3E4BD74C1CA8891A
8E08C09A601506D57B5EDC2FD998E405A987C4205CAD91AB441DD76337F8E54B
79142482B2FE7853B7960061A6C420A696A0C47538C692108055EAC99DA91CD3
B0A2B7AA4D3E1CE749165D28DA7E2AFEAD936AE066ABFFCEEAA68E1B41C74CAE
CABF8616AD95FD9ED3B11C918BB38D165644346F51053A08C551220E93385C29
C2E8B76655CB57458FB78C6ECB6460A281A80F502523BC02292E1B8125409C3F
A734449C3B34DADF947075BE99F21B31B00EE34F824317E8766999D17EAC8B28
132D2BCF954CD29EB760C8F0114D19D4BA0161537A4B2E556C0B64CE8AC122B1
6BF9132830C8F4EA9DED9CA2889A38D1393498ECCDCB076A6A7E850ECD3A062F
050B7B9907A9F37C84D143DEDCFB27AD763C746E1814DAF381905B63CF391ADA
2DF440658BC5CBC9F250F58B0661DD335E29F1931A004EB68BF10930ADD30B07
362F8C9C7F438CDF8944DD5A06583A75079194054F8C06AB22E36F01DF05AB58
428703B5F8FCF7156859F1497DE012A4ED81A8493B153CEC0FAFAAED622EF190
69ABECE38D053D6CBC34EC86D24A93624C7942CB3D9219D488F9FB992F7B7A7B
D6B0C8950170438A606B36244408FA18CCB93DDF370452380862FE3E7A56C8ED
2CCE3405EE642ABE81E3472653B118594A55413D85A2598C9422463D8B630AE0
02BCE4FC0163C20233B983D6A9B7902D0576B1AC15546F60329C64DA64F101A4
EA8A0FF3435977B74378CDA96CFDE41A5A9C4DDE601FD58BB5D3765E2387F197
12D109458CE00577D739A647E01CA61439570BD78FEDE4447480B542B229808B
A6F9636F8B94F996A9AA078DA71BCDC8C90AA36570A762470D545CE6B8DB9F8A
FB687987D1B6A10A4D671B25ACA342D6FBC1E488F81FBB6DD079B76D52CAA033
5D7A1972441590EB25F5FADD0126DD1FACDDFAD852DE686EFA03B2CE79CF2B15
6C144EAC81925E2ECAC5ED93F2D8249FEAAB72F6E1CDD8B7717DBB23BC73D4E4
E6B9BC5E023D2A3D947AC6CCE00E1D5247CA9F5CFDC5E6C4D9364A7B1630CA0B
D0282E9837ED5FDB244AA92EA8A2D8C1AA64FAAC7952CB5F424C6DA581B49C70
9E1E98149FEAAB15DFE7F942841B932DC90880BCB4BD955057E2C94BD8F6B16B
BF0B8799EDC4FE24714CBA543F2AB15CA3AD0E78C5B457D3255479B96DDEE534
55F41AB052F11C588936C6836717B22B54C2F289AAC0EEA7F800BC86CA8D7263
115CC85A4383F380C770AD1E44970D66A6C473EE1CBA129A29DFA844C6B2085D
6A445D1F877635AD152147D9CAFA0CAEAF0A927D5C7DDCE03DCCB229C4467978
ACDF043A43A294F4A7F0FAC599672AC5FD5FB3C7FE12298283B7BE5DC9E87714
F3B802AD3E829A70F3EB28B61E667F4E8AB8DB64EF08CB2EAAFED53C1E1C3C85
22892F912C82043AF80F61A293D8E46639488244A358576FC9D03838EC6D0615
85F61F323D0211BFDF1DD900F951767AF33F88BA6963957F3DBE73F5B09CEDDD
78DFF769BBC6250EAC584D3B5E88ADD1EDDE3F033545AFBF576377A48059E6DE
CA5D00BA874DF2F90DA6E544394563D24D8C87FE0F2722FBAC78768AEC09D7AC
9FEA3E44617753BBFFA3EDF0966D4A7F573A580D97CC9E7A0AD30AA62480636B
595CCD064AA9C40422A4362A89E46F7DC91B557A4C8683B529559BC1B4A83F47
864D1624747054CC3E674581B8E88960A730D1B50C8AD964B732576A4881AE9C
EE27DEB400F77A55F5A474C9B7F27903B59C8328CDFA38D00DD7B1CDE2E2B35C
58847F36B887EED1D629B477018D55A52AA86C1024DD737689525B7AE737DD81
D4935D6B23AE573BBB163DD66E89F2C4E2B1A15300BB08D986F54818220BBAE9
B11B05A685D4C7E7EDFF51C6FE36FB0487AF093B263945EF22E686C5BBB2FDFB
71C20F42F658D020DB057B1AC3ED1E8A75DCFC69B0F51A4144C1A94A526B9938
774C9F054CE6F54FB243BC6C621417828F1F96EE07F8B09D8C19FD0B88366F92
ADDE8DDA03C5C83BE1137FB6294E5747AF7A96E75454B50AE689787EDD1CAA6A
64AF8E34D611F2A805FB9720F49EEB7C1D138047E9722F77F39C29EA6F8251D4
55A4F55167FE8A2F947030413B8C42BDC2E33ABEAC43AF88DDD369BC6549D8D0
2596DE943C067A52E1E24FBF17B1B56997FCDE6343BCF09C5B5F5940EF2F7169
50387FF65A63CF2A927E5F2D7313EA2C5610209DAEE4B988E443D762F78EB550
A53730ED711AA6107DA6DB97035A82372EE5B315A29C309EBBDEC6FE4167AB13
71D8D7F49E99A0F145F0655236CE00D9AAFCBD57B985D89C0E713F556814E051
C6CEFE7E83C2F379BEA2B9310742DC47A084620AFE85289172711778FD9C9455
4693CD027EB52EA2DC82F92564B809A3F2D597F8640490C6F31F4FE1B034F656
2C37B61AF8321669E54636F3AD561C22720C0C78F40D46FFD5B2E6560F39DB5C
7BEBECB25E8CDC093203DBED8E55CF8FACEA762F87176A0D72ADC1049F1BA377
79AFC8C0315E00D9F6A26A5CED53E0EB42B4BA1A423FB723392E3F9002231708
623163ED2DB636BA33208269330C24A4EAA26CA65C28DFAA3D32E3EF9EA5DA26
8E7331A54E436774975F2499F50FA04347CAB53A5AAA7A2C22B67FFE8AB76E20
5570691C6063359CE9DBA2E3ECB7B59E2A202E6C382CF8541FF7E243AA7F16F5
34CB8E4EE6B28508B137772858D1A89AD21A4DAD367B21D4B7102F93EF95F5CE
FF173F2489F4F89E7B06D64F37B546C1934F3A844D66DFAAFF475C490B15E5CB
1BD87A6E9FFC29FD565D68BF89BD37A2E4A0B6BE71A47B686B2B5294EBE1BDF9
8378FC18DFE2E7D56C84071892E1B076DC7ED250F98A9D54B9F2AF8132B8E428
CCFDAADFF3C55FE80772FA7B81314199871851204D4CD1F5B2291F1787857D15
1956CB0D28A70CB32DB0EDC10474F2185211AF57236F016A04C7BC497CEB95BD
B896D975FA778D7CBA8E4528060E68162E7D1D0E8B961F902A695D7316D5896A
CA01B298991376541D41FEE22EC24DB96C6FC8159FA86B38F2CFD3BC38FF9C11
4D75E7B87176A69A402E990B68D7B714E5ECEE66EA92098BEFE8B6F4568A237D
70754E3A990327FB273DCD86CC95DB6501B9D7525B2694FD17DB4B63BDEA3326
ADB0E307A007DA9B4997736D8774E688D85B00D175535E9E2DF5B8F3BE43E286
1D90394A9BCD46136EF67E16F1F533D2329172F75A12D5505A5656246338B9DB
6F83FE5571FB86E4AEF1D16A1B87E14B242BB3FF7B810BCB4F22DF584CBD83D7
95A68CBD8B9C63856C530D9C5BF077E8622CE0ED7BB095558C18C95203A89265
A1AD847ADAF91B5739E8D6B7FC10CD8C73C9F57AC75E231BA6EC80416CF3D9D4
AE6C43C3E512403B1581393236EB56F54F006524EDF236669356E19FEFC7A055
91BEB266D3AF8A10FF346B43B896D1A2D254EF40DCAA10755DA4D9606B6909A5
05360A12C48FBD7D77C7FB15B289E4E3BD3E2BB2A2120655ECC2098BE40298D8
4059B0BB04D480250A586F56EF07008BB30EA9C81F5FACE715CA9C38B00ADBED
F8013CF0C05C0E30F0B37D2C602AE1325DB43F8E204DE3DD5DA8DB0AD409C218
0D430B80FC0897383C2E361088533BD23EE6545A8E1B1CE1A886F24FE1655191
DB98CB7302FC7C1BEE8838A94BB387F1B13213DB2AD746AD2CFE2108C1214422
8B83035CE795E49034AEAC54524C62BF1989652DD4FA47ABF1F2CF89133D9F6E
EA3D454EB75AE08290F1A75A9091EFE316214EDD063510DFEA253200053979E2
4E08A74ACF5A1E8F42C1DDCEDAC0C946E6E3A3235DB2D7B40F42511BCB602FE0
DA48E26C8E82966DB7E2630D9586A9A3AD697218B8D7FF149433683BD2B41703
7F5EC3D30196EFBFD2B976DD3F8D05B309BEC9E387C0D6EC27580E5A3464A76D
BB97AC0BF35609F3DC15DC4CE04EDA85503EAC8F70D146EE7125BEA00CF9CCAE
20BFFF8629994CFA235848541B1DBC252F782D4A4B0EF7B5A43FAF83BC5F6DFB
259FF33DB9731247E133894D4D257D946E6B0235B6923102574FA161963A062E
E2A4B5B573E239E7912AD29C0676B030F49F4FBE3DD847D54E412A1A8AEFB8A9
75E87843F3AD38838130DE7AD92C8D682093BD680729DC6662CB740E0C7D2B5B
08A681E0979DB9464A04F4A98932B20FB113005C2CA00AF956F97BF60768E0F2
91AE8CF753AE616951709D06A286E93ADE42E986B15283486C12FF0933A430DC
55F77D3940D3BE676DB5DC855136B67126049544833E0C7717C2011A075EFD12
7D551DB8E7BCBF4B9AD91B83D8202D4403967BB9190E7E11516B263E999329A3
B71C9CADA4227FE0A6A6F4BF9C364B8C0FC957182B81283C8C46E958BC8922AA
0256FA1F0A9FFF358A9F28F89D7DD24235159D56FD9BB6639858D707A1F66996
4D2520AB20883A8D5D962072BE64BFA78126A595782DC4143AE07F039458DCB9
AB24FF86622101E108F5F5D9D42A0EC5E72EF092D99B3EF7B65FC071B51495E6
A912E55BE531B5EE663EF4F32418FB94DB55A7A744E1AF480BBA074B369DFB90
498766B5E8B2D75C86E91D3F43E895DA03DA02BEB549732C8DFE0FB942DADE2D
2CC0C1442C62955CC1E8D621A268B2DC195BAE7F900DBBDE3467621CD4A92924
28B93682845B9902121E3C62A842B5BEDE85868066787E3ACD0BB4900A3F4318
C983C106D0E83F5B687F2930B9F57D5044405D459A474453557217993F243625
EB9A59C25D39E2F35370A69D4F4AE5AD7A498F06619026423DC919644348842A
3625A87C86642A3906A987AEA3DE7E4CFE7F47BD9D4E923D68000BC33592CA9A
06016336FCAC5CFB6AAFD154049DE327B9B29C8C407641795BB771CFCB7FC61A
9C571BA7B8CBA693FB0E2DCED8A1D9EC90B7F8B2392DA3B1F3070C84439DC1BE
85C751E69099000BFA64BB8AE5E87B4A2E69E84A91A05076366F76793C9AA6CE
ED09B081C4CBD7A7580B2B97655B27AF5BE4D02A61E682C44298B823019898D1
4C500024F4397E64D0F7D0E93438BE4C6725332DA7A53761C9CC7CB96710B4D3
5CBFBF0346E5E95403524E6FD81E70B21AB6C1589C97726DED9CB7663A5E1A3B
D650E71630D6BD59E8E0E1C94F12BB3B98FD808F00FE8960F1615C7D2E3B1D22
72E92885554190B92D9FF4BC56E92FDE53A26F79B8A991F9C2BD8D4DCA23AB08
A20148323DA2001DDE5D921F3FF90F8C7EC08EFEB8B5E2B5D0E8A06D7C0D022B
EF4374F7BB2A9B6FD8229BBA12FF99FA995C0E751EE812A734E87A2A4D5A93EA
19593E8CD14A2D8893279BC3984559BC90793DA272537CCC25422EEE5B7E072E
C32C19E8F7F380940D9E8F1F4588C7A9DAFD27DE00FE7BBD32DD6E798B65C6DA
ACAF60ECEF7EFD9E7307032333BD48CC03D7F3D62D936A18A52045A7A92EF772
5784988FF30516AF66BECEDC807FB6641CD489EEA30AD133A40BBE07D27A3E30
404343D03AE9336392B2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 102 /f put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D91548869B4706E46E
787B394B35A15F8785449E1E4933AEEC5DF2260A93B782764422692D186C37E0
C235BC87DEDE44891A55A65149B4D34B58A0472090D5DA12EE54C9ECE80EA4C5
089A657E9FDD3E66FED6C967D6884A05725B9AC35863F3B67E8B6C1FBF5BA0A9
34CCCBC904877535BB256C5B5FB6843F134A953B5A0533BC60CB31FE14A124DC
B462693AB58B46E142A032BA8AA21FA82B278A73BCD04402AC0E02C6BFE8A055
FB505465C6FAED177DC1F1F5A686BABDA7613FBFE28C28F78E48F7E0BCB0D6D0
5CF8C8C9ABACAA5B54BF4F022D561046962741FF682B166812DC68C93144B5EA
4D59482A8D2A88C6242E27E179E1A977662DFDB921798C3A39524D8C2B7E982E
B6C5179D89A5D2B2C62BC83237D5953C6A76E4CECC6D70D64EFAC0982646F708
22479FEFD44F7B41D77C0C7A74EA80B58615781E82ED55645C6AC1EC92BAA772
8381CA95AD9F9D54E04F718349F44A29BDA7E16C6756F8C5CE5F4079D98CC222
5362C813F5C6FDE2DCCED39217E1506D53545B14926C125CB2332151251DA38A
9C522E88304CE76F927C8DFF1A287DA34E0349D889D8FA5FA135367586CCF1A5
B3AC21290F1A2015187F400787C91304037E329BE6B80CC90B66EF9042E86E97
DE47A5648EF3BFE37FC8E6769FB3FC04FEDEFD91B15E80444F29211760A5F5BA
16E0089303583ABB6F59D0F25A0BA8D2F74338C2736F0BB5B3CDF6F5406ABACD
B4C9805657D362FC5CAAA8F2F4FF834F7908037CFC8374760C1654A2A6D1612A
0B4FFF7341ABC89997B8EF1DC34848C5EE8BAA6F7435CB8C860B39FDB6FF20AA
CB373D438C04FB4B4D4AB428C3A5AD05C071DD1560E71E1FC3A5BA8BAB46152C
D7D971EB926D5B8B7BDDE887227AD7CE0A7AA8D7B44D30AF6C27FF4945D3E211
3D5CCB123F8C97664CFCAE493536F5D051A33DC24E29C2DC3913C8BF2D9A597F
EE656FC7A2D08608216D95A049A69FF53EF542515A7F1A5AEC09024316E91004
B9DFF2071B43994E6FD399D0A2E549BC454F439AEB81EC09DFA97E18EB772590
E4BCAA7D06D1C630A2A797F57CFE28EF1953AF6EE9860170870BCEE93570EF9F
2FC75A69884641B63F3BB6252983045F7C8FD1F10FDA82E82ED1E391E74FA82C
EE44137ED840C004314F580C371CA3063E9A4D88E8050912A806E67967EB1CC1
DAC8D5EEA1B1C82E2A2283665405C140FCCCDE3E69EB73C5ECFF0F0D66C2D32F
23B38BC03D78196900A86465B24EBD9B3FEF2A0592A67622E652086A00F35507
59A4C257E7AB895B62C9EB5394201AAE2FDF5049B27D8DC079E99424E6AC6FE6
BFC22203A7138BFD3371CFD223BC10DCDA418E708C73A7AF612C76414F576948
C8BC3D41F1E3305586BD4ECD87386BB818B4074B75B625B19F165EBAE1435781
939927A8C2133A670EB64B24086A0AB4E50237E142632BEDF7FC9CDAC72068FB
98BD636327C39FEB34D964633F62B38720A1A82ADD44F74741B7C75305CF3277
4B35099135046F6B7A4FFF27D05B47E958FCF4D6FFBE19E72BE330D0B9AECB80
C470CA9CC5354FC126101B4B683093889D203B8BBA3D717D8DB419B436760650
C2E6A7AC814484C8FB3E9968EB97630511A16D2D31AD1D8AAF12B0583DF29E23
67F38C0E8D582D925E7178F517C5F847D06460FD7982FBEBCF88391A61F47592
6B4AC10C3466B5E7E79EF6A5AA577DE115B57D208D2035579B4A2030771FE28C
6632CBE0E816B148D5783C942F4EE6B66F78DF3B65F54F8AA69EC212FD8C34D6
9774F04AEA397FC69544F033298848D6D731A07A64F86B339A0595570A3A0A3F
6FA33B817767EFA6419EE95E63CB6FA60D84D335AD06758BA14FBD61C565F01A
CAF8B1C24FBFF30AD9BEBDA6B8EF328EA753A07EEFD7C857A12C5F3EF1B79997
C36098B1C06B96B05011CDB40F0E09AF05657590EEF275B900F62CB9B823D471
2F72560DD8DE9344581B01B6DB3891FD3AFE6BF760DE2FB1AD614050E454B1E6
FD5867B8A0F8CD8554F1CCC11BA878AB911FC4C1C1D1CBDAD499D2A04C7D6EAA
3115F0496680F58F0B57F12BA6A1306C45E79E9E17FCE68DE99999F6C8D54A6A
A9BAB6D885419D1C9D8258AFB4B9EFDC477B2F342C30B2DC0A37036D81FEDA28
965056452504F1F29E796718F87E1A962F1FCB75F9554757044577DA54D77887
9A6C629B1262D2C27FA1CB627B8E9C37D752CEFDD9CB07EC9B24A1EE7FB4E373
C2CE1EED6727FA0753F211E6583798024F9784CC05FED81682A64D9F32201095
0F09F9A33F88DE319CECD58D5C5079EB74637731BD430CA507307E7AF2625ED3
688F5DD0EB346934363D215C1958EE4878B61E1B908E89768517D853777782F4
72CCE241EDF9179413F8E0DF544510D053B497D4375A1FCB392091CE03696420
DAFE47A3CAA07BA5D6617DF38642BB9A53C450C5C1DB84D6ADAFF5EDD6D0BB5A
2BBFBE3ACFB0C8B4F09C46189E510398AE36A9018210B860BFA80943E30A4D3D
E3ECF29B58A0FDE0CCDE4DBF6E32B0455183AEF7B27DB58BA39A4213EF36999C
EF8CC5861EA916C8F02240634E8272D5009116A15D624B2FA508BF90BFFD5FF2
BBCB62D28C83BF0FC0F5DA09B3BDBF360FB1DEFB995CA1B6AD9E3682D0FCA6CE
ED185E6435354EFC6498112C9D9BCB633A84CA0D56B6E1D4337C88E991222919
6938CAB6F223A8364A3B383F110CAB5C72D8F48F7A19E247A58F2D14D508F5C1
E0CD853042EB5ED118E20285E34E812F3DA40A8D9D5266A0788CBBF7D8452933
4CB5FC5208E075E910E977FD7CC95B5CD833E6A0B1C8C3CDF8272702314CA81D
18686A0F30387B880BCAE004FEA80426B6FEC8E3C3BDEB3F2D835F0E1BFD487B
9651D06761F2648FF1F57DAC9EFB79864B5952198B5D7572862662E5B5E869C2
CE4CE3F2700F4DDE708CA6E2F48D4F9668F0208CEC0EB05E4D34C590DF5EF11B
3EE1D73978500CFD88A8F2AA394E13A46CADEF50B3940FD3B872DDBF500E2F6F
686FFC40DD9A091210DF45BC597B44775910519EE515DAA60B7B1E8814A9EC2C
FD56EFFF5C55E1A803C2EABDBA0DEDCE452D19E039B614F3C706B5008BCFB119
5514FC4F369B757628DFBB32D9DDA25A540AE65067A094E10428EEAE1E3E1845
D4CC850F923BF04844F9310E9C757CFDA42469C4827B22E69FB238FCC5157464
77D8FD2F911123B14B55DBBA0C501CAB3118250D2273375F7AB8C54B347B0A79
42B4DC1611D47FA7B73EB11853203FC7EE38D9F98C1E504DE425A5A715CF7631
A0C3DCCECB54C42036A976AF49C199110C99A5440893FA87E38FE1509575B692
38C1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899A767F6A99C78F239001C028002478AB
E12A94D59AECA66F54951972795B4EDE80F67BF746E85C18F990C54B1A2A148D
DB41E49F264DF5FC0C890B501E1DA1C0D5ABBAB86B8C3C4BD9808AD436AA8DEE
050F18E90E9529CCB017D9D48DFAD3F8C2D69C77F37924E40EEF507C2069ED41
EC4BA5059F9A8983D858523953F8245D2B8AC53C60CD071C47F6E34CBCCC8B2D
D96ECB3D65C5F091826733619122A5E291FE16EF8C01FB54EDD95A82087F4E69
B7BCAFCC13B34B86F06197BEB2C71851C9B20DF35015FA19A6504D71557DA3E0
DD04D29C5BA37BF4193E5E18DAD2FDB2979ADB9D6C366646D36014824C1C2F4D
025709D28EECB76E4174BB1BC3F72FA9C2EBDCD2C65D9F14A564C797BD18BDAB
08AC186C5F47D69FD39E64A06B4B504C39936B614ACC13DED5078D17D2407154
718A61C721BE6785A1095DF65774AF0C2948D7538FB7D67082017D7EC8B32CF5
128FA693826271DEC0EDA53C557495692F7B0E0E0D3E3FF519DC261C5351D84A
AA8183977E81114F7C4B5CF140E0A0A26F922D82126B82CB98FB5B5B4F9FB617
30FE3F39C338E6A47CBA39AE6DA19468F81D40609F4EE464B575136F7E638FA4
19163341BC089FE680D9B2751763F16FE1D2F94B1FD2A4031F48A018862A3CE0
7B58EDA0D8A78E9B513CBADCFB1E70FAEC4A07E4E8EF03028F94B76258726C1D
E837680ED06921532AD45ACE4C06C4901855BCCF6AF9981C72DDA4E05B38314F
6AABD8D83F138FD8B9B60041F594E5D19383B2D7E34D4C9132C0AD46595DA14C
0C957747A625E5B585B02DE4D608698A04F0BFBCC4D3B59376AC64AE71ED4545
B07D057F856AEADC2441A713146D5B42D12EB8BC77822B924567FAD1097784E6
CBFB994D5B786863CF103B0988F3E22889A3E4D54BBD60D94F41C22B5453AE8E
086D0A3FDE5B518FD143DDE55E91EB1372010B1F1AA68FAF1DA06566EFDAD282
1F1EF08F815DA9FC81DB308E78F05DBA387C9F061DA8132A66FD0E8177B9BDFC
D593F881C2956C4250F5F28207671D7808C5DB8C916D3011D02CE45BF5E62E68
BE421D2EA0B2B90B9B8A38465533F2651C12BAB103BF99421DCA2A1FF4A14E49
3D274880218EDEE4A0E3FE7F848D35BD990E9B78FF583B35C8F097D8DCDA6E17
B96F08B9F29B0D513675FE8E849CF8FA4608C6DC073673C30F5ACFE803EEFA0F
9DBF7E8CA24D856793833B89F87E115F59AA2BECD6D87C8A89D49A6986A70B5E
9C5905E11A83282256B9EEBAFED19666A942EF50730A103B89A152596DD03EC2
262FAE9A22CC60739504BDCB140E3F6A5CDD3C57E071F52B765F40D1A093ACF9
C19170BBEE101A6BB71B3C3FE0F42DD3284EA715800AD9A9B7AF56296934D03B
ADEFF00F316B9337EC2889DBFA423354D9F420228D72FDBCD7F70E20616F63B2
C0DC1B982283844BF6CB1641369CCCE9B39EF5FC9348E2F27500A5BF924B7912
38D3A18283F6E71E56399E56944BBF51C1E6240805C3038A73D497F7B3A68BD7
913FB25C4E9E9AA6A609C574D48ABDB27598E5EEB4FF890CE205FACD0CA88982
82CB81A467595AA040632B8B3659AB24DFF6BC7E759B86E08B5ED6823AF1C31B
704A25927BF4B58EF85794BAAEE4BF03E66F3D808D3FFA87CCF47A4F591065E0
4F45CFA1B0CAB9547A683D4CA6293C66AEDE3AAE9A0856DE00A4EB68B4B991D8
822847C070A6CB7D5CFD47425798B7A60D26292EF3CAC51DBB388102E674C972
E3A3DDE9FE84A0A1C31B8CFDA9568B3B836A9470229B657876DFF667E3F5B455
5EBD9C91783A48DAE65C046D67C5A6320DF9C0BFDA998C2192F01A3EAFAB4EAE
B1EB6FD412A2BD7F04CEEC32B78372E74A8C3085D4E366293A58A5C7DB29BA41
01E5B57F50D5D822C2704F4DEF76AD242C7810648DC132E26F08D3DB7A1CD5A3
E4CD9AF1F5052E144B535EC56A0A2F82A1057546222028AE3C51A22D69AD0533
77364DEA41B8019CE51DE790C43FC8DC613D03591A8F2D965133EBBB3879571D
CD924B00A2BD3EAB3F9B1E1CDA3283C0424B11F4468CC2374C0A0EF298DF43C8
37324B907FAD864021457F78D3192ED99299F9006DB36350F6405A643AFA5FA5
4A1BD68B374A2EBDBEE1369A4C0217E7B9DA23A5068906A9DF56BE4195B2F743
0063A092EAC79BCF3F74FB6FC2C99AD301B93AA7F687B33656524DCF4234D167
F6AD72D7FA6401D772001C19E1A63EBE7E645FCBC1124D1F8F7DC7462B37BDFF
67A182804CD8A3DEA2D62D8204DD98CD09E67E806F75567E77A8B604F45E0301
5795FA9DF7D53A659E622B8AB5E575E26F8057FE12366827BF92AB47EDFEFF1A
3EA9F8F86496BA59F7F6268BAEA7A9653F1F3E9CD284A2B17B2F16E43F51A3DF
99F05E3CAE992A53975B421AC8F5803B4D13130F9658D7889941F6671B195BFD
1E73456A3BF43DA38B8587807ED4A60011B4944C026FA03D7990ADF5DD59053B
834B2675FD1AE70C94832B17642A0108C268C635821705E89638C01E6C2BA226
E8FBC87D54438BADE76B72E76BCCD62BD4A5EE7D90CC8AEEE9850E75EBEBCAA0
AC3ED2B411C9AB9C1EF7C643D284AD3FFE524E7485CB2F15E96B39725C13676E
097E023EA9BE301F7D3CF8385E796A7C9CC1F4767FF1D3FC07EF85862F0F3193
9D505D2887872F4FE24177CF2FEC7E6CDF34968DEA7B4E5B6703365BF523B99C
D6E3DD6C027029FE6A2EBADE2D9A5DE57C398E2A60F51FF115005DE4BA360006
7C76724B62BB0C18F4FEBD2FC1FB8F2C8CBA10DD86015BEC64028215504892D7
A72E5AAD673C77357195FD05F448B0943E65689FAEF808522BEC56BB109DB688
BFB73CCE3A81C12D2733C2957C162DF5FB249A07431EAFE27409C518350E47E2
F1274E2F9EA886C043D0CFA6242B759CB68C6D394250D4B9BE14AB037971D60F
DA03CD54FF56C7DBDC163F1C9E8D4656880458ADF464DA89A9EFB5AAD525FE80
2756C6DF2A332722275A82F8AE601E8179675F31B5F58F876C6EED19A5987FA5
4B40D36E0E108320D5CC17F782C3E6178FD39A8E0A5707009ED36D5B9D590155
94C697B28DE279DD6A0CDCC8E81066D6B6DE7A21B2A7632E9669EA6892659AF4
78421C03761D9DAEC1ACE94F9FF7BB595AE9AC86580FD4DCD9148BF718109C01
D232F076AAD991E624AB1F9ADCAE9F03ED318919469092BA9B84EA2FB09862AE
9E9BBEB609393FD526BF5F4FDF90354E80E9B8C34C447F138F35B9E4C7C7853E
2E847EC769203627ABE7BBB6C04F1AFCD76EBEA99DDE3B8347A2D0E3B41E50AE
8465DB71A2FBA74E8BC43062256EDCC8F12D9C79B020122EA5A1526A45B9BDA1
80F1B0577D27D2D12E587DA7B7689D74E0965F73E0E9DA5B17F679FC6535DD2F
E1F9908BA090DD513AFF147DD5A48D67C0D2737CE83866B2D43811E2D7BAF6F8
DC627B76F2F0D5905A7B44CB8871CC777E96E930266427264911FE59A67FF99F
199B75B3FC139BB72D6003C552DE4BCFF831B9ECB20C9E9896C766433AD2B593
81AD5D4B51390098DA93060F99204F32D91B8E421BFBBBE7EEBD2D0C6D7D124D
16D8E04E5B27C1A70C3320926A16779AFDBA3ACEF5544D5E3FA927892557D96F
B91A4B968D8A59E0CFA52143A3166E8843D7527245991AF33A956CF3B34C329E
6926CCB7DA344C04D2B9E78BF2D78950A8FD482592F28F86F315E4AE752A259B
C950C8794E4187EDD858EF5C6E7F5368BFCA0543D25939203FBC4394B77B0DC4
73289CD30993691EB2E596A8259F217D019E9F254AA9884168107221A07ECEA5
6F82191756BB8CC8AE64FCB1B430C376EBD840E91D043F83925200E27093AA1B
41B4C10010D295904D2EE285341DDCDB6F5B1DD285E4DDCC87B42CADDD2F71DF
17D2ECB26B273704AF5EF8A694963AA7810C5A138A0EE43D4A3CD9EAA488381A
17E017251D73098233AD5F3B739FA80DBFC9BE06F15177732EA19D68D0704585
B969251F67BEBCD4324527B0415526F9131552664043BF0B5B58DF7B890DD8E1
3231F499127E8FD3BC80427F8B870243156AC4B03DA5A7EB2CFAC9DF6D0FDFE4
43E307F734EA6193EAE15514C34703368D0D1CE03232D02938093A65DB28BA97
3629D1FC9BD01E27DFC223B069456C66CE46D16116D1A7451AE2439EA954FFF7
0F01821EDDA0886A2C773A5DDBF3F0FF4027172B93D64CD1A218A5761B8807C9
9581AC34411066E68344A9F1578D13F42E4C713D963466FE67F4977F3144A7F4
EB285FDD3B481E31B5B5628254B5FA17FD6623185AE610C894A10E6F2B383716
02A4827C05DF2BA89749F66FC9118B7A2F407A2F6C34F3EFAC1FD949B7EEC260
6AB6E8060D56F2A0CDD874F5A9FDDCDFD10D51CB30CA7C03FE648A43DFA80CEF
0FD9B72C3BADFDE3016BF4B4E37B5F6032C8CB3794B3458745F825C2F37E887A
0298329FA84CA9F68288C1DA49182D1D22F40DC986174F26E361D50F7BCAE43C
48BE6AC141F83AA13B610AC01A75774A773B0F980BEC0BBFDC25D648D3BE317C
76109010DAB315EBB1D81423DBA784351E131F1C8E18705AF1C63E82587F631E
DDAC8D7B28463094101C4762D9EF6515A9A5DB10B79E408558E18F90912D5680
05B7B7331E630C9B509587BDC66396DC5DA3C9D641FCF55E65DDF9C248B04617
741FCF5E1774EAE8D015997E9D9BD07F1351C8741E5586C9C0242CEE175C03D7
D0BD1460A369B73EFD7489D506DA25F0B657C203BC8D0A2566558265D713BD41
D13387024C120A63E927EBCC47A0405CC7FBE5464EF4177DD62D6602D34EACF9
377BE8BD5D2381442450A2C4CB43DA2F3BD3868D6373B736D4CB5F586D459054
790D28EC9634E9A1548CAF330E2B86F6354EED1D3422E9C6092E95998EA8CDB3
CF4993FF1AE79AD4F9A371E8999432F0BBB1BE3C33C1FE44F00164BCFDBF74D4
F82D7D8BED7A557276FF2374E36CC4DD02D14D905F484AB8B0CA2414C2B1A267
4E9CA0AAAC6268440C2785DEFCC5C2100BBC66C7142FFF3F402DF8794B1D7394
0C1F1C6ECF2D3C2928E60FA592CBDEF437D37D9F6D39256B54FFFDB881F878EF
8FF5E5D7D065CF8DCEC72F30205FD96880ECE94E1D2883BE387100AB891AA9F6
08A6760206397D338B521DE231B13090255839707BD81891B99E415473B4BEB3
114F7C6C1C8CA4D3153D8206CD9FC5CFAEDB24D242E49D3236D884748C1DD5A1
EDB6AFA088E9C112255D51C29928EE9038D4F6A28D65F2566D001AC0D43370FD
434E51A376D761E6DF3CFF0AC6F8F8273DA66A62220D500914B57385D569FC34
6AF6AB2E0E9E392B7E9F7C4C3271ADFB96744B995EDE3ADE08B95255E29BB3F3
F0DC770C081E9771C3DDC3986FFE2CAD65D8BF301E03E845F3BCAEA44D1C9062
3D8E91025BC24BB53FA4BCD6B493B49FA8CF40E833CE416379732BD511422ABD
EBF59445591043563996C4F697C3C73C7799F6D4DBE5EA7326EA3A94469457A5
992B7C4A85ABFB67B389F60215982BC114D1424B7FE1CF8F5B2F49398D578E6A
C167002FBE2E1A9694FF355A9AD4BE2391E4B435014828C99218986CB2CC5413
E5EE6270EB3CAD85EF0C181D8B20B3FCCB5245749E13E6748F7DC30B2EC37720
B714926AC28EE58208E30382C4999A91123182F4E5333A06B22CB4B72D734919
9F886E27EE9B8CF61A1FE31ECF97CF5324B234B7AD11899B24774D8799B1BD68
EC433CB0CC3D65106B89EA16AE1A05CE2278FAE9624519F692A2CC1E405654ED
DC130DF0465F74940489ED33256B64C03E35617B20F73C55BD7B091D270D0D2D
0BA81DC66956E70153C6003352DEBC9DFD962E36849D29F1CC10C623D090FCCF
6D6AD66A144BACD58AD35AE01B71A87D810AC3FFEB0511E187F3B9949ADD65CA
6F816E5106D0A3D4D12C13A04E320626CE1B20E379D6840BF5A3696EB49429BE
74551019C4E122CA497F2C4D5759E2B167BB03952C823C08E57170B9B2B5B0E0
E5660DC9507357B0C0EBAE5761132321BBD153DA06B81E306AAB9072E4D7CE48
276DE9EB064FA545841C492585B57FA1AE8A5313E6D21F67FB6D16AC072947ED
BB894405800BD35BD2EB58AE5F4911C7F3D17CC180321635E8202B7688880BB6
17E63509AE32CFCE248A321630BC1F869395D9379BFBBD7840EFB8F43907261C
546FD5DF56D7D31FAAA18D1AF32C0D836EA68CC7C327ED4A475AE52C86910D16
FD2F332DB6B9DBA285DD89968A881B9F5C428CBF5E332EFA4F0EC6693D00DB52
40475702E6FA07614B28AF0A498A752C2CDEC3322F3CFF4CA8CC3A6259441D1A
53495CE8EFF04EB7E16F96CACCFBE56DFC9DAFD054A060CB8A131F138BE2AB5D
934247F2DEB90605D7B33F6ACB6DDC5C3F0E5EC0F6AC2DA72DB36F6549FC7650
A0A94CF3CDC202544F6DD95DC9256A1AFA2DFE5A75CDB6B3F043ACA111A43EA3
B7D414F7848B4FF92F4273B0D24E7B50EC4EE878DCDFC47FCB83408D70DF6CFE
EA7BAE3F80E5FE662EC1F5C5C77450C1432910D17628FE5E0B5AEA4719416C1C
F7DDB768507DA2CF9AB31CFF42FE6B4F05B2F1ACE7D70A2F140B565748C8AFB5
53772A0C726A64A81C6C3C737A290008A590DECA8E7E282CCB5F9B9EBA10A773
2C5F3F8E4DE53F032C0C1FEC8AE985136855350971175C9FFD1AC415793275FD
355EA0AEC5CAE85458B9DD32FD0FC10B2911BE7935065AD24EE4BD574ADF23DC
984FF5EF5CBA6283DE7357C00C3BE72D939F8EF3A1DD23A9E702EAFAC1709142
4B4B79299C1B7FC3CCE762B111CD2508155DCF8DD799C37EB49437F914C57699
C1E1A68667C4C42DDC9F719BDD00CC61B7402EF3A3946904477A22C0956BB085
7BFC16F30531FFC2D3463B8202016799EB0A2DDCE32768188A66810170AE084D
F23C351FCCD5A8463252DF90C3F0D619D2C512487C4B9698D9202D4E9909EC5E
FB1390D93A7B5D32F15D2409BBDE922D6A9F922A79288DC14864E09B23E2238A
B55B5BED696D73C9F08003DBB967CA5876B7794252D4B1881F9EB0937BC14630
A58A2C77007C74C6302EE7F1B1830CC75242CB2E3D0DF6D5865D649F954FCC87
ADF3FC71121B1CD77AF4515FEE837CEB8A87F901B1D004302E5D2B4F2D75BD27
B64126F927CBE829004FF95B51617E1F63F82E17458FABB583B21AF5DB245E3F
656961B408EBF05438BC6BE6D9155976254961A5DC93684229CF79DEA8B66E00
0AFE49C6E108C7822BE4025F9A1A4EC0051F70FA13C410FAFAC56DCBE060B98B
D052B9B267606E6D4957F08FEBEAF99D95D631E9A25A40A06E6574719FF18F10
0E04B19A75BE92577DF9A9CA98BE49C7769F37C681626A87E271F7CFCFB62238
DDE32090ECA0C4C8F5A060BAF86B39EFC0A0B27374763CD3FF4EAFA35BAF9F93
5651D07666D415EA0F8A7195870F17B34E09C280466F4465C337471F2DFF3EFD
6B3CA54BE8CE8BCF2CCFA3B394366A43938D178311564E8215839041CEC9D7DA
ED04AB6EF99A36DDD3F0998F89EC5C607DEBF69AFC502C996BBFEDD28B882322
7165589D3D46AA188522D259ADF303528479B0D37A4E26CD6CCAD0BD5DD67263
FE3B84A7F66000AEA0E6DCC1B27B3F741A4E6B43846E2930CFC34EF70C4F0866
FC88130338E890CD7D2CD30B6E247A5EA9E7664FE0D44153C5A340C84FEC5850
DD51099756B23C6F1B1674F986C6A4CC5F44CC8B80DEA278876C97225899D540
501160A5BD2357E126E973566ECD661D7E6CFBF0AE6C6DBFE5334AF90B9186BF
1462DD969802563AD9106421783275D8C75FFCA2279C5C4FEBFB8B285058F0A0
8276F6AE51362BB90A149DF5D44B5087CFC3379E3B2F7BB8E1E5FF8DF7B4ACC1
573A530FEAD020F172D6CFE0F901EE873F5E5E49AF9C33993DEEE5611AA45710
AD37D7151232F1B06A8A61D1049142DA40863B965337B8CE9D8C3C1CB7231B90
B4EBC862133314CB51204C5BC71DB6CF9987F391E9377874A00CEB3C4062D082
397EEE33370C42ABADEB88D8E328FC0CF8CF2D402149BF7F3E93E768E4E2D0FA
652F77C24956E30B6110BCA39FC675C5DFFD893585F22CFD765A69F32289DEA1
2A6774A81F503C5FC983347F7EF05FF289156228D9A00A63E6CD2E7FF4E50E5E
9477508A52478F197D96F3AEF7B3423A172986D7895FEE699F98EEAADDBB3C6B
565D26A60A4C22493CB4836E823A8EDCD3F3DF7C03EC51FBCE81F238B12B680C
71900542168362AD8305E8CA86A0C1C87CF745E42FF545C186E9BAA76CB7EC3F
F53B163D0804DFDF2FD1268D14CBAB5564C89DE944C25FE2EBD57B1E35CAA83A
E6AA32067DB113812EF0A29CD9E5A311B529C75D4C4A4D49D9707D8A5840D322
12F7CCDA403B3F933927046CF51D07AA201B917426FC775736E6BF701B0CF41B
2649995FFB9C83D458F0DC3F43AF2590EF19AEA0AA826D1C3FAFF112EC265237
2A8D6A598D948EFAA0F5AAD7E2276360ADA7EAB87C34A0A211DAAB7DD202746B
A1EAD224556E556A591EB52AB11DFE899A54D5698663446733118120B8B5EADD
6292E33F4950565A74DB72388463669EF26D6547FA4C7B42EE1C8F917D8FEBFB
0508A87160EA825608601B3D068B1F4CFE595E725B309EB68B698A0832AB827F
153234B697130F27404FF7C89D7D721A0E3E6E213C54D466E07BE5E5AE6E4EF2
523D0463AE2E74CCD87E7AD6CBE9050FAEC3402286491A0955D2C5D55D4171E9
E50E77F9FF4B35E682C87634F14404C0F61C45703F9A5FB3EDF222937915062D
3052DB0709E14D4201384F2049AC95089895084DEB17DA5AC444CE935917762C
3E78DF65418DB36D6A3AA28263154EFA125BC63F27A775F7F638371B463A5E05
D1433F228FEFF0FA22F2D6A482790977950EA3CDC389E387D62D31CD5FA685C5
48E6856339786915146491BA659CF38AD3A6962B2A47BBFFF2EA25D4679DCFC5
0A59E19D031699A16837563BE403F1C4CCB5E8497A87E51A09D4A3848274C03F
5AF5E709F4CE0D2D2E0BFF6CDEAD70C437B55086E8EBDE8A60F681DC07E75D02
D8CAB8D51ADCC7065D3DFC0C0AA397321FA06760D9FEE5540A69004651849511
ACFF673559655878C95556026AC9243E7A22CF3BBCE6E4D0B66E0D85908B71FC
C1E68EC73EAFD059468E3FB5DE65CD0853784125053582EF675877ED120A9ADF
268A766367B0CAEFFA27CA8C98542CF2DC296595E10415FDFDADE4CBA28AE044
ABA3116F88A38FDD0ECFC086776226EE6F99EB0A2DDCE32768188A66810170AF
3B09DCD29DE1D58D771E57D8350C286096ECDC965824B7FDEA8F45079AC8DF24
B4F226D7993E654E72028390CE59D54CE09364274C833F8DDA1B8D662EA25BB0
061252C4A0F235A06AF83059A36700D92CABFEAC5E6B56B5A631C02CD25C6D66
9777F85D686C7E96E15306CAF0DB8B8C6A4D508B88918C740FE4DC46FCC00A99
004BB7024FB79657CE1CF48A174E63E97A47825AA8182888A258D699E6BFEF23
CA685047D8BE06752D5FC3178918604B9642F4B1C7650631F2FD14C0462417DC
BD104D888BACA0E816E6AFEDDDFB40EED3DF369AD850C571B7A802691FDFFD8E
22C885D969CD18C61CAC935D315BEC52C93FE2B4A18E7325171953B71FEDE8B3
ECE6BCD788A66D08CD8FC01B9B2CD8CA69069757DB06D6E011AD8D92F7608B4C
2F8EDDAB9441233E5BD9D8C3D21312D3BA353D94C752CC52FEFC1238F36B24B7
6B442EC4504581C176ECBCFC7F85413A8EF716074244706FF70C8F0D99D0A7D1
3EC452219B92C239C0E8018952C7AE3F0134DA9BB4EE7F1F6FE16F8F1C76C89D
1266566D764EDBD29ECA2271B71AA07AEF7CB6D89813F847F1B35EB9C623D410
939938B4FE999D7C9E87D222C039C2D127DBAA378825D87D627AA0472FEE0515
965CC63647DD551634FB711B0FC094123A06D04576A763849A5180A8CC3136B1
943468C6CC89CBAD30CF8F597496EDB4748F0FEFE2E46CC68078DDC33FE8D413
13F2B94DC449B808CFCC21F329D239092DE2BE0B7B3AB3337B2359B090086AD8
A15A68E120BB0793D327C91A222657185C9B4E35F5A2B22ECACA52AF81F8F949
53B081BE1D837AD5E333EFA90A3DD11751A07FE9118749D4758460725F7EF33F
3EF36E40A8AE1A93141DEF3E4520AA121FA84A66526E4CE41AFD06D1B904F4CA
460E1DDECB47B2087EC8D33719E67F93D0F5A4D14F9D2FE11F4A2535E72E07C6
A26E593FD52B02818BD572B72C28FFED5E34F70561F43A178E6F8A99FE1A6287
678A8C849D61C6D8878280E5E3A7DAF71390EE271D2BA5DDBC500BC11B4C563D
799BC059392B7E3FD4EAF2FE9DE77B27D19B1A06180CE092968A83E349977910
47868AE2041E4C2EF3140C4FF42781384DD5C0256CAD073EBCBB4383A2F15782
BA085BA2213F8816F01183C3CC86D7E2BC6A4F42A65769A6024BEC2222389012
13C8B1D69BC712E0C635A981C0AC882A36877D8366B1E5CE76CC51279788C2B8
4A59E612917EF4F78AF3FEFBA6F34AFEE30454F63E6A17337FA1675ED8953E25
AD511CBAC28F3DBEB8A0FA1BC438D77DDBFB35A6D44FC0F6BE278D4D1CE1593D
63DEF777BDC2581E3BF78536EEDB214B643A36A4428CA330D13361A2216E33B7
48CA6D6D9C5A110D62424AB04CC61C17CCAE0177D2B99AEB487C1CB190F60B4F
3A5889CA429749C9DEC727F3887DA412DDEEC58A1C243F368D42AF85AA0F47B4
46420B3F219204CA439EB572E34997274464B0BE4F8FACDEA968C1F1CE9926CE
E95503A1AB31A8E2BB5C8858A2F5927BEAF9CE9956AA1833340952C7F2970215
EDAACBACF2CFA2086A1B4379C45F654BF4A7261F2882C65F4EB9EE7E3C2D1CCB
AA0916FC6BB84952274B94BEAF0EB7F06ABAE6042A52B731A64E0E4932D25E0E
B509247B727C428CBBE7C3D8596330893FBCDF9E9CC2051C2FDB9A455E8040D2
A098AFA21B12EF7EFEE399E838013770FC07531AA5410F32ACAE284A82B7016E
83DFB47056A1017BCBDB211A68DC7713075CE9B88F6E6A3CCA6A0927C9D48FE8
1501AF57C7DB960FDE090F88EBEE48D4CCAB63FDB07939C47F6A9122A5E291FE
16EF8C01FB54EDD95704E42F04511380430E168DF3B656410AF0B840A104CD72
610A7056AADE2E1CF84844B69F9A8A5CF31891A4684758787EBCCA96D29884B9
783085A117FEB892C74D17AC97EA8F99CD847F231C5152CE922ED987987922F3
78B960298D1627E5DD2BE89CA003715D724B99AF825C4C153EB80F08464405DE
B1FAE6C0BABEDCD66FC96D2ECF92AD53346A5B8D3190AE74785F79B3AC0342BC
6B0CBCC596F8BF7E51CDA9CC6338E19D26A74563ECCF153A3E9521C882CB5195
6AF6389B2922F5ECC66C5FD2C667ABD7922E56CD827DFC79955A7DB9114AF975
32A5F34BD976ED37C84B810A2656D261F7600746F71F34A9560F677905F9B521
57527A61B3E01702B1087536DA6370C07B2215C3A82BFDB44BCCD3AE32DDDC91
B3CFE7C6E4A5183AD8019A364EBA6E32ADDA5B59688F7503B1CECBC9E1EDCAD6
1976E7D3A90E401AB64F51DEA9253A8745CEDD069EA49E5C06795D12BFAC1E94
935BEB85EDB5039F10740AF277D54F57C3880D13487D4077F3A984D35F25492A
45091719F53A266FE1D0BDD119D821C4325D6D65A105EC321D8A0D2768D794EF
6F451B5BEC0BC5F1703A6BB94784FF5E393CCFB2458A085BDE0F60C9B715C9A5
E5F088EA740E2F450DB6EA88159F644CC8DD9880ADB7EABC054CCA05B51212FC
3C15A130CE00665C90036DBDD7F75B65B3AF62856850F04EF35B875A08EEADEE
EE6E1DE6F97CAF65D5FDDACBF202F68B5E140DE04E25DDC9D85FB7449CEB3A27
AF22752746417A81D8C1256F229DE013FDD73515FCECDBAF9B6972FB176C960F
9B884EC295EB95236E29D9962D92ED0E290470AA64535A61B22BA04F3583DAA4
06FACE8EE0BE989F253C9C042BACBBA649C23507129FA6DC7FAF8C256FCBC4F1
9CD6EBADCB7D7385C74B44F1EDB4CC315FBFCD2756D3E2F97CE57C1759F2EE61
7916CD9B5842461677E8ED3B3DC02DE8CE9F3B8F92B2FDE71D87B5B1F4B701D3
283F8429FFEDBDFA9EA02CF70A46A485F18B0FB6EAB8BE4EC8F490FE6D86D516
DFD85FA7004B50D92CEBA09A2C556AD3C9121C5C767659481EAA1F0371C24C76
61BDC56D12B0582DDF3E221806D7B4826F20C7CDC2A25584F98FE126AEC52AD9
3ADC95218855000902239284A91245881C86615545AC7FF3482845D902B1685A
9561E9CE05C8DCE93061A34A70C274C3CD492EE4D976166DEEB6E7FDFB84ED90
CED66A698E609112DFEB658FCC5384DDAC234B3A29D8EA72DA90498BFACDBCB1
C1DBADB6657DCEFEBA5EC9256A1AFA2DFE5A75CDB6B3F043AAC1893B6F589D56
13B3E7DA8EBF491EC59242C77C97DC4EDA91312F8B6AC75EE6B6843E72EC6A52
9276BA8085E5D0CA8F2F54C083A02C14BF54017FD552F4D10B05176B2D96F145
0F38BBED1BEB540809826AABDB611DCDAAAF45F6ED77B514E6CC8D0360FFE91F
80254F43C08B7EC7B79464F66CE61D11CF798B296A187D3B614F5F5877995245
8614D1465059E7002AFC5AC62E5002D7CC47973B7E07D1366AB814918616275D
53AA35E93BE69C1D0330349F7D38E907DECA01831EB6B0272C619E6A3CC8A3F6
02E7D0B63B4B7B0D2A06D39EA1AE7C904D582059B0C5ADCE52ADE15A722896D3
562C63465B5090275EC7BC2B8AABB8F205D605C8A21A0EE94F485331DAB41AF5
05A7CCBD43C5D9504C99FB3D84CDE74A850593819008520A08D611AE99AA3A0F
C62A907E2A86E5FB6D0A50849FC542A4865CC326084C79E266CA6EAD2890CC9F
7795126E807A0946090A33B426D9F66E974DE10BFF049E83C020A826890AAAB5
0C4E4E6096DAFE4C64F5B3028E1CE56F85BBA2EB7F3FAF66DC9B4A56C69DC2FC
5D65ACCC39676E3E17DC3D0B56BDAA83A1CBAE68EC96CA2888B5282B6F3A99EF
2B57FDE800527F67DB1AE8FC402552AD23625E9F0C7268CEF3416A082EC30DC6
8BD3C456F77C85E4186D7E9615BC5B0A009CEA600CEBEB00034354025F503279
FD243D7AE255D2AF18E2F500E56788CDD8ECA9FD01DFE44D65B758F97102E7AC
A92CB1523224DA1D9B25C3079B38B28701AA5C49E90B47B7991C032E3F0B911B
A29012965438C80A0928AF92DE3B1ECA5D3BEE63BADB70948770721ADE277138
D32D57A093CE702EB61AE1830993539FDD69B4EDAA2503F0F14375305720D29A
1451912F4A70843D5932D20BDE8D6AB322870A4AD588A20648C70BA15585D4E4
F417E77361CEDA0151DC780E19DE53944A903622EF9A20624951676D77CFDCED
41D9055C9357898A00608CD68225C2BFF4B134C14C5A176F950C05197A52358F
3ACCCD926C95B5D8DE5E0B1B7D12ABFA5423693F95B763670B84052E9219935D
C122B06E555EFD1B5BF8E9EC27C9B3719E6DC69A886B7CF03CC534E2F521B75F
5239E01337FDACF73C5B69D003804ADA2F9681CCC4B5D0A21DD41E8502138611
FA2A5E2FCD56FC8A6CB88820CDC421B1297A4D6B8712B3BE958098AA8E7F43EF
4F6E51B23E244C0E7A0CE56429C90883937BE9389440AC84EE8AAB6F15B42836
F37F1BFE968F1428E8EF8D5806C6451C0F818C8B6C191BC641A5FF25FEB234CB
27067B9558341B2F7D3BE67A44222AE28CECF848EC469D611E0EF07AA173DC6D
1DCF034AA8714CE86244FD4F8DBDBE9758D8F80C25D6DF55F248BAE5C24739C3
14F2E83A546A4B835066C1D1B9E86FAFC60C1CEF54FC05234290D24870FAFC57
68D40CB8DBC9E688A002978C084447969478504A44F088E2711C70005D3A54F0
4B4D344F2B8EDE68B3227C6CFEA684117B366FB6DDF44F265AB54E4902417C40
87B7DEEA6582997E82416A2C9ABBB98BC144D8813C0E1D36C2F94D7CC3E50833
2259D3ECB1878B9BBDA8C46FDC3E768A7BE07A8DC58AF1F4F85653AD97098287
194E6C8B03EC83FA229ED655CBB501B05B32831F4F98A68C205758D9EA0B9A6F
411EE9E9C3B29B919A78176F13818AD3CEDE4FDC155DE25D5AEF833DC280BA7B
1DEA6A3987502F99DE0F823C331DA7DF12ABC427B4D22BDB1660EA821CC5FE7B
546BE0038556CC2E780C773C8D80983A63F3B5746F16276F313E0CE1F295882A
6DC6D441690DFA37F2C547AE07F9762A049FB15C1E05DFF55440793AAB62FE26
D2A5AFF780CDD3A2EDA3667D336D9F6F464567F20946C7DB21BB9E9D6CB0B83C
00284F0663C88956B5065D5DC4D3315A0F031E7BCAAF3D9FEBBD17AA2DBE1D9D
2BD275F52D2032C86B0C0F78CEAAC2E92F4608AC9063FF90309AC35EE3634294
2AAF901661AD78BA441526BC57C460A9B32833A806D177075BED8BBE77DBE05C
560A8432D2C3F0696D68D6DCBFB599EC065A14F7652AFF4F02C02AD8911CE60E
7EA7E06973B85234D77F7C4A4D5EC08524FC235ECC5F0ACA4446A9278C5988DB
3BC1DC4FAE0ABD62841CECDD178D4F777D29808E1A04F33DB765E2C3DBACD216
13127E9CEC3FB0AA0BF9B76927E66F6C580A8112FB39E5A1973EB48242C6CBCF
DB8FC93B6A8B4545F674E322692FAD8021BFB2DB4F06A0E7A524884E52445AE7
F45857949472A850636481F48F4E3A74F611F7D337D1BD5E5BED8F857FA0E9F6
04ADD885B7054999E1CB63B0305679730FFE10E21B88CE115002A7609D779AB7
14AF58061E02D3D4F36FEFA3D1161E43F5A06E286B76DBDDADE18CCE4C272261
98EFD9989D152E9A2D96030C8137B11BA43F980020F083A04A68B73340A5E5DF
0736BAC708103986F50FCA28BF711C8790140A37510ECDD5D5C4C3F0E8CAE46A
7147F561843A78AF3AB81148597A0D1D28FB278C130BA90BDECE41578C98ADDF
186348E430AC157149FE33054339C0B59D1079C7FF3A9171E764B449582EF040
50CCF0A42CDAC8458FB875ED1298DB9B4DD5F1392E6D0C977F1682D0F5DB8305
CD2B0512E17F58A930A328415465705C6AB0224772F810305276B36E92DFD796
94BE2F9A98E6FBC26555D0F23D6E1B51551C93E9882F3847AEC3759C13A66A03
F36D5F688B318C4210830D0BEC9FD16BB36D75396C10B860F00BC0D6B4DF7E3C
81DD470B8C5FCBB746750A9A9080B0170EFEF25CD19CD4E373633305736908D9
A78CEA8D323576524D98FFF826CDCBC0095BE386B59BCC6581024CE3266795FD
BA61E030D1CDB8C218B946823209F1F57713B83A0F8574728275799AE7910AC7
27ED4A47A9DF06B2401B5F4918A8378B5815CB46643CC18D86E3E20A74A9443D
307D234EE04D10631860355351FEB67DD8256ABA9EB54C0F31EA7BFC5FB330B8
851377AFCB7BAB3F2050025DD52328EAF3CB73E3AC7A290AB3E386723DCBFB5B
BD6DEB67CE14832AE3CD667AB094E4BD159162D40B28D8FA46D2F862CC94CE86
743B042CDE3909DC49B63BFEC2FF13B697D3F78F38861989AFDDD3FAFA33885C
9B9B64474515B5E67C0F9117FB7CE4D534338C70CB61ADE7D689A3882B77C772
803943E9D6178433A8EA274E4B35E0D87F4959A84F5B7DEF6DFB14B6ACDFD7EC
4B6B172972FD1220947BE9947CF6BAB060153BF2E86069642391998BC4B57B32
3ABE4EA4BD6E305E85A4358AD0A57EDCCDC2ABB7017F6AE0F18F55FD2FBB2285
040A2D17A6E9FCD200A4016CC29C6327136471DE571D13D190FAC246FA39B63B
623D7A221CEB4D13C349F41FC3F82A3387C36544F2E5A63B5D19876C80E14D4A
7B43F3D5998445A6CB62DD34E1A43C6AFEEBAF9273DD8798A68D3515FE8EB780
F0582CE264303B899C953786E1FD8105BAA2353966FDEF10C35BB479287F2FEF
81F26BE899214A90857B65566F5903A6BAEF6EBF8D59AC8F6410E7E7179A352E
E9699282CD7A2F5621EC6DA8FCB73FFEA7EAB0581032EA5AB43AD5580EAE6F3F
D0145DD756B3C319B82821BF24DA14882C597D0FE53AB0090715FA3C39C7618D
71156798E31BC663A565094EB11D4693D97779D31A52A9D0EBC10786AEC2EC67
DB0036ADC9BA60732CE81C7287047422EEF2B48E8F38734EE1A067EF0B2B8903
653E39B9A966893F56B21C5BD8929FCAC7470D0BCEB436743766E381575321CD
9E1071814146A6CBDD4537C9865B423C6ED6255DDCC1966CF2DF0109811EFA28
CBE02A70E251166F1C393E0EF9FDE73732C09E5B491C1E9AA36BDB0724353AFF
2AE940229E6B70129C0CC25CCB4A2E547455D9BB7F0F8D1306D814D93C72678B
B30626B0FD1227FCD8D8EE63589387577D67DF5DAC61183B06B12F9E0DA766F8
D6703E2C2982AEC232A74046CE139FA107EA9167B116517D7177CA4358E2D206
A01C1302C9259C099FF4B0E2E51C1CDB163C3E59B2D167FD617F59E24F15194D
E1E3A7D35816E58124649079B44EA98C7FDC8B0D1D819B9A10D8C21BF1A0C9DC
9D7A3AFDFBA7D7963CEDB1BE7E2129D0585D0C1BBB5489D56258D3A8A9EB3788
972DDCF7C419C3AA968BA13C2D73528708382B1DA3670DC982C71F0EDBC86F06
58A3230D245348785C7C06D6F2882864C1D05FCE275544AD6DBBB36ABC629314
8588C4BE66613E3B6EE2C2157AFC8FDDBDCF689AFE8C5A61E54D097BEDF18774
1B56EBC9D18E6A4C4F113381173924E6DC3ECC5D586A8D7B28290136D7F43073
AD578D49E1307A9B4830F4995FC33D5D6E29CA10C9BC23066AC656D01D44A1E5
F556B5B7E99228ECCA641663DB68862CDFBA97A8CCE79B56F311786004C7913C
15DA6BE2D42181E6886D27820FEEFBE23328E6C0D35AE059AE9B1D4E81FA79D1
A719B2DFDC18ED319C5BA0880CEA07FBEBB74415E0E8AE43B43DBB056AC1D2E0
4AE492C9609E21115B51A4CD8B80181FF1C260DF0DEA886BBBC3E7323D122401
AB575605254824A1BAB8EC451F126DC8C06F7757ABD0B7F1F83466480BBBAC11
BE6DEA027C700519410D86F38133916F1CB217FFCA6F899BF35469A9DDF5A29D
31596DAD51718CAFD2697FA09AB668003B2678F1D27B1C6FE3A2BB41D1C03F7C
AFF91327765AECEFCD64385D6B2960E68DD0C5A99F899E9C8C0D176490212365
604372536C96DA1F075E84FC2FE0B2A3698E3F7166E321CC0E4B878FD8A5C42E
C23DE44D0A17769476AE02350D910731AEB3C87B0D1E0FD2FF4F0B28DA6531CF
CF0826CE0CBC97F9BFE48867A4FCFC4EADEE2243F409FE94F7F9AB40638EE976
68480DB7405B86983B443FBECA02A68C1FBA46D59255DE020C1F943E2D7F9890
92B9DD99C222A8853E8A160133907FB1576448969F197322AA737849859ECAE5
D4148A1651E46B86F75FE172D9B5F18345000CD669E611F6E765F21458005E27
BA56E9A849C1D9021BB92D9DFDD48625A595BD5B95040A4F6802CB88A0B966B6
BC36A6BD5C4B275CFF2365687C602C3B2867EF92CC41D0425D3B2B52D65F10B5
FF1AE0C8FDC77F677800FD3C3A6D3FD1BF868166A57B52833E7FF56018CFFB04
46CFD36D3A6D1C0FDBE6859E9DD7C64F95217A08454052F10C45F0F5D52BFDD1
ED035CC718D38E66821D6CAB6C99B7E4A4C24A09EB1EA863452B218718A4C4F8
E6D1C556913525602DED509F7D636AB1477AE7F5239E0E855BABF0AFA8568E44
157EF8A3B9CC909409B42D37065011BA47602F704DAE596B0D36275572FF94CA
087F68CD4F0952B8E6C59099C0FF890CCC069A4B371E360C5FFC3A2B1D3AB7F6
49E9732AF9A87E95CF3D73834B83A926B53544EF4CAF68543BC07F4E5D2D12CF
BAA046850A73B0D1B642F21840025535C563A5A2378EACCCA566DA9B85A48281
C0C4B546D39D7E83DC891373653C7663E0F062B46BC78628C7917CB77D6D4C5F
3B777D609FC9066B1FDF8DFC42676A420A93A90F19E3AB2B8C922757AA030B7C
C0253E61898BF479FA5A59504F516EBBF2861D926F07A1B3421F9320E8DC8F22
8B73EBB49A00D991C7287D307E698CB3F535ED49C4045456BA834DFCE325E4D4
0C6DE4598AA6E751D858524ADD67B00D0A26F850E057AA8460F58364A7055BDB
F18DB1A0248ED07D84EE0D8E9032C7BAE7E3A47F247412515DC6600ED6752246
528907BB186C294F092649A3EF000B80AD00B7C4C2F7464966AA8BA9FDE8E733
98FE2AC6F348E55B5356C6D9BEB510A917E1241F21B0E4B0FE3F9710B62B507C
CFA8FFDC34CDC61DF42A512B2B118A0FEF986035C2AD58688A6F15DFBA26E8F6
F6E70C4FEF11C30AA190A754A14349494A85EB541873EDD1CA8BD2E1035497F0
37EDA73E3C900A991BEC76F0E49E2D2BE45E733D55AACB16772BCD311789C51A
6C76A4BFF011AFE0BEE55BB384E5E282B4160E4A91DA6981604D49DD7C4ABCAE
3E9FE3429243DC5FC1B9988DF24BF3DC2AA9F591B6C8E1C91CEAA0250D538593
6DB079C17949C4CB50DA7C70944F85E9E12E73A815AED0C38BAC5C8BB84479A6
EE463B99F3F3AF363E46E1A73365934E2F8219287D5ED28EBE0186D1B9AEBB86
466CF177C792F7CC0A958CF28B3BF1EDB2FBF59A61DA26F5CA0082012B1C9697
858B0D8758D5A2B69849852FD7C4576FA655BF877D5EA77434B5949FE3652B37
ED69F6BA464A86130E5DBBAD05F791FB2BA3C1666D8BDAEF4E61042C3F759387
BF70D37A58643DD5A51DD7AFD45EEEA38B6020C439780984CA6B2E8FACB1B890
E823AB75E7C82A23EF3EA80F381D11757412DF8EE1226EA5EAEF273F40F0ED37
E0A11D69F7DC56104502E04879AD6F61B05B97D9AA549AC6970EF323BFEE3A9D
1CBECEC9579F0429FC50195F1917D90D0E473E068BD7155EBCBA178C8C9EFD5B
B949D97139566DE3F4CF34F5A3D9B722CC698BA40E893B139CF3358FB8F16B14
60866C859C8891A1DCFB4135CC354EEDF7DC3FF984E408D3A8C6D8DBCA438B75
71230BB43B6F02F2A73B91DA522C487755A827565450B9DFAFEFDB3AAF391389
EBE8AA7E7D67E1D9A30C7B45E706F99341B46A20795D91A1EC1C1D800B9E8C23
752F45D2CA775B0751DB75DB64F2DA3FF3E2589C34C9F10A858F377F25058DB0
548B70EDE77E0D7A4716E944C7E71F68724DE01EA85E7F89A97DE3A2B42DADF9
B25309BBF2E1D65EF9649CBD9F59D9CA2DD44DAE0F7132FDF024661204CA8B67
791686C7E4107D5DEB8C74F0F0220C91FD4E1AA86A95D03D6382529490979289
D98E099B62E19279B5F73B98A955EBB7580C5E7B4CBD954BC068A0DE70F1992B
8E37D2C02166056B8A13DBC663D294BA3940E9B6E28274FF9C0FB3B082820CE9
1B94AE95FFAC58E6D99E05B1200A3389CE05F3F0F7E6A7988D078579FF94E186
870EC9ADA2A0E94E3A2F6C0D745F26934A796817F95EC3EA6904236D503A3A4F
93DB5888E6DB65ABF13F349AB644CE2878332C32AEEC083DF2DE33226CAD9F38
6BFDFCC84DE4C7813B428EEFD8E63D084CB0CA937F328EE9D99648F41E05D077
4C3C064C70AFACF8127F0F082994EE794705CE0740CA28E044DD50A68493EF5D
023B04CAD708C3D14F85047251B8CF43E5D8977827A4BCBE13E345B464F254D4
951F7BCC988AEC7C8D154051D2EF12A35499DC6A3B3802DE53CB472953B44B40
13E1E539069A8A855327ECE6FE5A77D0F3BDCAF86A461C32CEC59C2CCF57E024
45CE5E376DF167C897D7D992C15C1DE932D4D590A13E3AA5EA11513722D750AA
49F5786E0D4D4FCF71BEE21B65C6DC460D2594FE218A9110132227C851285DBA
D50D0D3F6FFF2723C285573F3D948C7B2904542CBFF54F9C238EA8DFD1280616
2653E4CEA97028876E6A29BBA1212751BF0B196A9652C132B8D1789E3C82AEC4
E60D07D0D25AD324DEBAC88F24D9621CB4352AAE0B7BB59DF12EBC9D1AD20024
C2FD3F33805BF86AA5E6BE81B07EF06B2502C77B7479AEACD7027ADCD1DD4855
A5871A9E9F7D9A85DEB4A36AA107D27EE6B93045DCA07808783283E20039B760
56CDCE533B110D89ABA5AE619B28749C53570D6BEFAD22F7204EE52D95AD8FA7
142028DCD5DE33D18C0391476A575ECD6DDC3E3CD4237DE406CD0A6DFF28D589
770E1CD120A6D5B225469832914EAEE445AB9A8E2A28168C34A8564D0E3584F4
6CB07496369E7A77A8E23F60BE17AEF1FC3FF2B7325655A441793B2777F0512F
96F7D6569692EDB1D88F90576BD07EE8395040203BCC3571D4714D656601C60E
73327C1C6E0754DE41FD2FB26649083308657C48B5F12792AA364FFD7A9651F6
C57FE21564D5BDED84B8C03FB8CEEAB7269CF0DEC508E050076BFF963DD00E77
AAE2ABDCFC4746A36A13CEC9507CA416C40CA4524FC6D2AF8F0E60615F840635
C2D361864C0A2E438C40F48C55B49FFDE924ECAD198A59C176C46A3D889E015E
31B3C293A998B6BE128B7FDE2B0CB972D12F3973039FF247515EEF1AC2171C07
77CC6FACF8F12654710DFF84664FA491B4AF9825139686B9810C4ED63C863638
394EC7945BBFC0F0F906B1BC1A5111EB63F4DB9CC0118976449D117EC7D92744
7D81DE142D4A21DDB274D7770B887A121604E3FFC3323F35B915D6CC6BB8736A
21D68F2A5A486E005A6C07A1496AF5043B655C457B7DC805ACEED5426506E37C
4F0D8AE0232E80B243316183F61DD1F998E02F60D4E790822465A6C59E7F7895
606A854964DE36A691731AB7FFE153101A5F3357F334B07A39FEC3492DBB797B
34129D23FB56D4AB1B9A14558ACA3F10E0ADFD4B901C6E45596E2F07F8CCE45B
DFDDB80C176C5FD94EC8C624AF824B57DD0DC38D06A58E39A3D348FF5C6463F3
76B22EDCFAE57494452AA18443F1BA8D83BD639EBE3A4CC825C64AB87069B14F
1C395F2F44EC9AB79E8E3F6CEE54F5BAA81595641362130214101A811B59E084
C0311E0EEC1A67EC5B5B27A947743ECF1E7E09B6B977FDF5BA8B5431AD4DBCD1
C6A02DBE001F058A9FB4CF637150C44CF517DB1628AE9F50D2EA957D951A1D50
3DC6749F92F4487A8201A8EB730EFBF33B6E2860156395969947D1826F38C09D
2F52373730CF47B58AF83089B6C7582FA63591B0E9D6CE4E615AA63D48572190
1DA4AB0068A1439ECA5100D8139A703CF5550CFEA6D895344B28C34D1776A761
1309D7DFB669887BE2D28E9464BA5117822B08FD061C3265AA5F5C20D34DF838
AA5AF02CBED5E196C2A32CB62F0C1281FC0874371DE170482FCFF5CE9DC6790C
516A9CADC901C1D06D308480319DF1695B65330DD450D9041633AECD63C841BF
E8487BD05DC073634667413ED706076BE716BD02BB48E905AA0DCA515C9F9BC3
AB0EC6CE0C862085ED0E67D5CBC899A4A757153FA53190BC1CBE2953E4E6CC2A
5E44143C999F6613929CBA37EA59FB08E98AEF176880E76304ABD7B0F6E0DCD0
C764708F04D463456FE87B900EDDED00F78C931559DD377EEFD91309C922A4F8
0309C5D7CFA2A03BBAA59CE8C2AFA871B14CBC48F50603B910AD8E6B96F07BCD
4E2C6640B1FE97F715D77F1B1B875E0D62CBFE08FFBC5FE5F4878DD4C2B0D4BC
FA24774C8CA86DFB270BD2AC41447916627B42E8CCAF60570ED445F60745315F
C513B4542F6FB3DECBCFCE907B14B0F059568B58CD0D8B33E6623ED283C58155
53EDD328D732BF8691FEF85F2C1FC837F87E1C3C5DDB36BBEBC919852698825E
B1649AECA219F1D3FE3D076DA0F586CD1BF35CBE4EE5D651FEF31FF6F352F647
A4AF6C0EF27184B77841B443C486CD3C5641943E586E833D73E8DE6287C733E3
9B7E3E9D78C19DFB6FB39C6AB6AE76ABC7C1320A734B063D68269D0186DFDF63
40CD16D41A2E3E620C10C680EABDD2B9FA3486C9B39B9B57EA898188EA640545
8750357AFF7DD4B70CACFE451EF04A049CF16E5FC40917FBCDCA0658FBEACCA0
038F48E3FCFF4712844237AF4E9041D0D3E80832FA35FC9DB19B4BAE4D8F1D35
17212E3D66A44290C757214313D9049FF9C5F3D9196C3A2FB5A34720EA7DAD15
D4CF8D0680A25C206D195A82B27C4017FB2365671CC518EEF8BF1F7D106F5799
476F4829AFCA3ABB91A28D0397E3CCAF9CAF513DCE7E9EB1DB6EE3EDFC3933F8
4E30E1BC06BBAA5DB81F761876A7945EF96184A4AC8C2B845E0269F147BF06D0
F3C8B89FB82CB1D2AB724718B6736ACEB83E6571A9FC09011C59BB1C1BB1BF6B
5D3098E69CE1EF30B36668C6CAD276592CB879DEAD839328DE0DE0AC9B74A3A4
8EEDCECA30EC29FFFE49A0CCC098EB507C93369BBB2D5C84294155FC502770B1
0FA2AF8FBEF5D549ED73A620D3454F963A2AC4489C20D068961AF84D99BBA980
B59A6C80FC662F1BEAC4F744227E8ED277028F777FC2D417A03BD13EA8CC4730
037ECE48C0B48B30BAC5B04175F3E44300006DC0EF783425202CA0C2F7AD455D
88FD9E54D732002EB6B2E64A66A158CECE255FD554CEA553EEB6C694AE3DC4E2
1049925902FA8C2173BC8B6FB7A9AD7D980001D68C93630A06D7F127DC5994E4
E47B8359AF778182B0C6A2158E86FE8115B98C06CD72B0920502C36CD8034221
825D434975B8F736EF3104134F32B414B8388E67B61C27FD3A331E1F40C30836
5889AD14504B43E2A4B0373A97C3E7D42991EEED9FB1EEA1B80858878DE77603
CD665BCF9B8BD52D5766E0B876A34343E8560CAE98277157F055E7AEA940749B
35E4391832A5BB01460F5167AA8F5D01DD5F0ADFBD0EE5DC53F568945674E4D0
F4A708C20B91196D983E7347699F1333CFA5E2BC0486F35B49E2FF5D12BFE416
B7D7D4BF9096E766A3C384D69A1635791F1FAD2961300AEDAB54481D5FAC5248
9A52063D36DA3BEA80B282B5DC87CF13DE0BDD1628E097641FB149250C797443
86B672A822E5049A3A22BD59A90B9919D94748A39D61ADF57D837D54ABA1AC6F
B1663BC0B69D5CC5896B1927685EC3AB251A428BC55AF141EC2F7934FD5C529A
67EA195F99829D9508EB56A8878DA5D751013CBB077DC17594E38657325C0A49
F9E2BB9C2C6132C24FB65FA9AAFEA84924D5846A74D50B09A6766167CED141C5
30C861B9485B3AD3379168155F873229311A3A85BA14D537FE55E44F535107A2
4AE9601063ABE06114E0A73A0B4E3C11637BC7CE800DBF962B79729FB6959B1C
3D548887920915072ADB0403CE172C450CF86068E3DE4F6B38D73B1083475AE2
5FA3F9AC0E3E69B38006496C9B729FEC34250602DF9A5725E6F3AB32A1BCD824
96709F091FCDC1C98108C01B9F9BF00E1C007B30D8231DC0FA9108909F3BAAE3
E2E95FAE1D2129767B2B70CF8BD4757524B5A926FB242CBD0E6202FC09D74251
0DC921BCE2C13975A46AE853D32737B7C2EA7A258794FFEB09701D76E10FB683
36A558A655ABCE26EFAF1B2F7CB5562828F96ABAD8EAB7962234B1D551A56AC7
3DD5A38A67A5527FD4338BA6FB9D73625FEBB361C7C625A106B35AE35A36DB0A
4EE23F3784BC89313E44958806F3ABB93113A3A49D7E83A6E4979921E7CCDF0C
250E13CDD83E55106CE9CAF49E616A3F38A731BEC8B129DD43426FBE5701A433
946273AF3FE0FCE59095C8A4D2DD999040A338972959A98520A2CDB4E904CC20
DEE39DFCAD351C7B88BC89A5227AE5E1D552E38CA9B337139F9E91DD2B0325A6
8232FFFD8EE37847F0AFD6D1A108740DC7E570A9E40E74BD612FE29B4A5EBF94
ABBE422D92CE8300C7B5025413AF34321CD16A949953B591D0214AD46E4E41E8
3D2ABDB1B8AF5DE309BBD6D5289D5628C594E15702AB5063BA065C8C4AB24F77
973BDF0EFFF5E121B0DCE05402B17A5BA75E85F6C9D20408335FD2E88A21B0B0
BE37E1A01B50A22C07563FDC506A529FA4F0731BB0DA04614E6FF203CD421685
D867D03860799127F0233A9486F60E460935D3CD83EFE73371F2907331846CB1
C102967F66CF25CFBA9A4A8ECD4FEB5D0BDFD4E3EEEBBBFF1B7097184CECF005
F5B8E6654D244C6BD9E61CC7E7CEAF9D5215516902F5D5209525095DE35A76FC
CD45079D886B58B237D6C6D415FB8D8EEE9E6908F65A6BB7309609DBF760EED7
18E5FBA3D2DA88921EE4DCD1E9BDEEB4C836AA24E02243A3694796728D16DB05
C68B260040475222E670B0ED519612CF4971978276EA559ED782DB10365656A4
8DF532493BEA679213803B932178BB7EF70546864A356182CD6320459DB33C86
247D8CF19D03503A80FF2B67DD80493CC45DAAFD0D45979A7F25A6688F03B9F9
CF55A7F94152E6604CF12EA61D410142B507F6330BC4E4E0599A35AEAAC9C61C
0CEB61CF13CFE9E35559CF2AB27B3332BC165F30FCB1F5E223B5AD6A1ED56949
E14A6CCC2D8B01F5336BFD65B8D5BF3F55FEA693FFF6B2137EB60CC85E789283
99D671A56B1C034A74AFBC27327248F0DE7E332C89AF796F7D84D04FEDAEBD33
75ED1569D92552553D52FFE09DAD4F2A7F42048CED1A6F09A86800ED359CADAA
E964F287B0034A186ACAEC649B223AF2ACBC91CB25C18E36541304ABB34D8CA6
AA92C01B105AAD843E23F482E57AAEE3D483F4CB15531C399B26DA9FB5357523
A06F04F5288F03F01663D2B7E87E6E5938E40ABDA69810619C0A2C2207BAE185
E4EF4E472A650CEAAFCB28E48B828D12D5A952C26EFDAE2C3D12CB36A7D22C5C
D912429000DF1082EC7C058C006E6A9E00C8C8C553402D98A44DE5D55801D682
B0CF71077BC619169B8917393DB281E2C1DFF7ABA5DF2A6770A0D8587A131F6C
2CE4DF0C29393428608574B65007FA2A63A3D844AB446ECE9100CD35384C8F9F
462C4733D679DE8158019FAA0BD516E5D2667E0989AC736D572F1A4AD01609D8
D745B0205D8EF7A25FA07EEAE345F8BAD176072A45C55408BED08977CE65121A
88BC21368C9346D1660EE3826A1BF1943DA09EA07A3FE1D305390B917042582F
6CDC0F39F1767507335D6DF7041AD7310FE1029E1987F76DEF0205A2C8093305
8C5C6DC7EB207F8F3CD33FE217DC36553A9A24A30A31F669296CC089DFA7DB8B
9093C50C3D50B76E798DAAA130BE08B645A13F2518095BECDF0291F66CF90E6E
6F67D3E413CD77622C153FD06E20B6CAF51EEB1E5A1822EBED0B1B10279134E0
1A717CAED5EE6FFDE03D98A8A9A5DC915ECEEEA5D0F04A82412802B4924C4458
9117D2081759695207E7FFA255C7BC742881FA1D2716229EC1755B52D3242230
FC0C1323D5A6245771F241EE07DF6236B0CC6FD44428CA851178809B73045AF5
961CF93C217357F153D8C3C46BED287377DFB83AB58A9D044E6A1449CC8CCFDE
0D5285E7B6C54E11CFFFB06BC42362C6D70340BD460481958CBA626DC825B1BA
F498363043912F455CBE2BD408FB64BE900E340C782CC8E39F71B295E00DA8F9
16B75DE595B000071CF2EDACA145E3051008E02401E1AE52208C2FDE8C407926
5A3BB1FE18B5A544408D3C74674A09CA8070DBC635C7DF9AB9B3677FD8B69025
BF829884AB7F74C299661B51E1285BC1FB02CBB162D16952CD2E526E4A9C4898
B9EBA6C0F853FBA2E553EADABC2740024DDF4F4EBEC5C874DBB7A7AB9B4329FC
2A97A2D924E84CECC90B379F3B00E376E269F64A02A5B8FFF9835E782D2418D3
02A5C0C3366A73715A4DF387C81FA9C517F0D58468457E9407A9DA27A61B1C7D
A9439E2821731CBB525E3225DCFD8410F0689CBD7993D36E1637AB7CF5403D44
F445A4FA299E8F26792BEE3CE7BEA9C583308B859F9CBD9A317B086B10578BD9
4AA56A0D79344108C7E12F0391CA097B6D69199C9CDC00CC434DAFAC8746C5E7
18667EE2D72248CD0BE6E8108B9F93B60A24BF52B0C32E098D71B77636FF92EB
3A97BEC9921AA1C227075817B558C60CBC748C54896EB74EA7DDBDF0730D8A7E
E8A0E8FB890DC3D430D7ADB049570715EC2FF252913E078442A258E456DEEA9B
58B941F16E339FEB1CD72A246DF1ADFE264E7AD8D45BF7E9DD03F593045E769C
B7338660D515812741118933E3D3C17F1E03A0FC107E3684046C92B4A483923A
A0B6D365985ECFDB3AD1ED2B86B389CD44A17E59F262995B455A51704D1AF431
540183DB0A6C9E7106D3EFB639A2C7AF50A6C6D9FE2B1E4F22209A41CE1BCBE9
BAE585DFC8A4B57A95B44A41EA91DE2A0CAE898226BBF8410D1464BA6EA94CAA
9C9B2B50071F18815E2BC4A1127AE72C54A3CC95BA1DCA4E8D4C5B1A90AF720B
B500495C17F72E75592F2DF5A1EC5353C3A7C97369F8679188A0FAB3700D8D51
D5D1F567AAE713B90B1C16409B7133301C9B2EB459CFC283D6C3EB38667330E7
8BC0D23F6A905AB33B1938D14DDDE8F7046A09A7B13CABE233D3E9357573E2BD
E348B3C60F2C9165A866B2407C47A692C00462D79A74894E3B3B83D2055FE230
38E673BF1494FC8B0B69CECAC9CB405EE104EE8671AA5237B920CCB124AD65DD
96DD9296063A96B87A1D0695395D5F374F5BA4F29EAD3CB7899667B0A9C64646
81A6EF1210B05379EE63A5421FFAFE547D10AEEF1C6BF98E13C4C3B6C6EB37D4
B3EEF57039D438EAA920DE8B02FCE380A7C0142502BA3342A9449B65874B3774
AEC1EB99C27B297F48B4879D15CF639033E44C0E98927B7737B8B463C69EDB39
BF88B5BA6934C2A4B4AB2EDCB7E8F48DFE84E8002A9E3B230A6F93CEE52AD0EA
A4E473065F46CADF2039281A38A1EB57305B96CCEF1B6BA5FD0A9114C1FF8158
FE9410DF1C1ED953AE070A89AAB279C2D5C12B10A4C842902C83466A19388DD1
16384F736F511B8C44FE2B4FD8DA126A878E202516E3AE1BEAF5716B113F113B
97D80018FAD0037F8A2184F5F771A3CC3C3D66A1B87CA9019507BDD15861AE64
C6BF6F8DCA50B04DFEC8DBE0EB8B496D010041145750616DC206BB8AF70EB743
05461ED81F55F5D30944E00D07D2D16DEAE2D3AC55C5A1CFC2456569D61F243C
E911A84826FD84E2684FFB8AD4CDE4F336E77BFA193F9059C08D281A78D2CE17
65D82ACCB47657E808BF40AEE72CA8A081E4DB6DE612670A774812C0E3077BC2
9FEE21A4862E32ADC27F325B318B5EC0663CA82A7E9A93468779C4B7E1ACAA1B
A205444DB14ACF5A0E5CDC8F079EF7531DF5E57D39A4BCDC0332691EE09CDF9F
FF7789C4506775B958CD3FC0FA9007496732212CEEC1A69C5253008F78EAC302
9613BB49AC5353B12AAF82F29A4FDC863A755477B5440FC8F8161B036E8BC20C
56FDA82C966627B24897DBD2C0BBC216172A37EC7454EEF0845AD1C4C8899B8E
4E9852B0C670D8C4DEBE16B6CBE3174869B33A5256A735B7CDC2AC0BE093B831
5721E138728EDAF9ED559B451ECAF1E733D18FDA8833FA133CE2F1F8CD6FE166
057A5AC5847B71C7E0E2A9002B22E6B99B5C90A8D5A2EBD533F8D424828C36DF
9B6F2AD80E10D64BC274EE242781EDF1F984D8E6A5A011439F496AFA6BC09264
A208B6B18FA705533387A4B5D642BE30971D270A8A6A507379D263FF5FF87FF9
74223D7766BBD103B9005EF3A1F07A2321D2AD59C4AE471E3753C640EC98F662
5427422E6C367A1A453D45534BB7E3D24F0F27F6DB06B565CBF3CE510B4E96E7
BBAF3CCB6D30A033365DBF3B6299F9BCD172F10ED458CD1702C3E46B1014147F
908A9A9E79A3C4D93D47879CBA4F743A9CD353B08B12389934AD4706CF86BE68
692A61809EE3985EA384DF05932AA6D375966AF43A783A205C6731FFD1915723
AFB4F607AEA8C917EDF35620F6BE9220C18D4F73739CEE370CDC2FD2E8E65059
07123FDA2AE90D89A557F66044A1438E948D043EEB64E82213D0DE7AB5425789
14A0AE5EAD5A26D84BD5B9C7AE99F4C4E4C5CA4AE90EADDAAF0878332B1E5957
B44964B7FC94C8F57E14549756639C64A6DAFAE8C4B9331ACC47AEF1A9596589
BA5467C33B876397E3071F23B95F62B968CB53DD469939
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSX1440
%!FontType1-1.0: SFSX1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsx1440, tcsx1440, lasx1440, lbsx1440, lcsx1440, rxsx1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFSX1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-238 -326 1844 909}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA6B96583CD501F89BC45C7597DCEBA1A1F483DCE
2DB867DD3051E0094CE179669BB45906D49993093E9123E74E0D043E05F96989
CC79F8E4E74DD5A67862742C72457F6B5D088128F616F631DB84C5D2123834AD
432B6A6A8502E88B914A17C1587249B79BDCDD0C9CB28C6FFCC7FB63A1106533
660D6C8FA5F7E6B6E8FCADEE66250C2F351A6CEABBC35A85036C4BEA894BCBA5
84A1031C4F978A3A659C971AA5E6C9186D708668A6F1984D8D117CB19F915FFF
5A6D2BB3A989EA46D4AB6AF86B08081D62B7293B9A1FCBC4C73B53B218267790
C6C0FBE6690390FF903324C3A149E9309BC05BE5DC9322E80183334828911DE0
8092D16A64609486ACE95F119CFC31CEEE3EE3BD855E47CB5DEB829BDB29AB66
75249FCA982AB635B1D9792440525B4B703A13F5C7B2BD09650EB121302FCA78
BD602E9D3FD72CBE619A8C867263508420DD9CE391A7581C5068B3F9E493C108
0681D51B4CC140738461DF0A9C8D2EEAB46DF8C05ECD81940D3ED562AAD12EAA
2361AD8639791EEC173E59B9327EA2374DCA1BD956BE227CC92BA07883FD9F52
D7F3C89F481CE4819DADF2E26AFFE6C22F0C38540F8CE37992C8CA844A4512FF
1A74F991A47A1B7A78B196DC1D21CF5E6FC299C77C839276A2E4E07B1AAA5738
5EF6AAB4ADD928447FC809D2BC1EFF60816E82C6B8A217B27CA609522A90C771
BCFC8AAD2A833555B693BC5733B3B856DBC473E0925B6838F4229B8992B83074
B80AE9716E0D02C68404CFA3F35277DBFC9D9C09F812C2047174DCE71ECAE26A
40DB63C62F345629C407B2EC5723BBDD1E4B85C41D444880DCB5C6F4457709DD
814CBDABD69A48BE50E57657B373A44733503D4DFB43726576FD8A84960B9AF8
824628ECBD9E1B33C6C993822DC5D250F7F90FC4B6CD00389398CC3FE9E51E1B
36D92CFAF283AED79E49375D201FF99CB97155C7490BFB9C965B8CCB9E0766D8
032ABE75712DFECD2A63D8E12FB42C91CF67EB7C2523BC02292E1D1E419770F7
03322DBD74AABF8FC76ED30FB0122FAE304B84184AF757886F393186B5BB030C
72397BE2798DC546A507927A6A8852D5B7C3BAF6C95FA301B8B38DAE91ECFD67
C463442638261697EBFEA504601960BD18B4DC6C1E6EEBD0D40D5BAF777A1B1E
43FC1CAC9C13BE788C47EC5691E311F74D5D8E1B4A20F1FE41239540833233EA
063CA246FE2DC3A9870C2A6C5D0584AEBBEC3C4A876EBCC64A3AB8FF3720902A
7E5644848A57346228A13E306DB5A76F1741C44E8FADB2EF2903443283DBDF88
9ACF0BC604562958033A47EDE8EA24F0269DDE4D7B7A32F65CFD31EF732B69E3
A51D690ED747B16088540239306BD4E9774576FFEE1739B003D889A6FBD95A9C
0863EFC3F5AC56F4B050F26C96006C528F618077F413E94659865C54AC82DA85
3CF3FF053FB78EE140953D4A4C5DA1B2BA30F234534CB0FB5AA7CBF15B560989
C7A89CE3BA5ADCBF48B836CBFAC5E6B4A812BD40B5E72F5BE5CA9A6A26503033
7A8DC576F4A165DF6417181369AE535F8EA8DE3987D75B1E1BB91540EB95D9E0
3CD928B671BFFBC96D253D6AEA0AD2235663C579914D39D71C57C93F19C7EFCB
31A980B6A05B63D75B83AA1C883DC902B6B3C8CB7DC9CB0006F626BB50A62CEC
CEF5A56712EE5E31D9C4A79F0BF0409B44C2298C76871F1F34DF75103F60A11C
8227669C1D758D8C883A57B050FBC4A6B84956B249AD29281A239CEF2D9931E0
A182BF3E3733610842E1E3800381200CC97A0D090E5F37B5BBAE583B767E89B5
1F70ED56E189510DB574BABCA8DD0FC40A837E17CA7A7AB687068215504892D7
A72E5AAD673C77357191A24B41EB7B77C59EE90AF4F02BBEC77B3C1FE764A569
DC348F052EADD055C97DBE4F4DDBC96AF82B275307AF550F3C88DAFF499DD026
33DE6BF6A7C81748D36420336D66BBD81C7D0EF2FA36EDF8594EEE5458B9DD32
FD0FC10B2911BE7935015180835E9891F7AA4381EFDE8AA1B615142F781736FC
A7C857739C81401F7217C813DB56D08E75819DCEF46669AEBD12E94EFA9C8A8D
56B0DC6E93ED9D24223D6B8E434C0E7F651E7D6172EC63B0420BA3482C3A4813
9746DA6E93B28E3223FB65BA83EFE4FAAD6EB84EB17E62CF33D227CA3B3B0AF9
B64D129211F46911B3352C0B1428C1780D18B60391C5C4EAFABDB230B4C94657
C5279043B23AEF6DB4372F12030266885DACD6B62B8BC293A7C3FB8DE2F42444
65DD080CA9C04B43955F92F3BBCF238EDEA967090112ABD6810D3B0CD9B17F2F
4397976A72E90E3B9DDDA8E61EC4FD0D695AE00574D0BD030643B1EF886FB664
A3E13C485F2CC8E86EFE6A1FDFFD8E22C885D969CD18C61CAC9790AC6E54D998
B8E441F3161074E3B4194BFAB4FBB152028059A8909845C2A0BF4E171AD4EF68
CC5B3C2C095688B66DF6D74EE9FB383C131BE8F85C95571926E6DF864FD27C13
7E4ED53C77A31A0D8D3CF0766321DD10BB3D1024E6C6E15097A292A220CFCE5A
DA1E6494FFF9E4D785CECD8DD58D04B4DA88A5D420C9D2D361E16530476A74BF
EDBB37E08E183CD3F0045F943DB20F4B844702D282CF72A27FAA46264C7C5635
DF8A174972F5DCE5751F05E62078DC1DFD763C1FCE48AE61ED515C071E74C160
B266057F4EBBBF2A1D8E883762333B78B0269815BA55BB19D35A6ED50CC09324
02AA5C039E02B7C7F7C822891F8D6F15A2E82B52E5C2F883659226B762CCD6D4
76875A9394DB3DFFE16773FB0085E4584E589E242831A2881601AE3DEDEFF2D4
BE2EA46713C28573A8FFCFCA314C75851E7951E39295F87BFEFD0F80603562EE
1C10F0260A1C5FC6AC81C641D5B657F4A9A37FF60CEBF7927D50E580B348598A
3744487109A330FC50A1C152AF7DD393558A441EC9EEC6B7BDE9DFD467BB36E3
01E79964300C8C4E43B9D0E6C6AC093048AE73DA5FA01E47A50C672B7B1FBFD1
184D2F7777624B250F7F9F2731E45968E23C6FBC930CD472F226E8B95781FE1A
BDBA26588082039A41DB1D1E6FE2F6A1E53402786A3B39993737BE0E6FB456F6
F0FE8692660DDC536B1A6CFBD3F83E667309EBBA858BE69DAF0532ECC75487E9
77D1493715C7F455300669F0B9741DC0233B93B11CD2C455CAF393199A9527D5
0E2899134EC7792B026CA2D9075806A2DA97021CDFC6F5A8269430E404684843
A1A411DFC9CB9DB14F90CD9131DEB21EBF334AE76C74B5C24D478BAE0E66F097
0A4099F55529BB528DA9E88C3DA448E31527F62F479E98418A0D676B4846A0E6
19D723879545E24B979DB7A166C8B22472839A942CF84F49FFED241A5666A4E0
C13FF6091D74AA65498552A59622B3D063F803BB410CBD628FD15A7909F01628
C6F15C5ABD4F09429C57A6446656F2A9BD5FDA416DD0F3DB2525284851E2269F
FC8ABF18C0374ED2D4FDD095460C2609CB742585A28999D6E4A21FBA90BFBBE0
7EFFEFA9D04AFB60429553B15E7B0A9BD7D364486E03F2C74C81CACCD455A660
4FB505DD5FA64FC5301B91E8ED5B38E84AC06B816316A45362E762298DC8053B
FC8DB8941E040E4A9C2FB1907122ED9BA6C4F7B43A98AE31CB0E66D10060C588
B80E800280E232C2C36A975DC0A06F7528FDDC6102FECAE58D22E7A35FFA37D0
B237E79F24646BB6027B57BC4572115FB38F6D3A0C910E02FB4F4302807E946B
BD7D05935588A8A71C114A56237B9875B4736AC1D33DD2A76AF914A6B0ECF92F
AFEAB357F6E08968A6032F336C94C6B372E1A29D2966F70954567C3F74FBCA07
455203F6C8964057FBE2F2280688A88612C82D956EF703503F839295D4555BE6
678D8B20112B787CF3E145F8E4C41FCF68538CAB2BD7342373D4E53A78307DBB
AF5E1E41843C078FA76C839424490FA5C5C87D078CB2339B7B57A42A708D1915
DCAC06E1FAEFA868AB4FCBD8A02772E3017D59BAE248FEFA7D265D9CA9841623
291DEC6D1B1ACC3491250D6FA4E19621C9033F77A19FE5E16BCE56CAFE81B3D4
127C6EC5539722361277DDE0796392E3FED49E05CDB9D5293F54D712AF8A5E6C
025AE551D8FE5D6A24F0C8628708815DCA5268A109DDE6B2B61F652CCE595B05
9906AC37113CC01B5A57966CB2FA16AC87E101237FCD54C4FA9E77228C3977D4
BBC64B8372CBD0CC229E3B83EF806F99BDB74B8E02E2B1BC7F74D2930C1F354F
53E975D08DD57201858F9245E0492887D07570607493B3434DCFFC52EC611FED
9B6702CCFA61BB4E4F8E5594FA9C4229B10355842A4E94591A5FAEFB7D2B8401
2920F318C561EE8AEA6DE69A9915C8AA97B1FAF91561F23BA24FABBDF23271CE
408C335B8BBA0E91B3BAF57FC54EA31A7C2DD22D88A00E6CFEAAC1CF1F576EE1
2E1857293975CE826EFEAD91FDFF5F22F734DC4BF8E9D019B06F9083ECE7E795
AC9FECA33842097396CFFFE4B2DB71151A5223DAA130D0F3EDD3C556A4A94CB6
B3988467C5ABCF0382B8E87C058AC50B12F2B693749B2E2E2136221AC3434C71
646743A436E48F97BF351E692791537F916A8B12EC64C77C15E7EBBFD886BCF6
257CF4B40DF663F7DA0035819639E9CD038ECF87C23A2C6C313C0A6B57B6311B
D322C73F961276EBB0F35BE7F4AA9CE2EA00D51C07E71C8C0A7926AA5643A7F0
91A006D49396DEA490994D78BC01D6840261F7A8AC98D4107D0AE7CF56269043
610C7F68A82FE187B5CC9C9AA31999801726CB5F05EC5FB442F65AD2DA728026
33C3604179CE6CC6557C73B9645F0239703B35D633875594945BCED6D7DE799F
407755C5068C032EA11A3B5B231FF4E61171133106681D124DE7E6A118428C1E
DF23397C663DA722FDCCD193461ADE8C3DB9753C588A8731AF46279B209A8E51
24700773EC8787B3B6F81F2408C27766BBFB37E10BED50AF6BFAEF6EC8E29AEE
F00BFE097E3AEBB52F362815B9C4C2BD8065F1004859479A1ED9E106BA1163CB
C9DB6A05DA022FEC87BE01EED037907A537F85E3E9C449B09977A242A630EC89
4159CBB705EC8B1B03E2767A005628E184C2CF9C1F1522F9E99BFAB79A4093A5
AE30FA18DE95CA60B1E0CBECC7898D6AC135BFA75A9C1D5DD652111D4EBDF7E0
C87841CC9958B33C9CB328E038F9A91CE40B6143369CBF8A4D687F2913623626
01457853DAB180934BD996A25223AF3359A61E8E0569BBC5DE72D14540D670E9
E4E29AC316F02A2682E8D641C190D9CF234C80A19834D670390705095BAF2134
FC870C691B6AC03B56C5457DCBC891C9278EC70B6743902EF2ECB1D65A89DB55
13B266D00F71935DED5E3805B6736DC721C798772EFD0F5B244B33F075B37B33
44759AC5271457FEF67C6D18FFBE6A52D70C2D3B9446E6DCBC1491ACFCC1FE36
A2A2784558510FDF7FC059FDF17CBCFFEE58E0F069E128E7575263811E5D018F
D6AE61A9D47EE6E562C9B9CAE03A7B33572B686E77B3F3F7975F624347E74591
9D8A2CB88F243CD48E934085E655FE177168FA95C77BF97781A56C158AA0C487
4E486977A694FEB4C68AB1E7177F94AE4D6997AB8DFC4FD85A94445D399DFBF4
C4C26AD9BE697EB064E2252303D3DD4FFCFC95483BB5CECEFCD59F7D9DFF654E
C4FF5B5A012DE9AFF5D53BE68156153603C4D647B0FFC92AB7A9639EBDE5D7C7
829E67DDA9A3826341ABD83066F33F338E0FEF907FDABC9B780C7F6E6E6CA101
4DA470C91856AA6053114730142C98CA1621DC52A7BA505522710208E31ED066
3D58214CD0C0886BA59CAF89434092EFFF3B9A7F573A6216948D67EA6A3EA061
F57C15B96EE88A0A9BF317D1927FDFC9C6BDD3EE5F789543543A2EDDEA27A99A
246F0ED06921532AD45ACE4C06C4901855BB127AB2EB8322B3495912AD77C5E8
8351ACCFCD909B0459DA48361528CB0BB9346C6FD7BA060D3E3FF5EAF38E35BD
EFE3E244247BF3579918B19B9128C2A83512FC056DE5F49356A2D9F137595CCF
6A5D0B2058668D5B954A7E9E5ABB1154009E0C18A6CDDC9BD35CDE379CFAA434
168464FB37E8F7085F867C08D68E1A58B08D6256019DD02DDF007C8737616A1F
F9783D5CE1EA6757CE2D6A3656340BE64D4184828A20A07CA27E1B0D6A27A37B
3104F600A41D5788F094FF49C0FAE817CD9B0E7DF0341D9894B6CBB344311098
51E01DC81E5E3D14BE8911C50F437763FBBBBCD5A10054D4094FA159335DFF3A
9BAD1947C8187FDDC20019E76A7776F235C2D4801E65D6D2AA4A77FB2D700902
5457A62B585D1E310D07A8B3B284F38140FB74CAF48AA3F8B414B9135D540524
36A3681278B1F35A79718AF6BC1BEFB267FEC473FB712D4AF4B993863702E141
2C2BC6BC681AF3E2E6B9904BA52EE91D736A70CC3AC65839AC1E067BB075FCB2
C0FA01B983205656E7548D39F43EDB3C3F9448D07EDE0C1131259837BC422082
25B16B24514A96DCFD1E9E579DD633A1A6C6593C5951D105D652CFF49657223A
0A35192F3A5B8292EAC868724C362F7AA829A4CA5C9B07077BC18F631D4E68FE
E5FE0CFEFE3AD924DC97030DFD0AEF9C31799FD6E29BFBE3BE9D7FE91346A1F2
545279FEDEC6CA70C32F297A56F42F67F9BA1F24F00323927699299035A87E17
B7F149CAF72395712B5F85A86A1DEAE13B5EDA16BAAF84DD48629A21DC798B57
B6D7BA998D2A6C47FCBDAE410919E31DB52063C43C12E7B9939329E253791488
6C7A670ADAE1FB2580C019563C6909B64C934913362438E44A9A76B9FD5B535D
C1CBCF567DE017F91C29ECD68E76AE662B47FA565252323A427B54F6ECD8BD72
86D89D5697EE87FCCA4A62D1038DB8FD950B2DC23ED8A1A2F1FA8610EB84B113
56C83DE2B2E6E552D1F007A48387CB99932F2182AA3F9CBC2CE3E13A2792251D
60C307BDB22C77464C7DBE665B2B686E77B3F3F7975F624347E745919EB7C8E4
4D52EF405213E7B5F94CD0E6E139802E440905B6CA64C9AED4DD342F6BD1F4DB
13BAAE1F247BA62476B05F4D44346823DF9DE0C842D6A9AEBCC2B96E2B74906D
FAE4ED963F35C9AD1CDD5B5C57E4EDEBCE7F9ED2E398F015DCA2A94B5A8BCBD4
A5C09257E8B7D97FB6BCC5776BB46BC913F0D27D95B46D696830E29890A9CA3D
E886C1D6FC23C60144CC9C5846D703E9B044052117FBD2CD4BBCF4C35092003E
5E28F15BC6AA06AB2C6162086CA756BA00EFF2F69E73F816A77505C3E32EF8E7
E9D510418FF169EE4D657601D9C5FD0C0DCA99CA436114846D135A961B78B833
1726CBF5082F51E732138353000C799E2A6195092D169AFB83A41C459EBDD8AC
59ABB9D2709638526B19E4EC160353A633A3DD3835E99FD03ADA152A9B3C6E04
4DE2470D2D3CB01AA1861DBF4B44ACA296975DD4039952891221452EE6690A89
1BD0474831DABAF873C5D6DBF2F7E039F6635FCE0C12CB710B3026181F8FB67C
9AEE4BE6C8F4863ACA4DB3A5CF07C63F7EE74AB42612D067AAFC82EAE463C434
D8545C9C4A218FF05914D50EB0B4F84D0F83B6BF67B158842E7BC0355B5D2B89
D59C24055ECB5A67EEDEB01E24CA6F1EF01F2A68B268DEECADC1CD28161F5B56
3C86E0DB157CC78936B6805A12D572721B5F946F7BC232B842C19D6C91413322
7F0D24A81520BB05791F73F880B2C63790AEE5169BAE41BF058990A7708BF7D0
1EB5540B7611DCA1D950E0F10437E415984C79E4638D20054E96CC44F62755BE
F4FAC05E7E2506CEC4E7C3E63CF4698B5BF303C5BF6F5C5528CAAC1CC0276763
370B4C30F4E981FB52E8BE2AD8034CE733AFD1DD616D6B47916329122C3B92BB
92CEA87847913459BFDDBBE571AEF113C74D62D35FA03BD6C6DCA0844F3E2B85
300043A586195EEF7264E6122A16D517E8C752037B97F833B652335C0B24A462
4B7CD1FEC7F0AE14A1171BD2C14CEA4E7428C3A6736EB90200F390EAC371D536
EF4695B6CA5735AAA3C256C1113F1893C6B5A0247FC4BFC877454DDE4EAF62DA
43FDBC5A90D503E2F21285FB9F6D9525AF815B7105705F38761F303B05B911B8
9D67CFDCBE86161B4BD1F948A5642DC81E608DF2FF576BE5C494D3B8B72C6F3D
52DA94FF37C018A5211FAE935E6FBE0C5FD401D139668D7751D3135CABF9698B
E3C477E2F1913A6D486C7C6E8008138A3690B3E3158A7B91B84121236C0E25F2
BD5E6393CB85E9B06AFA541B16E78E2D226EC41CEAA12A1D15F6029EE2080F14
8443171A6CF434830429D65D2FCF89CA2C37014EC41B20F4E8926E5B1EB631DE
B68B5D80C88A94157DF999DD22E92290E6AC7243F7DF81D70700E9FBD91045D4
7986D495940BBBF6CA72B0D54DE24EE880E3EB09ACA94E2F1EF8B9472ADB7926
8B666831368E653BC574AC0CE331349F6B4D4347F1E55E05DD081E655B60D215
EBB389CD803DA3064F40D08B8BA54CA7CC4A17F54D043B5881BEAFE4C4956DF4
F0118B300D1B6D20927C4E08D9E45974B80C9C91F330DB0CF100E2D4D39BC5F1
5DDBA4059E7EF4F63EA1A434F7465D8F73651A4AD689ABA4EEF62A61BB5B2E22
5F2585F5965362DD09A5E34C8CA29574DC2B9B63F41CF72F0266578A929CD02C
E26FF149788BE8F7D30D168CD79AA7CAF3D64997B66CBBE74C669A5DF48C0AE5
BA1BCEA550D276DA96EA25D2E4C752EC153DCD5BD0997127BF301D1F805FBBC2
B0A3D09381091A8079198DB285B36455F61B61AC987512C0E0805C1C6ACFC4B4
3AD08DF4EEA40B4BFE049F479799D6C6652EE135F41F3D4DFC0471CAEE57E841
A4A04E6F8FFE3B371728EF4D3CD66CB775F3BEDED239416C879BDB62C8C1F07E
420A7545B5D84AC8E0F70D77CC051CF106C8619AA1EF1065CC453682EE2A8B55
3F7B62C5C5497F6B79F694C12B9B51EEA777735D537130031EED670768E73ACD
22ABF599980B0E570796220FC2B93984D53094FEDE119533E2D4EF2545BEF546
8A77270993CF9706F7674FC839A896ACF96CEAA61A9CE619E1E0761E13A5BA19
D275EA537C450A038E948F7C4A4D314997390847F7B7EE8F9CC95FD487A39A7E
C07EB5F23BB2C8301A7E20BBD0D266770520FE706713B099DDA2E75496C16E49
8B6FF324C0FBE6F0DD05B8EB4B11D5406993E348050565244D836E5DF9E7510B
788EC33640801155BBC9EE2A22D2872009F8FC63B1BB8516099977368B031616
831F236E4D8A7581AB3E7F489E280372A27B2FBA37304E3316ED1D42A57DAEF0
A1E84E146E383018447A70F82F8DAC54C6389717B26454EB04790C03B3904305
6890DADF96184AAE24AFA3837F7B281EF995800CF2B4658372D6FE28B419FA21
39E9CF16CAF6AD6988F4912AD08CC15DC42740B1576448969F197322AA737849
80958EE6D414770D3C7A1D1828643E8ED21ADA2F1D7AEEBDD708AD93C0AC6A6C
B033D729B234C04344621F2B06743E8805314302216F359AEFE3F4208ED22593
95F9FCF7BD8BE08A01362FB7C870290CE6CF526580DF21C44A4426027713EA65
D71A4A5E6C8CFE7D8833D6A3C41958B7BF321CA77D24264ABD504074B084DC6D
153A75AEBEA33FBFEF72B4561CB83597144D31ECF634CABABB79E15032373157
7C3B60CEEB3AD77C07BA85976394353A70D02EA84EB93CA85E894401A3C9EA6E
0F80BBFAF70F4D896FF0EBC22A454B50A052E1A208626D8BC488253C5708AF03
AE29B2E06F823FC1AE539FBBD85CE21F964CD2A906E6EB1E12A6B89D792D6906
FCA9E5F5E07D9CE3B2E7D96244DC683803B70F16922DB30B986F5B263620A6D2
192798807724B6A6EDAFBEC35353443B41ACD062AB4ACEB184E3843750096471
C02ECEED60DAD6BA02ED8D5E381B0E3ED8525202C31C1F3C7935C2190728B94C
3FDD8C754C669C1D50F6DF95F3FFACEADE336F1994F81392A4603FBB995B9633
E1F10DCD828F689B4FB72DD46FD1727060DC7D560442A175D7BF7F04B891084D
F61B766E07A2FD92799E358CE7818C9F0C56C9BEEB62A76900B8B0A4C375ABC8
77254A8D601CD2C11C8B774E36F353991D52A7C53CE895E27E5EB32D9237A229
B59CA1F4C216ECE1DEEF5C791A32A679D2C08E8FB1A81D6663AC4B0288339083
F9CC14BB93939B5B9E26AC8899CD0DDBE727069F46B216E366C8DE34CCEE71AC
B006E3AD0B2DE38AAB12BA95827F51E088BEE6ED408FD89D2CA2867BB4B68A58
0366AC13E0E5B5720163BFD1502F623E4865D8408D242872B6C68908CB1D9F00
BEDD40C4E314AA3CF496950A84D1008A586429159B5E34B681B6828DE2AF19A6
EC7D2CCA6C0BE768A25431D20499E342BC499DD7AF69B2FFFC56528A426DB147
6A579163C7ACC86AF7DF9902454DDD91B4F4FDDE9913BBF4ECFA7FB365BD8395
60F0AFD26CBFF7E94C4C26041D77D0DAB6DD9ED288379CC6A56073F9B29D8106
FBAB4F5C4C8A7AF34EACFD2A74CC9B67F6BC995ABBA6D35A5FFAA4E16B4F7ADD
19EC7408700F2E25DB51F220ECCC213E58356771D33852AD5FFD1B83E2308B2C
86ACD10D44B0FDE75AC7B6CF7D2EAABC3A88453B77FFB0D7A5AABDBA6E65A7C9
4A8D082D1DCAE2B9E9A4905A34EED26B3A0F9757C1E75E720F01C9A5A8D65567
2F22685A943B6894CB742ED6B0F48F076B2674E5A05B6CA387154984A0EA2F97
827D996E56382D1917540276EAC271AF8890D7AC6380D9BF54B8E6A4DBBF8C10
6E3AB477CCFE4F4FCC8732FE268EBEEB07385246B6E9DA84BF552869FBAAA104
741DA5585B54FAC04CA49F01B6736DC721C798772EFD0F5B244B3604F3AABEE2
EAB70BDB3A8E51CA55B73D746750CC64C8DC9FD238973A84F095F8B4E402483E
7301A66A4307681C8CD97CA63AC88F1C8E83FB9D37641FFF4EDCDFCAE93B9D7F
E00F1426459C3997CB2D07E5999E8DBC42AEAF335D4CE9550782ADDB9E59213A
129E818592F9E2CF06FBDB79AE4E6168C75314203728B8ED16E6D42FFFC3B795
85B0D5F2BF49BBF294D1BDD3546C87C041F4CB97CE5C2C235A30D2F960A27CC2
84946E38EB58801AB8289247ECAB190D130EBD2AAC72669AF6186CEB5C070D65
22C9BEF8C456080054ABBBA7ADDD256FB23C51A1F65159694A8CD7D9A2E145D1
D0961BE703278B202608419E280372A27B2FBA37304E3316ED1A3F6956F8C537
90FC92D2D39862E3081AF9F4B62794129A71EB99A53205E4BA8D7FC0836ED386
5FAD3D4A961139945253BE085FF29F8BD7C6C3FB2F07A3843D9CB2C1B407F9D0
7D562CEB1A0D3EC5F1B1EA743DEAB151ADDAFEDCEB76672336CCE4069B1FCA49
0BFCDF583E1515F7C171FB774A8D71DE6F0E676C1ADE9373DEACEE2127D85E21
3A473D350D815E9A58420BDCFCC5BF2684D1556129F142BFBDE5EFDA52A192C8
7FF22461B2333DCC63FFB05EA6CE7E11FF41FAFEDFB1FB674C36E65B9FA0C950
BFFDA8248421C0A59A539CBBCFE96E7BAA5ED605679DB249C90554575CBB4E67
E81701EEC0A26EAE610F8519F206FB92107E0F4959D4EF06B47D81EED29F7F7E
44B41D2AA1EC9C6062832309BF16B8D179FB620DF8EC1E69A5D5F7868A56ADCC
26A31E356869B857FAE577672626C76849D337E3DF82F3A8774A6873439FB6C3
92AFD8517D3BF5B58D9434714E6BC323B160A29C62B32743FBB29B82334A019B
46D37F5DA1F9D728A90B2F7F063ACDC7D2C157796BFA501DBAC56EC994783DE7
9BE054EEE1BA194CA82BF81F9F443861AD4DD42B5E597B9C20D4FA711C12A60D
C09BC0A75E0E4DD995D79F4D16200437DB937BCEA17E9DEBE277543C225D5C95
05D61C7952C74F847FE19CDE5263B111CD2508155DCF8DD799C37EB492508389
3ECA20F660AECFC174B5E419A57293531C96E50F855ECB21B7E31AD5366B57CB
125403ADD0349A827E17794C0AB1BBDE87B40B94C6AF35DAA2888C53D6247D7A
1F559AC524EB02310FBA25088E7CA630483DA5716CFFD7C2D17C9728C18D2F18
6DA146F2BC1016AA9C2C134045C1F2905FE1E074D5A67FE9118749D475846072
5F7EF33F39F410DE3E8E77E0CF73CEF75DDF931CBD691A90D9F2EAD24718C154
618880B4A972C5109CE60A6AB1D29314982AA5FF101DFF7BCC2631E3EA911595
46B5FCB0D706D0FE0F0D128763F9B7CB155788B7679F95BC7419E45ECA236B29
29952CAC3869C425D3B63553BD644BE1347B84DC9506415208E4125DCEA57FFD
EECFC9400E0BBC1CB0CFDD437BF06F8B6A3447571CAE5B2CE953823012F0BDDD
A4E87A9BBFE88D4CC7AA731EA2E6E47EB9D1C2DBC6FC1C64CCD5E7D86AA3D18E
FD237CDA518DD18D4117EFD462549CB70C6550FADDC77E7329DBF3DC447CE016
37152BA948E1EC4097ADCAEFD6021E95672E290117C783D9EE35D274E27F696B
442C31F0BEC519652AFC33EE0CB607CA521BCBB612A659AB97D490A9AC213FC1
5663950A61DAF63E1B427EAE8BA0AF979E544F00DD5551A98F338822AC31C6D8
5FC4A754693CC986D188D821D2C4A2B429187C98445FBCA660CA6CD43A262E96
4AE8817D8B7DB8AC8F315F3441B03AC6BBDB2D846FC72703D168E5BF020275B4
CCD5236520A0D429DF279816C67ACF82AAC4F18EFCF6ED6204B82A392890472C
3FE3416412EA105708BC4BCB87A27F703D2377C7622E846B620507F48F326512
EFE1B93D0B28C1CB2E56263797ECF5A52E88B2246C1DBB52483D48CA044B7396
5F884BA69DA916F1EE0F24BC596A2675C1FA192DA1F1A86B05A74FACF3A9C8E4
EE7AFB9E52322172C8CDFB2C261385BD24CEE0EDB2890D3E5945EF265D6DD4D5
F2A58A4E5E1CBA44602F5D98B39234801010F0536D8D5AAFCCB3016C566B0425
56436C4132BC5C47950C67E9641A02B181765D43A8A05A6962AC920A451CDCAC
602028FAC5D152A2DA3F3B299CBA11BB127FC8E241A58EECA20CAA7CF4F1138F
534C1574996CD7536B11AE9DCEAD87AB0AC5F00FCEA1ADEA75A04B5CA1B977C6
B8F3DBC9351637C5D0AAA7CDAF8BFD4BB46D55451033CEEDDDE6E788DEA53634
E0BCBBE538B162719022C906B0E60D8D54BAE7E4629E94745736395AE809D827
F48BC3B578923B32352962F28E16D2E18EADB4053DD52FE83AE3CCA2CD03D929
3121EBB23C5751891305F196BF168366E19FF25EDEF73CE3D7B529D57F922B7F
2CDB3E18FB10C82BFEC6CFA8CD74B34B93D5EAF894E06AE15138930F2266A5E0
26E1AA87B1D1A5A701A394932F679444C284E42B3D52CF9BDDAC57A0FD7F350A
D4925EA5B5F76F5CB39207465EB238128AD4338ACE4D031BFC11D3F2FFAC38BC
0598D990A86ABB14E68242BE9D69173F9D118179748A756A92F83019370C7417
4838A135DC10909CFA9E97D01863AA6E2DF51D22BCB3F125AFFDE220C16AE2D4
7B15CE3E8740C1ED599F55E134AA4CBEC31652D03DB35787C63DEE94D79A89CA
AA603E3A963194129130E6936AF27B3B2BC79707476F7DE58D945E59543464AD
CD3F0B0FAB16EB6AF342D7BE85BC326D3CAED325726D201916D583BCDE2D21E2
C2BED47C1D234415D5C34226855B511453A952D3090036306C4F413DA07B0326
6C1A998DEC32D2A6EAB9405BBCC3692385DC710902866EC3C82FD91130515316
7CF47D6C1BB06906BE5DD9786D5D9B4BFF36301C9D89D9E393E58C84FF443BC1
22E310304907427C203EB500EAE7987A8501D5AC71EE39B9968338D9D8F0B35F
3A52AFA1DE2A141C4B6211959859B51A55A2430BDC4FA074B44B977A49483894
FAC4544DC317E1A9D2C72DF5CD1BE2910F1DAFA9EB41C061FDD0079ACA51EC0D
368AA80FA3834852623B7FDD30687981A9AFB10E97662C1A860B85DC9898E7D7
05298E0799414D1382C89C2F3E25CBEF124C7DEAE1AD35269ED51FF32ED87C06
3D7C8222B22D8421C1080040F5D06561BA826EFD3C36463EF170607C4FFA2DA5
E16950E002DD1EF770BA4778296D06C904C95AF2D018F1A3D9F9AF1F0DDAC1AB
953442B5A3FD539727DECED3E87238BC763619F15676F11FEF7293CD5937FB91
5F2621FA582D02CE50F1CB4BD1A9E818185E9E357184E1210A23CC6198ECB6B4
8E9137F1070DAD3A0F6DC1120213DF599D3C625EDA869F876B1E9ABC6283F05D
24BF9F34237CFEA8A25079FBCC353E2F0C85D7CFB97ECCA7B9F9ACF0E504AD86
6F01E78235D85340EC031A099B7B5FFB13D6B3AC539802981F4597E5B34E4509
E64B0654AADF025BD411AED9E93E543A525AFA0B07C773E6A0511F1AE2D935E1
CE76FBFCADBA5E92AC7023CCCE00A809FA739DB818B510A36F4034C6B652A5B0
990D85053326D162DAF1605BF297833F77A5A0EAC23087A1423D6C1224EE53A7
57FEB8C78DAE2B9C375974F34D058E78A25A34378B50865E862763F01BF68182
687F00937E25E5C2E11B8754D3B2B88609E885A2D0C84357C07E3C8E8BA1032D
7BD972EA6CB6F0E49F8B0CEB4DD458DAC1CE89B910AEB8B353B1E67FA2CF4C38
3537BE246A91D1FF4F0B28DA6531CFCF0826CE0CBC97FA6D60DFDDD92BADBA7E
23892AAE8CCF1BB31CDC9BA50F4ECFE8B485C9273B3A3B5A42D4F397A226E087
9CE486338DCE86B671229C776CF57C844F5300D7F9F7E5ECBE5B4D64E5F683A6
76BD7CAD08F2683E176F5EDD3B95D9C95BCE1483052A0DDC7541CB8ABE34CB2F
3CD927B2581AA05B045505CFD72C726EEDA77CCF43C301B4F21A43E92A25B2E9
C39DB70D805E89D8B0FF1A4490CEDA8D1CDBC4D20F3F418BA4179575DB47F92B
E1BCD66C924FD42E603DF5A8BDF2212A32C394111E727962F446E9C58FAEE84E
1A947EFA33C3E3879B8A6C79FE262835C9A2017FFB5C007D08F39309DDAE766F
40ABD710B357D5C666129D166FE9AF664F2340FF6FDFC51331159CB693B5C418
67B48E7BFCC763CF6E980912D5406B68B4309E2631146E6065F5955E7E5A7798
9E7F7E8AAE1C398A107EC3BACD9CA8DD0C05C28103D63CEEB0CC93CAD8B800D1
937AF24DB4A6C88C30BB9FBE82200C19FF70E8B121B2389C3221F743ED217ADE
E2F77D8F78ECEF65A8A027011829A1514F8C8ED42A404E82651728E83FEF9AB6
CC93859F04EE13166758353BA76646DBFCC261E025123B1610D5B1746E8F1733
EEDFCF758218B82F43A4536329B55F439D8F35764CC146C055427581055E8565
BDEDD0CAEA40B74DDAE790FCDA4FC0F9EA03CD146E3A66769D6FD5830361C387
1845E1B835DFE3AD4597CB26E535622A1FA8F9A2DBF50839CD0BF45EF273F0CC
159407616BF12FB097C72B6EF10C2B087D90488A2FDB5B667D35C64098F3570A
BF2BFE0DD9D621CFEED49281211A354444019538B47A67B7D1D387274CF32C65
5EADC39DD2CB732171E2536671F04D1CE0DCA8C9DC6AF15112AEAE26173A884C
7073B4D95D8F3795B471FDC4A7E5DB4B0049777F53AAA385776BF13AD77241AF
9EA5A45319C4B267221C48A0DE534CBC7D43F4B77BF339CE3AD27FB1A688716C
4C00CD78110F142FE35D3267E389D9B89B81CC96F36594CA676E708C295AA1C5
79CEE1DEA59AF1407A11A60B70E1708836B4D5A42458BB9E39E939BE0940E076
9FC1C09080049B5EEC37A479C5B48D6B67CD4E13BC47759A48A14EA32B27CCB1
6F7851F07B4D4F72507F74D2E7AF1C999C7D24060534CA360F7E7CCA074E4C67
43614868974C5645ADC238843680BED67D0F69302B8C6F5BFF91DC350E5C57D7
36E58C0F91DC9891C6ECFCC336FC39A4A1D16C9DD8C920C4256F788A0D047506
068CD7DB05D4FB1EBC3FE0C9742166675D0D4B967C80205EAC20294BEFF90EE6
CFDCE7AA90C976EEB6E3BD84E0E0BA1D056D394D711319BBFE0C1F2AE5671C07
A7C41E6059E0DD938F3F9E946B83EA97028D3DE872956DF32A1E50EE800DD4AD
96DA3F7FD3972F82731D47EB3B78D9D5B3C39AD08086487E56B33C7E59B7E4CA
A42E980BD15E0C1FD80DE98EE0964FE2293DEA603A8710CE08660101A728BC2A
6D2BBF3C1FD7F9A4E2FC0EE4A02A7D59DD0CBBE935142F1FBD1D3C348551A7B6
FA04DDC10B1562B70A210404AB53A1B9533AE106D5A2C96D7ABF06A0C867D857
5DE055FE08DBD2972478F594393C485E6A2C2D6FC2604447D1075D426DBA5776
CF1B453DD9529CC37AB2F2806D74454C19E746D5F98428E7CC07166B548A5CB4
6E29750CE7A53A494EDBE9C2210B768F087799ED43529279ACE39C3D16765A60
3358DB695033F2C5D02FEE70674DAF617AF5896578161A9E76F4D5A190111750
11F7F140DD4932A36EB474DE9C2F8B85D16F44B8B493138937E2D41C8500F702
27BF00024F4D5EA3F36775B1B6D95F8A207F71E35935A3E91E92643592ADCB89
B47D9510AD568C908BE15C12D4548D442A9FD5673D345423531EC6B00ED53E42
07D3179239B40DBF93978E23249A0D71923366B4E1B0D813229A562B09E86112
E884B72906F162D6A1D67F67987C8D5BA30577B3A921C389EBA604D5A3D9E42F
A41B968856F90959D5FC174C6C2045801AC248435E8439DE7562CDA8EFDAFC7F
D6E4D4120A37063853BE6BC220FDC08E460A60B4A5781CA656B769CD0933F067
3A9F3A506E499542AB7747767F86130646F025C44B1AA36F1C3634F530F873A6
807F7017021B95C31824773595A6272C6A7C60B90D383135647DC6E3DCA1C3B5
9875A6C84C87B56CBFE3FC23300D8929A7CC3E62F4776E2A2E10CDE9B4837234
E02E8CF42EC3C2F699915A843ECE7C7F43618BE5A96428B620F638460353D8E8
5AE0AD75F7A86B3D06B8B1B7F0355B5838CF9B6C864EA4223617B7786EC27B01
6E45DCC32ADEDE750520B4DA4CF0051A14867B3C8EE7E6E30BE7A33C0ECAB79C
0FFE00FE6A6C46EA7600CAD564156E976479B9CFB769EE2C389DDF2726174FDF
575D3AC697F39B66FCCF4D8BB06E8F80770D34A0512228030B2C6237F964EFEC
C2A8A0A9C6BC6E3B61C8ECD9FA7E8D31EFB376CD8A7DE1C6A136519725ACB689
1E09E001A0C79E4B41228D088CDAED9E4FE09123108040E49A964DA7DC3887C3
5138CE460B51A80A5305267CC9BFDF6B8184B62B3391DAAF9C58E0771CCD47EF
A5AFA8D21B60C212EBFCCA071C4AB36552686D3FDD258EFCB257A90BFCEA08A1
485C5BB03E099AA19601F42EADD4A7193521C176C9ED6CDBD281DF4C11A21899
8D11CA150A2F9FA1D70C610EE3717FA3481522FFC831FC688C482172DF279FA5
ACD8DD1EFF1EB9FD5C9F66D367B2CB14FAF1441FA2736FC33CFF744DB6B1CCFE
7216FF864A95916FBF540671F3F6D555564E7A84CD5873C05E21E6576822FEC9
F1B784845F6FABE3CD02093BD5D29B37E418043DEE72770AC2AF3C81EE3C21F3
6090997227F70229A6CFFD262623B12F69E5956DCE1DC93E812EE36FBEA09D5B
33AA07B45263ACAF295A191DAFE409749BEC0CB6913166417CF5193312D50EC9
9FE9A04FE583A4E4DFC0BCE83A811813AEAE90CB26BA59BB277DC2FE3A616FF6
3279E5ED4C40B715452D748C7E9762DA1655F6135FE71F9D152AF672DB757856
E0018947968C71C8A0E04CBDE1096CFB85C7C490EDFC9A26F4FF119B9A862FAB
AC015AA6D6FBA1C9779CF928D394D227EC193C44D7DDA28893185CADCBDF3788
3F1C8844C7EE1C22862DC0840CF1BD20B6D835602C321C76FC2B25662064DA6A
5189E0AE7FB7F017C4B51D53253B101C62C63269A031D21A614EE7D81416B90B
8C7F547DDDE74DF16E18DFCC9873597F7E3ABB0D7BC228EEDFCE9A06EB400D7A
55AFC9142B7A930A25457FA67A06E86742BA12319C9DB362CAD63C5CB335ABE1
3D9D3DA43062DE85DC6F16EAC393277433F4EC24919F91DBDFC3FDB620A7E7D4
C10A84BBD5D9DA87814A239C4386C99526CEA268EC92786953BA1F1498956271
9A102B2CCC5EF201C15B8A2D4D43427AA416E2840C4D1BA97C6167A83589CC42
86D9ED4FDBA3578C998B89D86129191C22268FCB273C807DAECBB97834E15A61
44D1271CE1DC2DDF762D7FE859E409AC0FAFD1010DEA5E425B02E90D92AFC885
D8F017AA0C113C6C4AE46BE8AA791725879C537EF5EF040A85A235FC22D88033
12298F626515799D01A5F6B8B21E649B833F601E389A237DFA359DF679FD33F9
70AE6B492F17DE356F18E290AB68DDB1F2531C65318D04ECD237E8C8FAC39AFB
F25BA4C192623F904D6FFE80137BA7A2C35D5D291162D5AEEE95D7FAFE260947
5A655C8234FD51AAB09EB88E1C5D996334456333BBF06B51168EC5AA46546FA2
0191B463781077E4C5F054B7A0A6B840BDB499DE71AC888E5F9A14E8FB424E78
D5598C5966178CC37A0A56507A95F57148401BDBBE623B669C18C3FD429BC156
E804983C06E671329227B8CAD680406DFB36655CF18F24D1494AFA0D8E0540BE
F8E50BF835B8669DFED78ECC4AEB52E4AE86D0AB6ED3F38C4CA05432A321758E
2DEF9C2CE2DEFCDC625E051B045C403AFD8CE026D75BC4A541DAB1CB8ECBC1C3
AA648E9154C8B36DF0EA4EBDC39513181B76425C3018ADAF4493D4C472B3865F
62FF5D0DB7588B9408C490F53594B8601EBE5974FA6AA2FF8A7269976A32190D
45D5A948A729100A80B13CC4772E91AA119F6C761CEF86932356994C918C6934
BD88547D631A261747928D4F6C746231D55D77D246CBDA89C1613FCA1F2EF859
A57C823902A75F1DFFBA5593F52E54FBB88101C49B4920223EF5CE1964CCA6DF
17DB4D677290A6CAA50A80BB5EEAD4DD9677E115D205C2E28BD3618734B087C2
CB1B656F1235BC79D037E43BA1CB93DB614B304F4CB542F74D6C01F72CD1545D
F5AA608C7121288CE2CE3F711E9CF5FA6B7426C8C92FA9E17737F2308E34A93C
8C490FB7EC630F9EA18F28E35D6A8994660199F1DEB3440AB86971A02AB38CB9
86EA8445D0C2AD2830183F035DBDE12722A4176965BAAEFC7A39B40E0CB18923
DDF43FD400AA3C7080A9A4B38E9863B855018C61D40FBFAE65EBD3D2FA4E5290
8E4835BEB722BA6DA2B684AFE9CEE9E4F39C66925D1052EC37CD6D7BD09A2A0D
CA4F921D73072C1EAE2DEBFAF7FCCDCAAC19D7964093B4A2C6D3CC0C908731C4
B9AEF56D1D3360EE28BA7E1864CA9A3C405A837FD31092FBA4239F4C91A1504E
A495A852A4FF0B3B4164688505BCB9A067E705ABE69DDE54DB0388024900131E
8F2CB214CB6EC606B35BEB5647427BA218A8E5254599138EF595F4E049FCCBA8
BFFEF28EEFA2BEE22622A8597D4A986DD57EA0AF74EBF3FDA1EE776A3FA3DE32
B91DD58D2582CB929A3EB2E963A9FC1CD33B8A4F08442B03BC0DE71F27F1CFE9
514C4F3DE8981A3BDEFC44149C362994F6F4B6B9C8DFEAD60AE98BA739E76D15
DD761AEC3CF1D96F8DCEA7A5CC539ED239A98E2F354ECC5BA1E5AFA94ACD36BB
C4F4D1DC98E4A8D2C74FBFE9299A0EC6B4987AEEE146DC3BB0479E6FD0E024E1
C82213E9F6B0C86807FD9AF7A491D800709BEF57C789996B0D89CBB1BAA1D847
551C5A5D4FCFD2529CCC16124D0014ED36A3A9F42414ECAFD04C811182DD2743
D4003C64BB5ABE895B57A42B7E45FFF484295364E7906C0714F37B936AFC24E5
D2389C1E3BA4EDE29F08CB1BEE2154FFB0FEFC5C20E04547064253D6DA2EC499
04281324CC3365A9763373FAEC0A153E66A2AA2486661A2108618123AFDD1153
5B634F50E13FDC2715F67F3D180C27C094215DE3B83753270330DE50471265AA
B06015C21F09DD4B5C7CB90F903FE34BD71027DF2C76522D93C269A464169A41
04D471FE77EA4237664FBCA6B90CCD70293978805CDBCD0BB14601DD75B822B6
D308CF9EF3B9F902ABAF73E5E295F3B566F86A95510AFB2E140C4A789C1BF8AA
C8949C7D647A882B97AA9BD1A6D11C4CD32DD191B5F5FFFA05D567EE5B64CA5F
65F52B639580D9FDB89BA4AF7F04702F92F8A264762A9827BAB0F062FBAFE5E5
A886D25DF4DB30E494A51C3E79BD5DED806E31679C2184A51E0FFCF93837EDE6
E06CCE1E78C3E172D1646A4B8BC0942DDDF0B8BCC069F975941EFF052C58CFE1
84DD949C0AFC3C3057B18D2BC984AC6BE7CD8EC2820C11F037E9AFDDF7F9B125
2893375196583E7936401891B8B9207139E1A85AA91834215728AD7C42C47523
610A78DB6FB5535D39B5783EB01F4DFE9D01F892A9E434C8168BD9CEA2E265C7
55E1A70FA2E75E8724DCEC737D8CFC8880E2F135A3C7C109408B1FB4073D79CC
C8C59ED719D476471E4420FDC4B433B7C1810E740CB985B28DE38448C288114C
E5283156912654191CD62B8BDD069CED8B11DFFF7C5ACADC3F637541C0C8F42D
944A6FC828EA586CF26B99777341ABF9890FF9D06EB8BDA95AFCF1C97E72AFD6
92411CED3DE4DBAB4FC48C4A61769AB45A217C67A3F22C8F1A2452006693274C
AFDB1EA00EB53968EEBD4969DC7A0193BF1459716FA1595B81F58722E0B7DA61
78E6BFCFAC2C617629C3DB0F9A720ADC63F813D69B9CBAFBE4D61A2837D829E5
F6C621C772B357AD700FEA65FB2128F7F77FCEF490331ABABDD43E62C9E65ACD
6B147E590D0CBECB0D2CCEA6DA2030E5F640F537CEDFC1151BCC9E4901BF2D21
C08ED8DD4899C734C5EC161D5350B0614C76AAF344374E332D3DF23C2AFF98F9
26A4D97C9D4D593E07507902E8766CA4BD56FCB999404993D02C1B04669BDD62
B382545A6599A36E79D1DA378AF1560AF81101810CA8C2E5733AFEA4483FF50D
AFC3BD7A51A074F194836430CC6CD3850DA12CCE143CF4BADD4FE0FA32BFAB82
63C174E6C2A2F10F87A6CC0650C7E0E215271B737606D11F54B03AD7B7C3E092
D4955A482FA54AAB43CD943E8CE14E5A17F07D62E41BDE45306E244E8E7452FD
5DD15293F78E7AE0FF71A9156081492A7442EFA548D786BDE075514EBA208BB4
5CC6D7C64F84698C5C26437ABEAA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSL1095
%!FontType1-1.0: SFSL1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsl1095, tcsl1095, lasl1095, lbsl1095, lcsl1095, rxsl1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Slanted) def
/FamilyName (Computer Modern) def
/ItalicAngle -9.46 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSL1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-150 -320 1474 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E724728647E86B0DDF0DF
27E470DE304BAF6B908EB3795E1E2C2EF1C03404F1DBE0D3E3C183379DE9E0FC
0BFB0D61769003C4A9E55431A4C3C5DBFB2752864A9A725F367EF3165F7E622C
C138303769E5DC370F262EE5CA8F59C0831C0849547E8357BC5300BDD59440C9
294CE784007D57CECA937A34BED5119A5E304D5261DE9153D2DDBCCE739E6198
9070CA375A2DEBA40443CE2AD54F4B3D184E9846EF9C2C567CC19A512C73A990
6E3D61BC03F048A3FCEEEC49D7E62D00A699D12E4459F98C8423D946E74E9041
3C8DDEA7C255512A023960324BDDA11B92459A83DC5A6A119375E450E0F3FBE8
6BA5385413972A464640F061E935AF7989DC229C4E9DF86D9162A1BF33567C0C
31045A0C5CAF0A394B694D99E97BE7B58C3C427F8F48C15094463323AD593CC9
CA898C6939F284563D4BFFE656737D635FD6BE414094FF3384A36F14024D9368
6E38EF747E4E8F662BC7E7099CB166191BCC2410A69BCAF57F21FB55FE221CE0
BB8019CF28A7B33F6011048B700E1220ABC2B49A835457838BA4E238565CDCD6
73C74C40FAF34BD971DBBCCB60B2BD7AEC5253B4610F9137BF480E3C9F1CCAE0
F24F8F13C840D3D815D51C6C1BC368DBF428B5454132BDCEAF909FFDD31DB259
4E6F6B41EED47EAB63DF8B2D6B37DD024B3483CC13A06C356AE9895EAC769BEB
EF5E4839973091137858C1D8596000C2F85892D574194F0EA9B44085C3BBDC87
5A1C250E382F837F4A493228B7DAE705275B56BA63D4C4E5389B32052EF346F8
9349BEA0C53D690900696B7E92555F3935183C17752F1DE829847D167466BFFA
CD64CB39A99A44D0C255646911E40F0AA1A0F2EBB1E1A34E6EACB07A901BB4A9
4CED1ECD64E0FD0679EE72B812BE81BAE0196AA209D1CFA5C8267F794ACB69E7
1DCF71A547123C8464BC5DE64E0717E7B076251A9019C9AA9EB921266A103431
05E947584617685896EB18120F759C3D5B8305C186A61279D544E2B62DDBEFBE
EFCC6D6706337662B94BEF7C919C6829379849A19401260A7434413533269ECD
C99B60755D87C2F5FEDED313DC59B60614C2D7E72FFD2E71F2020931EF7C6287
E8933A4FA58300298B12F3DDB5318F92C6F33E6D384C155A789EF1DDB768507D
A2CF9AB31CFF42FE6B4F03CD53252501C2796B15E89FD7D5E9EDC21FFE4679C8
D20B5EA6C04F961E03169F13B0C2720DEBB9432F01A550980BF7FFCD72AFA257
B92EF40580FFC7D49BE88BC83E76967445B1F5730DE62C03875E50B14B0B6BF1
FE86A001507C04521B40EA1CF49975BFEEA0B2276AA0630DCBC4306D1D96FA21
AD7B1C806F4ED2BCE9A2B379B89EED605D72D0BDCC2A72DE0E9B41A66C608F7C
ECE80469201E64134B6D91829737B529FDD96D6C22A99E04D6532BEFAD6A9354
2B26C28A9D9D736D429C304296090F66AF3738F588D612DEBF7FA7DD4220A61C
D00F1BB5284434C917AAFE03A6BBAA3941B1056B6A3EFA631A9DE24D6E9DD8B5
26EF02EC5DDC3040E38CC2FA9F6EFE382FE4FBBBE7EEBD2D0C6FD2C5B3A41F00
08BEE50D97D2C3D6D004AD27CD4DE92D89F549D7C9959A0017F9F909E698BB12
7E4D543A7B128893D0D808E5933013A67DA0E78383EA858AE2A1BBB996C90D0A
557D1A0F97D00BB653C274848D0B49375AC07EAAC1F39A8CDAC4722F9EFBD234
9A572B8D9C49904081F5EE889665BFD5CF095DC10B658B1D2ECD03DE2F234B17
4D8B17FF27457D09F34E3AEA8B78003042DA8581975D4C14CBD9CAD608045328
4D21E7A6E9F0D06720FE1AABFD0D697B6365AE4DAFC3A88E05E97214FD97E281
20D8A1373B617E061109AA0AD371AF1987D9AE31AAEDE320A0520A1F095275D4
E9C6C475E9975FE2FC20D0E397EDB7BD229082E178AA6A6FCF0A1A038732E38F
7E37270241205A1E1B08F580E612EB64C4DC165BD6C64C44F44C208B84C0C7F3
CF111A7DC0B91D4BB0C8BECD16F1512AD2F69615F48D4050677787ED921DAF71
2A0135F35B9B1CCD769147E7A4D00F27C2E1AD8CAA72945C94960840005C7528
27F9AE2CC60088FAF1ABCADDA38D4EA22B3F912EB2DC12DAC3E890DA1F075E84
FC2FE0B2A3698E3F7166E15A9FFE7EE7B8FE92CF64E7E6A79BDCFE3F44CDE174
513001FEB070116A145FB3B0272C619E6A3CC8A3F602E7D0B639E2FDAACE60D5
A6009CC1644BCDB9A47BA7F0BD089F9BED1D904E7C6DD6BE703868758CC19E81
DAB955BB114FDF5F688DE08C84FF443BC122E310304907427C229938838A5454
CFF7A7DDB93250698AA0AB99C610D5739BED2629572529A19B0C080808C73007
08BE33F3599991D07DCA2785F52A2D9587FDF9FB095BFE6125C41C1EF08F815D
A9FC81DB308E78F05DBE7F262AE102DC020C35ED1F2F85E0B962B2967A677BFE
E847A8F50AB34063E50A0A05DD71CF004087F913EE0CF4B5284CF8FE9A2E99DF
6BCE0BC5F8D563531062B5F19117BC34CD778B057EBD29C3DD113D2D8A626621
778463D1287DB8D742DFE83E847C1720B47420F1C8B4AAE9F22CD6C76650A7D1
AA9D026CCD1B21B70D7FCE2E4C2ACBD6A361AC8026558DC3FDDEDD4109073210
DB92D6168DE1D9C33139E956AF79A217A315FA7B7962AAD680278ECE63C3448B
F5C2A651BA10469159C8911F844021FAD8EB29845025DE74A792B3389C249A86
EA1764EAD2D65F03B4FC9106B4610C16C97EC9C93466FDEF6E41F8C4CF1DD88C
50A2F6FB0CF63CDD5FEDDF536A90DB58EE30B33ED56B35AF4D871CBA7F5D54BB
399F7AD87556AC4B2DF46A79E76BC9A21026B5AFA16C3C57DB545CF8C748DD42
9C3FC85114F9806D271AA72073495CA295BE6933B1441A8253334C9FB1BA385D
79739EC28346E30F68F66AF1EFCE9A8C95E447FD020938E02C10A3347D516A08
D004B567793B3917C4EC71FB0A9C2DB0C2F30AED4EC343F6FB448978F58EA8D5
269BADB658908BBB0DAE7BD18E01314194A8D526E8D61539CCD9463C68299180
2075C8AE72E7FB4BF0203DCD9CCFEF19336B13B81B363A7D8859EC2DC27A2920
3DCF46C4D38296630AB077AD96270F0C2048CA2112051398DFEDF0573D8D9104
5389AA77C19171B22E3D34293A98B1B422D93FC7B19A19D7E1D95D49E54FBB28
E2127A06C26FD439BDC79AF24B1E51A20F41119742F4E3281AFF60FF78E65D6F
FCC2C2D56AB22553001E833160B5047931CB24F3DF7F49D69B9ABC11CEE2ABE3
7156EC48C2532054CE4621251A287D12BFFB2131781F3234B3803A4FF311D78A
EEE8FECCFA6183F750C799A8E80923EB7201344B23A1D8B0D625F520920702B3
9B46C32C799AB4D33D2CD6D855305C3AAD370B0EEBA6F87BC92CC7A3F7829296
DCB0F684D19BA2E1760F73F58522EC6FD339BA67EB314266BA9F1FD4D5835F6B
B7657CF2A0A2951BC9E072C0C1AF20D681702745D81B88208E6816770C93BAFC
0CD2293012310A50802BF2042E8835311074EAE9ED878D047D3CAB2381245451
88DFD681702745D81B882339AFC82735A1CF4D1CE19E46C61A0AF4332C928A33
04A859D98C2AE3B0DF0C1360B2BFD99F2DADD5AD8283DC9CD1C81B93B844F4D6
35520B2269035CEDDCB3B5518E2C1C1B11096363748ADB403A2495B3D53C4E90
874B15D889F41783A3EA4EA466656FE8721A5C6BE598A448C9272EA02E66EB1E
A0DEA60602D6153A670D00266FB7345BA7A2F05453FAE1D2311E6EEBAAC514A4
2B46541BCCA8323B798C6D3B8930D7C3D779DE50D50FB3CAFBE398912A3F22F4
B3113BDB5E2BC36B8FF68B24CBF7D79A6F974915B838EE89F05DD820578DBEA7
E3BDA2BE4024C50C8B5879AFBA7DAB4DD0635346554D16CB650CCF7751A240A6
16073A9F1E34262FCCE584AA10ABD7E9C00638DC06904F0680A8048B59AD93EE
9AAA8BE98438C6183E093DB16D953B78679A23C0BD615BDCBF3B5BA481BE014B
62759399EAEF8B4BB1CBB26A53901310676CEEB2EC4F37D2FED84DC3206AF06D
F3306F4195D35DDF81018CFDE16F37C7B58B6AEE2B56D12D33F599194A044C55
E21E9D187AD9CA260CDAAEDD0DD902F450285D595ACC5B376A425B37F9D9CC85
30B6C1ED9E4F1C10281CCC98E0D1C4D5047D4BA97D901A1D503D7B9E6CACB70C
5FA5B96078BC1DEB158CFB707F08A181350D6EF2BA778817174AD09B9C92F21E
559AAD015A3ECBC6773D4A8E05293C88179956E369C418B77A92E0B718668A71
C7D6B094B14FBA78D14931B4D1566B478E0D9E6DDD321D51A2E412FA202D41DC
88A30D3828EB29E0B32B95A89478F8C8EABFF56F5A09C1257CF81E56651BF157
3997E08AEF740A455F3E1C163D57FE05E7CA830163AB27FD7C001FC6302F6880
23B4B5B33BE92A0310DD612A295B5B72491AE0E2CF7D447C1B6A40A3AE997242
3C51C16C0F6BDFAB854748172F646CE344F4D76996D0127E23FDEDBE356E1CA0
55F80607132B66A80659D1E8011A2C6F184EEC7C7E614CA588BCC95C23200FC3
221F142BEBBFDD58DA9D4689E5D207751DE0BCAF73ED468BF58A186BC6BCF43B
A455DEF3CCDE1AA8FCEEA48E815FB47A57EC73E5A4C4385A2F5AE58AFD4A3364
A47680E82D0E1772753E04311775DE97A802E45496D7C99530F426D5FF7F10BF
D4467BAF34835CAC34C5C0677AF2B3C473C5EA77E3B244C14AB5A245DD8787A7
83D08A069FDE9003CCB87CF1C4757B78821D52A03F669ABC8CCC9C7AC2BDE2F6
58E07099DA3B71E6EEBCAC80D17024F4F0FFEAAD16CF75E9C06B9D593022C17A
C8734181777CAB9BF9C20DE216B3319E23FBE110BE6274895A3FF937C6CB1882
1A811552CC7B72E43E34639C248A2A6CE65ABB4A94800D73007B4F6060FC2937
DD6AB422FCDB929D94565781BB77FF203C063E252CBF5A12D572721B5F946F7B
C232B84112C1A88BBFD5F134F4974AB098935575983B743D597766C94041DA68
A11043DBCE995E7867954D2CF55961C0512ED552B37D8063F5ACF719E5F6F66F
12DA59625C437D4C180DB0CFE5C8FB8FF538B1093E1F9990481264023390ACAC
DF7E603304077B139B5F11BC14057875DCA5493CD69B4380D32A7A87F0D17FD3
7779E82F47ECCAE0749E97B5CD13C38604746D826811F7C8B663A9376B871A57
E6EF028103BDB5DF9E7D3F4A4F87101381555294F65A8E3C686A3F8D65AE50E5
481EB898AD834EC65107E430DE2E62E8C1194AB206E3823CFF7708F7D78C26C1
D30E3B6AEB7EFAE67384667C5369467F0663C927DACBAB9737D011CCE9F0EACE
9F97B5911158713114F79D4DB71C472FDA891AC2744F8E4755484C073F981D15
ACAF54AFE9A9008A616251A86BFD4705006E4AF46A848771EBC0694A7AAFC805
06B00336285F6CABAB72E7BD0196059F98ADD1ED265E96E4352DE80CA020C752
34FD6C574117146FE57FB77CEB986AA1C9FA2BA8C45C94919231A51D25C9203E
539817CB0472CB805AA9A6B5BDD7B27C047D9CAE387378FC232393DB32E2A00D
B9F0CC0FD934823271837120F2A13D7BD5C6118E30484E2971044E7021EF83B1
D328C386E13F0EEC37407D44468B5E27C4A2496B5ED750549C0238926AF35775
327FC5C5AE70093518AD9000E3CE315A4E18071665A39BDE0EE7368EA1DAA264
9DEF78173384DE6ED387C051B641383D1E637D899BFDB630A8409629BDE3F089
B8367EC0271CE295B620B9E745F4A05BAD737B2A2EC8BB9A8959A0E13A259D3C
B47377A99EBA1F9EE3D8D12E98D4BC2114A4BE40B4F5243B4982C503D49FCD50
08E8448ADB78D43F071C647F99018C117DF0B2BD415687124F18EF6716B368D9
B0024B395111FF2286A875B95E950CE999820A15ABDBCD9CA636723A64D100DD
7C66CE6F1B457BA89C4DBFFD88AC513E0B07D6CEB2FC1048E824D87501B5369D
B1C94389DF02CAC58C1BEF50462E59BF1FCD59DAEAE142BD2D4E912B80B49357
6E0891DA51C599E10ACACD6F9A07B3684E46E7D7CB3F24C7CFAC0CC95021DF41
F5BABB2B6DB8070A4F3EBE2116D50CB7FFF1C167EC360688F5269CEAECEA0500
A1E37C1AFF542133868010EE23C94C0459012F203FD61DD9BE8F5906465A49E9
63B3FEEDA37DB82E63BA2E5D206C7F6299C49CAB1B3844FA3CE4F785404AC5D2
0F8912226D571A18CA48DC1A6586DEB6D302F8913C6BB60832AC06E4A3F1A61B
11727E311D760A1F9672BDAD415F4B34ABCAFCAC2FCC33FE8717D9483C3D90CD
CA8DD26EA6B25B067BF784BD3D8A0CE8DE1F408884FE98C1383EDD3B140DF8D2
76745C88DA2EC25B75C01085E9FC6CE00204AF7959BF2D966705D80FBF09FA2B
EFDDF91B4766FB91947CC743CD6637B6E3D52454F7C7425B6901476738B002FC
42139850ACD990092546AF937F0BE8B4197E509F4927641511C5A17854CC24DE
67F7B766485310EA9A9B88EA924090D1CBFC4ABAD1F5FFEA86E9AE215C79C1CC
6A1C88EBB6A5F4AF5E70B13F6F6CA317C1A7351FD00A02EE061CB4F460AD9C33
3DDF5AEA23709BB667545DAE84A4B76A65DD7F4C2FC1BD83C432BB7CFA94083E
1630C801CC25791BA4CED3A6A94C8FB201C9E18668AFFE056C5FF626C1A840B1
5A1B11BD38059A4C12D55EB7424FF583C132D24EB3F46C7B4D72201FCD020F8D
B32F5ACD29421BADEC43FBE482BF2AC5D42F6AB08C51234A87D8D42B543BF4D4
904A9DB221D6A26F83828603A745468784B7F3091ABFFE8E8BFB5A609F0CBDE5
6745219717B3D088F9082913773A08A6567F812747A6031D07B6460AA696EE86
80F72AD122D14B6D6CA60B1F2A679835679A9F84B87CE63A1021B0A1895306C8
D08B0940830186B286AAC2CC7932F017D6ED3ECBC400428A279ECCED5D3EFF2F
F4BD7C970E4315D069F56424D43916E799AD04298D971EF7EC0426EE926FB26C
E338CFE5F50CF2937BA69AB97673FD4284B8D14F4872A439CC804FD1A47B8D8F
A5EB10E25BA41EE9124C48BE11B77F7D00AD989DF67305D3A251D1A607A5B5BB
C5E1DB6A0DCB8D0CF788A0FA47E31A57FFA78AC78EEBC9FC68AAC0AFB8C0640F
4235A2606102198ED89B9258E67A7224A4407BF6792C4576D24A193B41947777
FFAC047CB1E103DD35DC762C859BDCAD57DBEA349465832765B86046AADD8EB7
05B6CE72AE5E6A2D7CC83709E7B1F043D9B2AAB1BBA3E92751BF4083B295E46F
4C3D9A8E9EE0D6FC35E245F700BE22433B7494A1286004A1E58D5834F928EAC2
44CAD6FA6C270FD424EE4004343402A24E6776FDCBB2742EA6632DDB8B2D8CA9
72455534CD898A2EE5DEC3654ACE617B6F2F761AE694105ACB71A11C776391B8
FA4438E92AEEF0BF2AC8AF46D0339DEEDBD48EFF2EA4BD68A5B8EACA7A287CBB
48C561EAD1AF652E42295E4B5DBFC7B980FAB6AC77AF90111311025418375FBB
09DB7F34F072E4B04E0B4799FF851301BDC31198D30DEFA88A0633B8108CB555
236A14368F9BEF10EC0C46F4BEFCA79E8620825E5DEB9673894CA9D7E303BB52
2D20F91AB973BBA8D26DDB03EFBAC85EEB91A62ABA6EF344788245856108F8E1
9DCE904CD39DE18B88453D0C4E9DF81B2CF16CC8D9E67963016A1C77555FF8EC
6F39C81C5A9B589423FE8E386C646710BCF518C1B92FAE3EC2CE003245CD099D
44CE016458B114423F70569776A23C0723DC47BC6EEACB2B99FC2CC90D816164
6AF1B4E859D84D50B004A7EE85F3A49416670915B9EEBD5FEF21CB1244B88C6D
380A1B63AA077E58DA1004B15AF6908F243B673EC29ABDFC6722B8990F570D08
26E5433C25A5FE8968FE5DB4282EB7D1B85B203D71DC802866F884E5F7AF4E5C
79529C029F278F612B880E6C0D430D1D80858F5CE1C414D709C1BE6A726E2C13
8AC9AC0982C104CC919D280441616F73EFF152EBD59359563E4E498DEB47B3DE
081EB2168B3D1B42607647F6EFF89C97B5A01B4C5A035E864189F8259826F363
FA856BDFE6C72D9CA6F9C7E02536219A4504B3946B09383D81DD3904D85C32AF
4018D631818E1A0AE690E4E750565C6A63D4E868BA31AE79D3432312F8E8EF94
71F7AA5A5FCE33CD2BEA504C976E945512A38F8096C24CA17E70D61E78B3D6C8
D6FFCB26ED9010DC52B17C1802B3B2D454B2A62BFC379A48A06E11E57D7B2C53
7FACD18F19CBA04421D8A4631EE275B83B62D4195BD05545B04A54FDF2CB3FF6
66A0EB387276C69F3E71E5A53F2745950461448F3DA9EB1A47F2AB39A3FC9E26
0FD436684182C9B8FD83A99CED30FC1D066C3EA0554333695BE2B2B18966478C
A1E13A16BF7C51340B9C57773FFB718C4CBF13F9DC35C339CC467E4D22C358B7
33712B9197536D5BA8611C7F47BCAE3BFFA9E2A00F8C0F3266FE3BC28C1DDE65
747AF8F5643D441C792E662C2CC8D20E7B2FEC571623729CE14FCBCE484B7F55
A146D8BD2A38F7C07680D1A9AD9007EB369B2A6B80A956735284020E97B3CEB3
02886322215C3D8860A508795CFFCBEAFDDD7DC740742D3E421F18FE4A3D877B
221B0727107B7CF39E05810E65F566A1C695F8D501537ABE3F15F5FBDF877D78
FA32A7CF62CD4DD8B065A9C367BE5F50CC074C98C189C334C577F78B283C5DF1
BE136CA0E13E10A4B31B29DCAA3984CCFE734DC86FF098DEEA0A248016B940D3
A8F1697B4F4B5763E628A466731CE41B2854E7251BE2E085671644E889CB71E3
7BAC2C13BB200812BDD001D2CFBA62ABF0533F151B569A0BE14E361B541891B7
8E0C530AFA5FFF62F8FE26A02632ECDFD0BF913D2697A4B5B87D1DEFC1BC0BD7
DF733F07DED0FF4F9086F239DDE63EAB225F2857D63D5CA74B5F3FF6CF40DB53
A552F5999A1B500D357354164DC008CDD674A19F38BB8CD76583C605038A8FA0
AEE394CE83436E9945383FD01B9530C7333F9B903268006A99F5B0B9C60C10A7
595A3FDEF5A78A41E4BF5384AE0E66F0970A4099F55529BB528DAB42210FA563
2C0FFEF90A864DFC8050FA52A43BD093520A87455633663995CE6137298747FB
DF9B6D3DDED36978583836894DF65292F0BBD05A4E26DF502BBB968B61EEE2DB
E4E428F10D6361548940602AE0AA7A295EA4EB39FF1D17405A3620270BF01EDE
1BFB64EB7CF6955084AA74B9E8459ABFA31EEA92EB52EF994980B921C47EF745
92B6FA0D4B1951C648D1F75FA0C7E46A46B2BF96C8EBE8FECCFA6183F750C799
A8E80923E993AAE8523E11CEF846426006329D340EEB3E41D99EF12FD3CD91EB
213A92541054C05B972D78A68657BF6ED1F4BFDB27007903DAA149088143F1AF
BC0E85D15EB6A459A08F09CA41D28ACDABBB8C2B2A3C9E36431D9EE9ED999020
B01CD2F176ACB3B40C2AD40F13350F70A046732B115C4E8026D233EC0AAB9022
A6C6E67F9E62416D85AEDB5A78DB866EB200F60801805A8C4D880971F692346E
A5DA9B6FBAD028F92D0A7C89305D2E396A57D348C8699CDBBAB318BB72913810
1F8384D7183883808F23EF4AC14C42BDAC9617AD31DA8D1CDBC4D20F3F418BA4
17939172074C40600FD67B79A8EE5E0528B365B81BCA25DC1D0D4C3FF37F2521
E7EDE4696CA09440902D0983B4EA885CD9DF121103BF80775281FD7A8B4132D5
C35C47D639FC201645CEC2174D0E6422111BB81D4C8B5B1DE06718EA3286BBB2
365138869D666EC10BF1C88AAEC1A55A459D3F57504048C0F210D1A6B83F242C
D7D3BBE4559246C9FA712D7711E6462FEF6165B0143AC59698E084E5A72B86A8
820EDCBAD52B8C391B9272AD31963B379EB1559F77B9DD072CD64C3B048E3EB4
66D7EEED6E00DD3B183CFA64757CCE0BB0CFE5C8FB8FF538B1093E1F99904AFF
928652490A31EFB184F781387785659BFED08DED24E434D98573336D5F16497C
F076AACD1E69F824581A91E2E30EC3FE52FD3545E8853A6A8343DDFFB840F5E2
0C8806D73D94DAED2909813121F0ACCB72A0FB54AFC17A2ED5AD1274BC51C67D
CFD8E886857484E09333F26EC047B16014275309AAF5A4C5E050CC75AEF32776
B3A29543F526B92CFA68A927D2D6F8B4ABDDBB6FED5048600778C4E66F7F9B8A
21A3D319F5A2C3548BC3C9CE8F5A887DB9C8A48595E399ED18C84F86A7D5DB98
6A59AA60664D2B3CFF2DA1552EED275B1B6443D5507F563A528E1E6DB60D88F8
D524DC50EA94E931CF4859A76D6205027A35B28C8C771F3B74C0ACC8DDEBC0CF
FE5D7849D734BC9844749FF7C02F4CC8CB0787E20624CF500757712F7A57D062
A620DACA7750D7EFD51E830EA429DAA585F70B5D1040054F2BF3F2A0AAD96571
2728417DEB91020450E7DB0A8E981347E21C316C918797C4B949101FF665A780
6D89E7739681A0E5273A9BF938E6AB16B2A52ADDF6EF861CA2B6BD49B44A0EC4
6AD2E8F794C151C257CF9BCA17A2D508D809FF461106D38A5F42EB62DBAC95A0
53B2A38C80CB0D5520F6080FC68ACF427F7B09C61AEE0B67BC491273035EE652
1D41AAC9B1A9ACC5F02B868921A1F27153C874D9E7D1F2FD32C072BA4D82DC3F
1062E543EF66B98F9F45C2ED71955F3F321192903A4F9FB2A08B48360A2F4C86
3DD60FAC84A5D33E27382663283EE9D309C72DE267794D6A060830BE729498C0
147C5B77224C103909C02130B506FB4732B136ADAF438E48FD16EF420C1D801A
E1CC3071BB8EA01F035C399EDED6AF7A70BF27B19A170DA0767B6C0A51F66AB1
54DAE7900C218542AB1F562B205191673BE8DC07AEC284DEC07925EC6F2C26BD
DAE0294BC44F4A5BBD6CB72301B0ADA3A44868B78687774923664DB8CDD1210C
3242B4017C11A635E09D7066AD4E54B8072927D0241DDAC2F69F99C2F361F092
77C8467852C6167A41D9137E9542C692F9E5A139A6FD5A64D6903A23EB4F7247
C1544BBA54D01D2B42B3980AE7CE89485C5F41E675B238AEFC6CE2A1D9E51A4B
61F5B691F04E526C85C657D1C6E550D9BA09C5CB3FE06390D32D8B1042DE5834
23A2EC4D219FD964D4FB01E6220B001AE1A142EC970409266674CA23110FB41F
88304290CEDA8D1CDBC4D20F3F418BA4179447036070F045637BF6F46DC6CD4F
EA8E18E3A6CDB35E8E468A1B62C8929FFC1FEA0F312854E772DE956ACE0CA995
B7BE5DE65590E7C217D43F798EE0DD3FC02D26B276628633378ACE7D3CD04517
0F95D6191F3287E32BEFA87A839D70015EFA7FFAA12B256EE39F1899A0F1A13A
E321001D5ABD368FB7792298859FDCFC04820E2C57F585DA96CA166C0047D28E
14AA058A34FFA56E5DAE5E432EDB4222EFC2A63E87293390E2ED53A79B75E175
C64DE59E00E9253C9B160D225ABDE2A5529369A03D501AC6601146907D83D768
0C6CEDACF572324DAB9A7B6FA299812BC828B6E0B9EB9C83FE340EBE8F03A38F
43D05FD1B1DF59CDAC54CAD5EFF289A9B7D169B36350F6405A643AFA5FA54A1B
D687FD91FAD6E45EAA03EFFA83E84F9E953A912BD611825E99124389F65E0DBF
66CDB26E66879D869EFEBEFC3DCA6A8D6933DDEDA10171D4281080BA9F50E917
85711E3B419296237C9DCFEE98A7EFDA898E95F774F78F0959D682E13C4176D5
E5A86ECF2693940C90625D1673093CFD71FF2DA588399B10AF8971DD6C9A8993
94FF19037D8A673AA447EB75BE531D3B1B7E41694B03D9959B4266FEC7816571
2D78192D10CF9C166F966894FBE80A900AA27783C45CED390EBAD6D893DACB09
DCED2FCDDF7AA5E402A021411BFAD49CD62F83C6E32F6A21DBA1C204D4BD2FCF
4A5A0B93CC99881FDF09A9379E3924A26B286DB76B9F56167D8C0F3516C416BA
03AF61F982FAE658E188BDB36EF4B50F77F5A4AD07FE07EEA9F97EFB002CBF81
8A2B50712DAD0A53BD9B9AA3BDBC5FEC96D9AE9E3422DA16A6D082123A6A273C
184E496719A54E6030D04576A763849DE2447210C874F6FF9A95D8526E02D446
3AD45667B53A1D027129777BB56802707822DE85145694F4D6DA385489B60ECA
96559EC2AB0A689FD7A9AD35E79BFB6574BA23C5BC8F67C41E14CDBC3A206057
99532BAE1FD33EE749DC5CA4C868C094BE88B71855F6282481DF824F81180C3D
F89F1AAEFA49BF6F1E3384CDAE27F49E9DD53956A4B47759B680D45ABC17D942
30C074F160D43BF068C10D6F9AFD5F149516508792883821BB22E6B2271613DF
7982E97287956C9FFAA6A1C76238C4D8192B7963829012EBA17B58B154AF8543
39C59370DA9C9AEC6A83C30A70A34323D56D124F73FF91CFE5273B704A1EAAAF
6E9D46910539801393C3FF55A96331BFE725DD4D7F5438D7B87EFE37BBCA049D
CD6F8E43E60A0BFE64BCB9257A6D6C19DB0DFE2937634DD0B9B612199CDDB4A8
7DBF06DFE56AC88BA4381C92831BFD61B676F4FF319CD64546E560F1515875DD
9162752C73293FE05B5383C49AD96E100EEB267EEB8D7DC98EBBF55011AD5710
635340105E022A41D7A0D523C06678F931663CAAA896AF9D4FFF8AA0AE3DF700
E40C28EFABD4BA03F60F0C7D018DE4AA3D9A44E2D7AF48FA2D631A940A62BEA2
F092A3E45C380E879F1EBA09F3D11260F11B602B9F48832400850E2EDCE10917
24B0A06962764A671D66EB451DEFC390EB33C21AB0C2F48F82F9C6336D351A69
B88CB3D6E329D73961D494FDEF9E3EFE930AC07EF5549AB1D587C464B81693FC
BC24C0033AEF18CAA77C3E1F216F33D02958474AA95A6AAA2347EDC8E83A1771
73F2A93F60D8B8768E8FA6442B793D291590A381B143BD48B95250D72E01FBD1
740F7B3ED9A79FE6FD1A5E16B3A6395EE76EDC73CFF744AF97D7CCF83084CFF0
D019F1F131BD76E748078A88E853BD9A751F6137DFEA833004F468947318FFFE
992B3B2B1C8753E86C5FC40BB41394D9297AE0F532F49A93873CE97AE2F4DFBB
748488CD1BE8D856656281EB2D210E0397A5835504BE0F327FEEE42B483BAC09
D6689ABF61B74965FE75BAC7FC7A6812DBE86F3DC693E6A3105A8A41BE553D01
2754A6D029ADC5EB01367274B59FC6F2A799EE15D2122400299E1D502C4FC51A
EFECB5313B7F713716A217722C4A06C2AD4CFBF4328BC54E15C66B9BEF2A7B1C
DF40AC183179C30EA709E549AF3C0128B036D82B1A9F8D9EAC5120BF7BEEE925
6AD518B3D49E24589D3D46AA18829E285AFDE19C788B5C2BF115C29D834B54B4
64E495144D01E56DC807734B35CE28FBE3996E7DCBA58B2BDF073723D92AA3B4
EB58F6EBC3B73DB3C95F1BA7E3806A1534708C378F40466D5AC1DF4BCFAD1DF9
6F82FFCC4145600B49D598C4D9F57045BCEC024AFFEC504702002CF97B0F8E59
055A7A457FEC6C9A25BBB0636B8E4CC1591ED81C16A8E8B4138360A410A6C781
7D55874870992DD4C818EB9DDD10B6D5846434F37294723C825B0D6141DBDB78
A0491432D70D1417541EA61390913108145CD80D64677C6CA4693F04B8E10266
D5BBCA10B16AB2E4FAD33AD7781CD2E584B528306AEF3A87A3AF742352FEFADB
83DB6BB55AD5A89F1A7CDD5B097896A83F008B1FEF25A6D92459F4FA2AA4172F
EC24DAF9FF77FED86AA628A5A3979AC926713FFAC8CA4D51A36EE65C2CE72A0B
A3BFE6E729430FD6C921EC68DE41BF99512921346A87A21D705547923E85D991
317CC895794B2EE280CEFA8014F04FBA8729D40CEBA3FA90A30E2B8E781E4571
3A3BFF2BAE001B07895F0CD7FF5392E83FDF9D44876F3720A753E5ACA959A057
65FEEB09CBA2EC9F81205AE2771E3EB16DD6DFC0DA7351D2D4AE90BD966808FC
1C54E5366371735299FFBCEC457657A6A65406015947249332D8E159EC687222
9D81DB103633A6E33C3E6D72B13D6D1D96FA21AD7B1C806F4ED2BCE9A413BCA7
B1FBB24E3BC350CC68E261FA07D02ED767B9C6E4ECC184E94C4DC225404F3F18
CEF3934C194BDF2CD1B15B09C17883D478875A66D04AEDFC0E8E2A0985CEC6E0
C1946627D0C42AFE93E08C6B3EF2D62241601D4DB2DF75B125F5537650893FD9
21D33EFAB10B97BEA98F66DDFAE3BF71A5FD30015E62D1E3797D73118ACDFF3D
B384323A388E151F477848C44E03599B8AA2894DB50BDFDDD66A801D6CFEB356
7E152C9A025B6EE3A13A3FDA386BA760F91CBA5F5A5C3BA859887FA484A3BCE8
8C9C806C99B80F3D42E0605A9110116BAF971CB6626B8D48AD96C990B9D95FA1
F21AD448FDA5083CFA2A5F140D8342F8EC352745F5FBB6476738B35E68478FA6
D07EBB2F326D24228854BF1E7E171BE67C38AAC6952E4723296E90FED802D1F3
5D2630B7DE482DFA29B3897C01C43F9F6817014BD2E412098CCB953EC622B4B6
8F42B1618DDF827CEA2C32318791F46AE94EDA23881F08AE0D5B321317625B61
45E19406AEBDAEDB312FAD24E1441A2FE0E8E9B58E03F4CCF42255F337E6EA7E
47408D4E49D34625C2311705AC3500B779052BB701348EDD0DA38D05E1FC2004
DBE4409E46B5A0C5697146787A65B7C10B222AF8451166B6932A3817A1BDBE97
B4C4368300C67EE93843C280FAB65C54852AE2ADC1CD28161F5B563C86E0DB15
7CC78E20FDEACA657A7ECBD02772F61C590A827686E8668A2088AA13F8011BB6
1AF8321664FA673A4226509FE3BCD0530EB6F73D82D73238A60AB0D3CE3DF27D
18D2C6FCDDCB32927088145E1FFCFE24EBEE1D2C3A11820EE66547C546979963
D212611DA9E54AAA3E87DD021E77A09B4763A921CF28A4BB31880AB4DDF89A5C
8FCDBC73818015D417881FE9E851FBCE81F238B12B680C7190054210EBA0FAEC
C2FFD57C957388218476E84A36B491CF5324B234B7AD11899B24774D879EBFE9
441D3870514D6CFCABD5B5A624389203E039B403612A9998A30FFA67245C7BB7
827025E9211523C2F918602DD662A588DDE57370C4BACFE3827B6B014EAE4280
4753EAAD1711F183C90B14D2A9ABB0EF37DECA99962D5FF3180162D25EB096A3
02D12692206DF42CC5BACCB8FF8ED6676E96A4C506A8F0F00CAA024F7DD2E55E
E432530307D1FFE34FCBB58A6AF92E2B21D50BCB2CB382D8F1C8B4AAE9F2213F
B1CAB8D2D1E70200BDEA476F02E285DEC08287E6B350662256D158D8C7DCD2F7
ACCC2E81871A160FBD10D2A8CFA1276F919648186A0F7EDAA10170E82FD77B45
16E256918C9EE0893982180511BA9CAFD3ACCB53B14FA35A0C2B62F1D49B407D
E09DD4E824A84D8C738496AED573CAB3D00B0495D0DF7D3AE088D3049887F210
E0866983248CB9BE3BD9007D52EDC516EB48845ED9EC42BC9CF8B287FE2DFB96
51BDD4383C30B0554A1F744CF1B0FE1E61A0E1C3A8343EB64416F0CEC51AFFC9
6C2B2FF23E464EEA52BAC44B7FB8E1E5FF8DF7B4ACC1573A530FEAD6DF53AC95
A9939EE653DAC6F7AAD1263C9D8A294250F97C6899E8956D403748796776B773
32CFAD1888AF2141448E0B84363D80116CD9D17B7A8ABBAFE9C650F53C149397
5ECB18E043F26F2129D0585DFF8AFCECF9522D473093EE407FFAE5ABFC706759
F2C7E7C31CC18DEBC20A1C961E1DC469F209E86A1E139894ABD6145E330182E8
7AAB73CEEBD96340E37801E70BFB0F5107B9D13005AF5A3C0D35F1FC2E32BF5D
4650BB83F61007E502B0D36E94E8F2B72A37B06834A4B37D42725FFB21B142F6
1671DC754E81D3F5E6F70CC941C540E95EDB9C9AA7256BA5E1DA98875D90E4C0
24C8343D595CDECBA7798D1584AD613ECBC37D749397B218BEFD39D98545114B
325E8ED3991B4B1865EAE55671C4A5C33779E6B234563C2EEAF7DCF8098F1C69
0CC834DDB7B07069EDFD55C5B9261DF99E816A04219459B46D07F767D23604C2
68063A15DB24CC99DE2D2ABAE3D80F38871AD412B05A87C8EEF466811C9B6C13
F885627ED9E2B5ECB67A4FDEE055E639023A4948F971B5AD8FF0619691599BB5
107E266B906379B645A99B9AE2B9A2227C0CFCA833F2348E90B9E53BB67ACE32
E417B04E7C869BFC7FE9FDCB8D9C3E2EC916BE263464F78625F2D69E4A1D2E2E
91AA7EFBC21954E0953A0DA68277D91DC3FD8E8258BF6EED8A3B4D1F5EE42B90
FE60FDBC6B33E36A0ACD4B1B2AE7B331D7CF652FFC090933247880717F23F676
46B91C5C308AE9155443E819A5290FC6B971D1806917A56C7DFD2032CB404DAF
10E4F30E348D5E15551F11D044E0454B585F63061044E0392C28C4676DB110A9
323F7B72F90BD7409B8F0EDF357B0D0EAE82D17E0F1E877ABED0D161662EA1B4
1D59B3047D83DAEE7D80BF2EF8296A7F3FD9257FAC2ECCD0F2CC92E4FCB6044C
27EF6312F23E9EC0FF78907E1D4FF5BAE58070A5F642D5B5DA87278C4761E027
ADB5EE6CBADE89BFD2D5D0642744D858E67B24A4DD190F328E8CB3DD4A0AB60E
FD027C3E1DB2FE27545C64B9748E268DEC9FB63AA9DED1624B9D8D21A0DD03DA
205A57FEF95FE9CEC0F8B1A07064D13F617046A1041CB2F498C50AB1FDC5009A
15A0235A1508EEBFF3F96D3948EAEF977A588471FA854CAF701B789639D36122
C0377FAC52C6BE7AB902E27B9C88F9BD9D15D4B33611EFC27B9F2A1B770DAF32
8D2343ECC79F555F03D9B34773295CE6293F575AB9F05C73877105DAFA3F91B8
33EC38BF49A86D5104F5CFE015A6FD734657ACB2BE843E515BD9045A0F2BA12E
F3054A2D4D2000BA7FB8CC2D476B6D28866569E766D00564DCE3037C72B4FDB5
8BCD1B9F9CEBDA588162D4C750E3A1C39C4C217E082AB7CD20FD0B33BE30C3CD
02C1A7E432CA77B89D7A2689F36C5CC2CEE3487AADEEA0876C52DA0CA5B20BA0
B38A9165E86A357E7C8D2EB541D686EBF6D3744E8248EBC1BC68ABA94C884939
2372EA72CEB3830FA3D5861852B4A42E219288BF90464C720AECF49C1C680FB7
7FC21110152AFDBD0B501595F4F9DE07D7F1E1AAC4F8759DFAE9815E47DB5F82
F64A0FCC467C8726BB3EAC0F1E0742EAC13446C362AD6B51941A5D9A6391D439
3300B32B77423A4C2FCE139D9BF9C0AEE7B4B0FE65C31CEC0B9D46320DE8B396
3444884309CBF1ECE3ECE2A30F76EDDA6B3E962C045DB5CF3496542F05BE0ED6
B8FBADC55963217C9332C2745C64D0A51DDFA17DE07880BBA8155EE0A244BA74
A1AF7F47CAC0DA09B9853491813C2BFD69825231166D82277C731B9DF6C94C1D
023F004DA0B120EC1437B30CB3808304F4EE2E68E06B2C7EADCCDA0501281B38
86DE9CCBA562CD59A5ECEC0BEF0C10FB8E5EF295675B750A10BC45F2B205B2B6
A392A0011E8BE9F0F2D4AD237188B2A37455238C54BD977B5A83281924C8281F
631C2B63FA6AA8B1662832DE7349396ADF0B5DB04EBF6E466275144BC0555CDD
F3724581753A28443DBFA4CEFA956A584B380DAB3E3DD254219C21866E22D935
2B2CA30A99F66E532F4B0234F513ACDD2ED1A0A050F48AF2821E6A508BAF2EAA
30D5412E82A6D41C1E66E689ED347FAA3412E4FE00D78D13A6AD8D0B659F98F3
E1D54F85019A33F31B83087F8B2E6EA97EFBE5D9CC7F3048DB4324A8284C76E4
AC3CDB62DDE451AB245F6A1571AE67BF42C5A6627C2C41062D7C7A468DF3C6F6
93B1C601A3DF65551D22720D59325242081798247D3EFE8BFEB189401ED6820B
1BF48F48D386011EAD2BFF866C61E0B219FA3B1FBCAE5B908F93DDD3BD12588C
5FED6EADFA91FD5DB2290428FB8AB30869446B6F932BBF96DC621F2782DC1856
6C30C0CFA217C2CCC2C62635463ADBEFBE7716FD8E5E2543C25455B6B81E2E71
C55E5EC2F60B8EA3A247B9B07C10E995865185033D342EA04BDFA63A7BDAEC41
C705786A079352D1636DD1C90DA31B39EB1A30D3AD896FB31138A631DA53A51A
E267F4933DDD631E955AE3E37CB5C23AA9978CF82610825B48D5FC895F84D1F7
591192243211CBE4E950DA747D035372D6FF66F3FC06B54AAD9F46C877DA319F
321F3709467AA27A9110B7618A03F99749B1E6ED78DDE45A6C263F779C3797E6
F015343784D76C26D3CC2DC13835A1E5195ACDEE03AFEBD0276087BF0402EC8C
0D2E7B889C9C1A1528C274061863248A2151818580853535ECDF572C87EC5FFE
E630DECB170277BEF40827C12B3533188ADAC36DE19861717EC799866D800E77
575B7D16788946200A3CEEAAB00177CCDFBCBEDF1F9B4F68B5C832C992E2502B
A6B315787341C1BAD58BBB98F609451AD05DA3B218F6EC64BC087A45834A9427
1C86DA63A1028703E9015F612678CFBAC68701D4E79F6E5E3AD3A467D57EB67F
86E873BCEC8914C69700DCA25FCA0F05F05FC73BD26085F55A83700076585FFE
94CF9A853BBBA48704F1AD7C5964548568DD55326065B64F82C75D843616BE5D
1D92FA73AB494E49D3B788695800AB0C47B6BD0706B993EC99D5058784ABC247
66945F19859A857055DF65E222494A934CD1589661C3059C428686F7B66C135C
066B0432E10FBFEA8355F8BE2292E91C1620F7A5F339026DDC6E9AFB3C074668
35BD11A27C696174856C65136797BCCE0529BF5960049052E4B33DF8D5E2835E
9BC123B4D0A4ADD5EB7AFF95913A7B49D02DDB0221B8900AC1AF30486E498602
6ABD23FF4C9F0B79A6854B665446F8F59C55DDB8687300C895515FBD4ECDC8EE
329656213531701304293EB98F2263938B8BA74F500034BDA6AA031BDF03CFDD
C3B9D68B183542812726CE004951A2DB5AA3234A3DF4E3605B4ECD418DA17763
BBFBFA0DDAAFBDB2991691C08AD7A34C9AFDE89BD00A8F6A06F862B1B87D66B2
AD7F16253298E5FE3709F664715F3E5E2DC6EEC867F32F2D787C970E67574DF9
AF7C804CDB332B73016BF7B6DF81AF9F4A256389EB4B90BB68C89FF9D3227C8A
444A03E0B2AE1A4CB4A8001844A9F96DE81CDB44F5A3BDEA027A69FD077F72E6
FA70B2C44D28C1AAE64CD5CDBD4C5C43B3ECAA9424174E729D2F72E9A34A6B43
CD367017EFDB60C4D91FF089BEFA3142C8FD5C87A8F106954A9EE657A97DC4D3
E30D37BAEC5AB02B729E771589DE00D791AFA18808F418541CAFA8AA4CA47F91
F10D86C2C686B90C791E174C817FDCAD579A45C3D97527F01F24A17241370FDD
9162C5B8593FC683ED723341C855A0A9A9E7B6E22629ACFC349ED10EDDB58583
368FF641FEFE1F85BC51B46D7DA6E073C039AD2E77CB1A67B46C485BE0D36F54
8073B32DA0F139035CC682386D000708E697FE0D1D2F535CCDACF98B76D997A8
817EC61061F22C1BE37C7AA56B1F3F5A86653FBE543E1ACD582B98A71E4D9797
C17EE131BF1F0903962C2170E39605905B9A02D2C3E30C298AF36985A2B83239
246169772BF19630408FCDE6D107AD4FEF1F567A13C7E86A176C45B39B61F3EF
9F121CC3E52EA3C221F9F3F3DF6A4482312448C0150EFB3D17F9F0790317875C
EF8DDAC865044727BA7F68DFA6AA95461BF6452F791289771A043C3C01C65E3C
57D6EF69B6B79F922255464B0251EB2CBE148933A6C394FC0C412DAED736FA4A
38D138A48ED479E9B08A762B35A85403722924064DCEE6573056AC86483D4483
56627B54FA1DCD877476C29A10EC53430EB314068B2EB606C16EFA3869847B94
390D007FF52597484A6197EA6C8D03FA4B46E37663251C8D5D4C279B5F424C1B
279CBFE32661B1BA9755462275EDC128FBF13F07077FC2D17A85075E6A9873FC
AF1A80D482A449D25628667E3324D6BF464ABBB61F4E3AABB6A5E9F370E9A982
47D3A2776C91A0473BE480A9E0816608ECB735F7488AB8BCD559348F2594C617
74A0E9BC034BA6F96BFDE0AA1E176ABC9CB304B076984A7179C457AE4423FFDF
7110FEE30366DAFE211CE9331484195C8294D317353F957FBEA44C1A903A2609
9B7276586484E4D1C904ECB194F96752C8D7C8C2C0F3AB46DFE5B2982F17BDB9
0728AD6A8C5E51632CF45AF4DD21FD7472784E89BD63C58A2034595599577708
D9EA63EE8BA505978BC34D71113B5CCDC76FE1DF715AE4A14F2C04B8C3211709
DB18CFE5790FC7DC1F209E572556711E80F8547F6DB4897857485AF4EFAEC3C7
5FC2E1A5DFB88F8FF14D47469EDB9C6143BD59CB293338319A1EBD6347B998B3
B97D1B4121C58C44CA46E1B7418F9E2624DEDD7ED5037EA812E50204E7430657
CB05A2E94F89114D9BC66ADFD3A4625A62EA80F86996A9C0E885F7C9271EFB76
450467E35753C095C7DA0C51DB0D0F524F5EB0ECC227F8825520D288EA4E517B
E017B193C0E6203B2A57773366F972E03CED56752C465ACBCB1DF48BAEDB455C
888F3A52298A56A6800AC8B523338E56E43EB53E6F9EB8743E030A9ECF20BE77
8FCD04D5D290A228B1A42702474895FC681F8C2F8F8BDAB50E290B5A29607E2D
381FD5F847F7D6F06CC3DEE1252AEDC7C6C797042D55E1AC5613C3254ABFCE2F
275A7AE7665DE84AFEE9EB26502D7142A4833FBEA1E8549686031FFA9BF6F22D
9099D50C1CAB04A129E0B3E33C71EA61B2C6B8A14B30BD0111DE9897FEE2D29D
A57B6F117AD4A7EAE595C0ADA5CA4DBE6BB5E7DCA13159A046EC717C1C1CD333
6FCAC588E36CF22C3435681FF8325928328300B06BF980F3CB54E79A73B65300
B93E8CA0A66A9B74D21334938F519E8FEC632E849E80C49C5A99091CFAAE50C0
775A7D47395DF5F1A0E36602498F49F7742B65811E131AE0AFAC60C2CCD4744D
8C2AC10D18E98E2A45704FF64EC4DBD116974510E8D5E6E25B7130D70A1CE9E9
628C866A87A7696141B6C3252789B11B811D8FF13EEC4939D44F15B7EB083524
B0CBED469DADA183308E30473EC54CE2A4E803F605F011F72B72147DD4332639
05C032987A61F3BDB82FE3CD9E88CF0C149939C07CEB7381C254A62771E47FB3
3A6FF3D5209EC5B90CDB793EDBE253417DECFD2B7D4D3A01BE7B608444253AEE
0C6942
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600
(/Users/Matze/Dropbox/Nachhilfe/Aufgabenblätter/Mathe/Aufgabenblatt 4/.texpadtmp/Aufgabenblatt 4 -)
@start /Fa 168[91 4[66 13[66 68[{}3 90.9091 /MSBM10 rf
/Fb 153[34 102[{}1 66.4176 /CMMI8 rf /Fc 205[35 50[{}1
66.4176 /CMR8 rf /Fd 149[25 2[45 45 80[71 20[71{}5 90.9091
/CMSY10 rf /Fe 194[71 2[25 3[45 45 45 45 45 45 45 4[71
1[35 35 40[{}12 90.9091 /CMR10 rf /Ff 134[45 52 17[45
30[71 58 67 1[65 69 68 5[25 59[{}10 90.9091 /CMMI10 rf
/Fg 9[45 17[45 106[48 1[65 48 50 35 36 35 2[45 50 75
25 48 1[25 50 45 28 40 50 40 50 45 6[55 2[93 2[65 50
2[61 3[56 70 3[71 59 1[69 1[64 7[25 8[45 2[25 30 25 2[35
12[50 28[{ T1Encoding ReEncodeFont }41 90.9091 /SFRM1095
rf /Fh 9[69 25[95 102[71 50 53 47 3[71 109 32 2[32 71
69 1[63 1[61 71 66 10[92 9[74 96 17[69 6[69 69 2[38 46[{
 T1Encoding ReEncodeFont }23 119.552 /SFSX1440 rf /Fi
138[50 35 36 35 3[50 1[25 2[25 50 2[40 2[50 45 19[83
56 10[68 7[45 2[45 3[45 45 45 1[25 46[{ T1Encoding ReEncodeFont }20
90.9091 /SFSL1095 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136 -442
a
SDict begin H.S end
 -136 -442 a -136 -442 a
SDict begin H.R end
 -136 -442 a -136 -442 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -136
-442 a 0 TeXcolorgray 0 TeXcolorgray -128 -327 a Fi(Matthias)31
b(Linh)m(ub)s(er)884 b(Arb)s(eitsblatt)31 b(Mathe)1115
b(19.)31 b(Mai)f(2016)p 0 TeXcolorgray -128 -290 2008
4 v 1880 -290 V Black 0 TeXcolorgray -128 -128 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -128
-128 a -128 -128 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 -128 a -128 -128 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -128 -128
a -128 -128 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Vermischte \334bung 9. Klasse)
/OUT pdfmark end
 -128 -128 a -128 -128 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (L\366sung) /OUT
pdfmark end
 -128 -128 a -128
-128 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -128 -128 a -128 -128 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -128 -128 a -128 -128
a
SDict begin H.S end
 -128 -128 a -128 -128 a
SDict begin 13.6 H.A end
 -128 -128 a -128 -128 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -128
-128 a -128 -128 a
SDict begin H.S end
 -128 -128 a -128 -128 a
SDict begin 13.6 H.A end
 -128 -128
a -128 -128 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -128 -128 a 0 TeXcolorgray 107 x Fh(1)69
b(V)l(ermischte)44 b(\334bung)g(9.)h(Klasse)p 0 TeXcolorgray
-128 55 a
SDict begin H.S end
 -128 55 a -128 55 a
SDict begin 13.6 H.A end
 -128 55 a -128 55 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -128
55 a 0 TeXcolorgray -16 182 a Fg(1.)p 0 TeXcolorgray
46 w(Gegeb)s(en)30 b(seien)h(die)g(Punkte)g Ff(A)p Fe(\(0)p
Ff(;)15 b Fe(0\))p Fg(,)32 b Ff(B)5 b Fe(\()p Fd(\000)p
Fe(2)p Ff(;)15 b Fd(\000)p Fe(4\))31 b Fg(und)g Ff(C)7
b Fe(\()p Ff(x;)15 b(f)10 b Fe(\()p Ff(x)p Fe(\)\))p
Fg(.)100 295 y(W)-8 b(eiterhin)32 b(ist)e(die)g(F)-8
b(unktion)32 b Ff(f)10 b Fe(\()p Ff(x)p Fe(\))25 b(:=)g
Ff(x)1549 262 y Fc(2)1609 295 y Fe(+)20 b Ff(x)g Fe(+)g(2)30
b Fg(gegeb)s(en.)-128 318 y
SDict begin H.S end
 -128 318 a -128 318 a
SDict begin 13.6 H.A end
 -128
318 a -128 318 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -128 318 a 0 TeXcolorgray 174 445 a
Fg(a\))p 0 TeXcolorgray 46 w(Geb)s(en)g(Sie)h(die)f(De\034nitions-)i
(und)f(W)-8 b(ertemenge)32 b(v)m(on)f Ff(f)39 b Fg(an.)-128
468 y
SDict begin H.S end
 -128 468 a -128 468 a
SDict begin 13.6 H.A end
 -128 468 a -128 468 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -128
468 a 0 TeXcolorgray 169 595 a Fg(b\))p 0 TeXcolorgray
46 w(Zeic)m(hnen)32 b(Sie)f Ff(G)896 610 y Fb(f)972 595
y Fg(in)f(ein)h(k)-5 b(artesisc)m(hes)30 b(K)m(o)s(ordinatensystem.)
-128 623 y
SDict begin H.S end
 -128 623 a -128 623 a
SDict begin 13.6 H.A end
 -128 623 a -128 623
a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -128 623 a 0 TeXcolorgray 179 746 a Fg(c\))p 0 TeXcolorgray
46 w(Berec)m(hnen)i(Sie)f(die)f(l\344ngen)p 1315 673
142 4 v 31 w Ff(AB)35 b Fg(und)p 1668 673 140 4 v 31
w Ff(AC)7 b Fg(.)-128 768 y
SDict begin H.S end
 -128 768 a -128 768 a
SDict begin 13.6 H.A end
 -128
768 a -128 768 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -128 768 a 0 TeXcolorgray 169 896 a
Fg(d\))p 0 TeXcolorgray 46 w(Besc)m(hreib)s(en)31 b(Sie)g(in)f(Prosa,)h
(wie)g(sic)m(h)g(der)f(Punkt)h Ff(C)37 b Fg(b)s(ew)m(egt.)-128
919 y
SDict begin H.S end
 -128 919 a -128 919 a
SDict begin 13.6 H.A end
 -128 919 a -128 919 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -128
919 a 0 TeXcolorgray 179 1046 a Fg(e\))p 0 TeXcolorgray
46 w(Berec)m(hnen)32 b(Sie)f(die)f(Fl\344c)m(he)i(des)e(Dreiec)m(ks)h
Ff(AB)5 b(C)i Fg(.)-128 1069 y
SDict begin H.S end
 -128 1069 a -128 1069
a
SDict begin 13.6 H.A end
 -128 1069 a -128 1069 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -128 1069 a 0 TeXcolorgray
185 1196 a Fg(f)g(\))p 0 TeXcolorgray 45 w(Der)32 b(Fl\344c)m
(heninhalt)i(des)e(Dreiec)m(ks)g Ff(AB)5 b(C)38 b Fg(b)s(etr\344gt)32
b(n)m(un)h Fe(10)p Ff(F)13 b(E)5 b Fg(.)33 b(Geb)s(en)f(sie)f
(m\366glic)m(he)j(K)m(o)s(ordinaten)300 1309 y(v)m(on)c
Ff(C)37 b Fg(an.)-128 1309 y
SDict begin H.S end
 -128 1309 a -128 1309 a
SDict begin 13.6 H.A end

-128 1309 a -128 1309 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -128 1309 a 0 TeXcolorgray 174
1460 a Fg(g\))p 0 TeXcolorgray 46 w(Legen)31 b(Sie)g(an)f
Ff(G)904 1475 y Fb(f)980 1460 y Fg(die)h(T)-8 b(angen)m(ten)33
b(durc)m(h)f Ff(A)e Fg(an.)-128 1624 y
SDict begin H.S end
 -128 1624 a -128
1624 a
SDict begin 13.6 H.A end
 -128 1624 a -128 1624 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 -128 1624 a 0 TeXcolorgray
122 x Fh(2)69 b(L\366sung)p 0 TeXcolorgray -128 1822
a
SDict begin H.S end
 -128 1822 a -128 1822 a
SDict begin 13.6 H.A end
 -128 1822 a -128 1822 a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -128
1822 a -128 1822 a
SDict begin H.S end
 -128 1822 a -128 1822 a
SDict begin 13.6 H.A end
 -128 1822
a -128 1822 a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -128 1822 a 0 TeXcolorgray -16 1949 a Fg(1.)p
0 TeXcolorgray 0 TeXcolorgray 120 w(a\))p 0 TeXcolorgray
46 w Fa(D)25 b Fe(=)g Fa(R)p Fg(,)120 b Fa(W)25 b Fe(=)g
Fd(f)p Ff(y)s Fd(j)p Ff(y)k Fd(\025)c Fe(2)p Fd(g)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-442 a
SDict begin H.S end
 -136 -442 a -136 -442 a
SDict begin H.R end
 -136 -442 a -136 -442
a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -136 -442 a 0 TeXcolorgray 0 TeXcolorgray -128 -327
a Fi(Matthias)31 b(Linh)m(ub)s(er)884 b(Arb)s(eitsblatt)31
b(Mathe)1115 b(19.)31 b(Mai)f(2016)p 0 TeXcolorgray -128
-290 2008 4 v 1880 -290 V 0 TeXcolorgray -128 -128 a
SDict begin H.S end

-128 -128 a -128 -128 a
SDict begin 13.6 H.A end
 -128 -128 a -128 -128 a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -128
-128 a 0 TeXcolorgray 169 5542 a Fg(b\))p 0 TeXcolorgray
46 w(Zeic)m(hn)m(ung:)2174 4124 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def   /showOrigin true def 170.71646  0 -170.71646
 0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa -170.71646  170.71646  gt { true }{ false } ifelse
def /epsilon 0.01 def /minTickline 0.0  def /maxTickline 512.14938
 def /dT 1864679 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1
add { /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 512.14938 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 -170.71646 0.0   /Lineto /lineto load def 0
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def   /showOrigin true def 0 512.14938  0 0.0 
ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa 0.0  512.14938  gt { true }{ false } ifelse def /epsilon
0.01 def /minTickline -170.71646  def /maxTickline 170.71646  def /dT
1864679 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1
add { /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 0.0 512.14938 0.0 0.0   /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 170.71646 0.0 -170.71646 0.0   /Lineto /lineto load def 0
 setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2151 4258 a Fe(0)192 b(1)f(2)g(3)g(4)g(5)-1497
b Fd(\000)p Fe(1)-352 b Fd(\000)p Fe(2)f Fd(\000)p Fe(3)h
Fd(\000)p Fe(4)g Fd(\000)p Fe(5)g Fd(\000)p Fe(6)p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
