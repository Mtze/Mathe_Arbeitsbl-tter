%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: /Users/Matze/Dropbox/Nachhilfe/Aufgabenblätter/Mathe/Raumgeometrie/.texpadtmp/Raumgeometrie - Rotierende Rechtecke.dvi
%%CreationDate: Thu Jun  2 16:50:36 2016
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: SFSL1095 SFSX1440 SFRM1095 CMMI10 CMMI8 SFTI1095 CMR10
%%+ CMSY10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /Library/TeX/texbin/dvips -o
%+ "/Users/Matze/Dropbox/Nachhilfe/Aufgabenblätter/Mathe/Raumgeometrie/.texpadtmp/Raumgeometrie - Rotierende Rechtecke.ps"
%+ "/Users/Matze/Dropbox/Nachhilfe/Aufgabenblätter/Mathe/Raumgeometrie/.texpadtmp/Raumgeometrie - Rotierende Rechtecke.dvi"
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.06.02:1650
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end
 
@fedspecial end
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC434AFB2D0C28359EE36A63B5584392FCCAAD696E61EC2B757A
1DC3F0AD50200A15715177C4CE424AF4E484131D7D41397CA16F94ECDAEE6F50
4993ACB7DFDCE53402EA5735B39DD765146BF85A6457A2AEC22A9DD1C21C71B6
250216362D339354391F795EAB160C08136C08B4E4D9B0DD864CF7DDAC5CB67C
C39406C8F712B2D5A78D4A1D0EAF1AAEF7173842216339B40BF0356970D895DF
1F4BB3A9E77D3B4C08F061113877E6DF96CAB4404F3AA0D2CD799A1E1ABEBD08
153F22FE69F59DE85BBBEAD7A81DE32825848FCF97B7D1CB5D8F121EC7175CCC
937A0F9E49F8B27EEF8E1087FF370606241EC1977967D9988DE1196E1195BEC8
A5E1724C1F8C43F22DF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E70A7911CEF46D4A4074EBEC25F55A638011A4E0F2D07A01A042436C62962A50
973F9AB79BDDF1747CA2F970953AD5128331F2715D093DF035D882BFFD0E0C65
4D9E97727C8B4CC50778EDDB5E0A210C9E0A9B95B37EDB25A80BF2A045583389
847B65D114CAFF0FCF67585A6BCBE22DA41D479902960F7C0D013CCE81F60F3D
DF36E91F8276940F08464405DF7352069A414D615BA09E156C449C172832EA2C
E38EA97B9A576B444E00C0B19C9E751336898EFCD4847F7B5095BACD95228E1F
6EDD85621B9643624E6CE80610BFB320B3D0914BE2359C910FCEF969AFD599B7
8545A1AA4E33EF3F14EDECCFD82F9975DCD18BC1B687408F072FA39164340543
5A09C1257CF81A066CBCBA4B3FCF3BC8D6A3496230AAF1232518D07135C7823C
AC45513B2A9911B39603B415168A1FFBED834B271794C994A3F9821E4E9B9023
B08C7CE8D31B5FCFBBFBB71AE71A47B9E18E48F5BDA5D89F2EE08A2784F150B9
180ECCCC77586E39586DB7CB534D1806D9A3A0D376856B2036634A72710FC8DA
959A66289DBD2D073A400E7CA0B870EE6EBF02A0707CEABD8D44A32F85209065
B61A9E7C56EEFE751F19938EF2050F231708623163ED2DB636BA33208269330C
24A4E0B645E707523349225E6B8EB758ECEDE8173B87B4AE6A33F17030AAA7B0
A2CEB87A0360124FD1504C60DE14C8EAAAC52FF900289981316BC60E07B9A6F3
40CECD891D8706212848304E170D27F17330A29CFEA10E80FAA7A0837A0DD1EA
D10B0A7A3F70DB740709CF3330E44DD04F6367E04C3CBB3400BA3C1943B874CF
B4B611D26EC09C0A5F8D1038506BCA47762C1A267CFB7ED277D9A29A3B03EA96
BC30446FA34F89ED1837EF85E3C6C5C9B860B740F2B4D5446B527C7B946C5CF6
25E22B89B8FF702EE72C7619DEEBDFA682FC1D1535DD82C80647C96F9D7BBDA9
35C0E086E03D6A395E393042C9A9A7897DFBBF31FF8C55923139F12B380C95B8
525768E5E232F717E9DED40BAF67F143202658AEA4EB873BB69538524C860A30
E296304807EE900F9BB05752314747A249206F030EF269333C62E7DD39FE5274
7FFED891B421B74AAF2E837265CFB284EF8418D10BE58EA61BED3D21E158EDDA
88920DE2F42C49FCAFB8FE08E81E519D2D85572B3D02B05974AA17F67A5F67D6
5938CA6AF82FAACD556F5B402358369EBE607AAA07D145565732E90728059473
EA7CC2EA99FEBE2FBE33BE77288400BD6F8DB2EE113AD794FC95DA2443A140E6
30FD6F07CB81E97C3107701687EB7B23A7F605887ED19D6F36394C5103BA4718
D58FD948CF9D1D4841FB1D207CAF32512C1BF16FB05B8772D36A0148EBA5260E
BEE2ECEDF5DDBF54A5E9B2E74C4F357A7CB82800CA1C5908F923ED0551E9DCC4
4CD30E9A3CBE68D9F2B9F0CAA54F356572399D613154586EBE39B3CF3B419005
3BF29652CC01C96FB5A47816E231C43CDF0CB9316BA6E9934C391131DB535AB5
F284507A2C3DD27E0146A664F9373643A096D7003AF4A81166B31E7570F90B9B
291879D901D163BED6E364092713C77F19C68E73C63F0EC5ADE496A007321170
0622199396019204BB15289B78E152999D4FC1D8CF70EE33DD638628155C2358
5A5AF4454CC522BC9C41CBCF98D7D7918E998943A201CCC0E61F23B87919BE79
A05758C96A2A554A9D9F8F2897B74410AE52B91F3AB863F37B7ED3B19BBC746D
0BC27A477F896DFE094DC8925A974338C2747496FC52CE72819507AB8955579B
7836FB7525AA171FBA552AED4DE2DF21BB772F2068D72A768122475FEAB7E870
68342B7AFA4B9570D26F5C38F46C98996A0CF3198421F50838EC564C8CC71721
C3B603517F8306DDD2C2AF5E6CB8A445250D0C2B57673F8F73247F9C41A7535A
B10DFBF0BC3B53C2ABFDC721C47C13F0DF5F9327113B46591FFC21622879D040
503DDE900EEFF4194BFA65197848D48CC1522A47EEA5E70DBB1E71C727C7646B
032719C5B654D2CE4A41A5CF470BAC6884A56AB644C6EB16457DB801D915DD24
D3339AB5E6866B287055B57EABF9B23B249D194BDB47904BD3195EDDC4A2AA22
E443BF1E4FAFF6FED7ADD465241BB78A7FB18F31593B8E6D57233CC1CBACF03A
54144D172894FAB5846F83D2DA07080106703352122722F1B4B14B263B88051A
2862B83585F169D9BFB8508CE94247B58663793D96E8EEA8FF89C0602E6378A7
88F93E4F20B1396B2548B16D00956F5EDEFAB022F713B962A3BE8FB6C6456660
4E1A51EA5D673B5CDDA8837446BE3972A8C86CEC9E6E16F59D0D64604B82AC00
02B4366FF0EC7BC99FBA277FC818D71281851D8CB13DE0917DAAAC2BF263D537
1B415504ED207DE5A578314E51588B443F815DC954D5A29F9C9B4CC778
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFTI1095
%!FontType1-1.0: SFTI1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecti1095, tcti1095, lati1095, lbti1095, lcti1095, rxti1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFTI1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-94 -320 1401 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F3352947BD440B27EFF35014E69B2D4A1E3E6C11
B5BEF15F1C9B9166BED773C0A7F7CC50982C77DC7E78F250433EEEAF42CDF094
ECF6E1ECF893F6FEE69AA0F85D5DF1E7EADED78FFC156E291628F8CC7804F06B
62D3BA889336AC6ADBE1B7D60480CC1B296F9BCA97DE33DCB279D6F0BA3D9A77
A23E61EA065CB50088BC96CADB967FA8D5036C8555CF1BC24BE9B5A5ADB87A0C
376E0A947BA6CE72C317012D37F8E705B41B5691F1AF74AAE195FB30F963A98E
AC0DD6DF90B9446767E26BFAB29C5137B9577FCF00D8436102AE83B626EEB40B
237373200ED0F4E65426EEACA520A1ABE781A97D898FCF322DB4DCF6BD2703F7
6527C76B8CE52F64CE259A3E658B4C11AC2E62A7850FFC2397A96AB26D8425AB
400B67D191412DC8B3ED0D44E4B64435CA93AEC6BEE702B9D3B0F59B7B62E6A1
534CE9687AFC4DCC819CC6A624392455155D18510B8DE55E94B7481F52029839
8EDD33F49AD664A57F6C46CCC8AB92CE365A0F10AD75A110791CCE87579E8BA8
401BBFC529DCF7AA05F6081653F573F5A5C64D1888F358456064948CBF73369D
4410E744F4F16C634FE8C6E0C1E02F218B069277935A3EB227108B9B7FA9D78D
563C5890384F13A6E29A14234B37B223148F9C270579849E707C6A729AB49070
0D991DEDB7A769EA9B02F440D64A25EED6E67175016F06C2042633CC89B942B3
6CDA770F069C7FCF0BF40A3D42682FE8D047848CEE1E28348C431D429073FDE3
8D38A6B788794DAF9F61A2A9D949461D29928FD4087AD88F2DB4AAA3B72C5980
EE40BEADC53165413E1FD4FAD3FB30BE93390B9AA5736E7D82773FC5C3E21856
59EC3CE70D2937B3310E5A5193EF3ACBAF58A521634A31E620C8987AF3750868
4BF4106268AE7214AB88C429728090404DD0198876495C28D22DA7E94F868256
14DFA21AC8086072F20381E85E2464C4AEF54233C91A4FF6F1AE7D8812D914FE
E39E343EB23944236E51C3C6A843D9F5EF02F93681954576B522FFBED92D2A9A
098BEED08176FB0988076C89D817DA0402AF9982CE69C01434BC24F4F4BBB7CD
C021620E25A0732B430893546D95E0066529F2381A3981955A38D3A309FC8C5B
8AEF8EDCF6CFF798BDB71D2B0E02DBDD5F6D9AD0394044E42E9B98E46628D1DA
B24B5C73992110DAC527B46B2F3A498C1D8216BBA57C400F062C78C02DE70F84
35C19FDFFD5543301C741838BAAAFF481CF3B5200C19FF70E8B62D1CA0436BE5
96BFE95110869521223FA6E246DFDC900ABC2FAEB0B8D1C2699E51C4EF67FB6E
C65416D2EB5152EB5122D2433DEA4AA229840D4C62C19E602D5906DE5CAD96B4
0D5D62AC4F5C2EAE78A1277BDCFD89DFD064671A0CB9AD88152F4F482607441E
52A0F2B667CF75A4C82B9303035995C6B240F61E353CD7684A19ABA68E09F3E2
6AA78EE8291E60DC73CA008A91F2EFD1DC0A89FD795431ADC672CAF84676A658
206E349BE5593DC6B1BC155593DBBA2B34349870A5E696419DD101770DA4E413
A9E5A69C89209BC7192C954FB733F568D6F4DF60E1F47F0B760818A975075030
0AD1D6AAF09EFA9F76843B82F867537489CF3E7A7F1CD02EB361EAF438786E58
B99CDDBBFAA7D6150343870497D01DBAB7C573C089B975E7707A6D2289C0C576
DD84A2CF56F2216D58A515FD9EEAD9DB2057549B55DAB5D725174729E1639305
A0D14CE40A576EDAEB54B00AB88D4496C0E3635EDF1A3287C67CF53607F8CA64
BA5E639035B996D439E43CC2D7D311E1734B2F2075AEF49646695BC312976B6D
B6C03641595278E7DAFBA9F70FC1F4FE8070CFD8BA89C15EF8B2E3870CEA556E
E285667D7FAD1909D38808EBD544059FDFA4311C72972E05FD4C46C65E290D50
E2BED3AC7648B4302DFF3586B336E55FE6AF667737F3CC150D1028FBFCE0D076
27D2E2F850A2EA72787D389C25C9C3F89C243705488CF16B268EFBA9109E8EDB
19D8AD4DACEDE777F2D46BC57D31CEA08D34BA326D8AC3C275EA6F718112387F
C95DF70F7101EB114A710EFCDE1906F858790FD0A427D2A453664B9A9FB8DCB2
4D7F62FB2BB51E91185005955898E74AE6DB67AD57D31056B9B3DFD8F0B35F3A
52AFA1DE2A141C4B62124775401FDBDBDEFDBDFB42EEFF2C755F099C456DD730
25AA57268128664A8F132497DDF193801C32367BE9919BD1055C3EDA7D3C835A
CC804C4588F963BB0D72A00D07C10128868272F8D6706CCC0547E494EC5EE4BC
D8B462DC246C18C21CF4BD3473557A68F01C0C99CA2CAC35CEE0EE45D7EA9944
ED00F76EEF7592DEE52ADF55A002424E7842EE90C939A917387166C1A50C446D
6B4F3DB80C2A01895EE7A79CAB9A3F3B4B4CBD2E6AAE08682596A8C228F6DA74
F40329D759678998E819BAE9E7E910C5DF47B5ABF9E15825F57D2E4532BAC0CA
783402E666543CFB72EDC0541583C5E05147330A129AFA9DF189DC438B1A1493
C6809DCEBB020E97F455A2246F01BC415C188C04014355835818CE3E5CB15BEC
3C0304B512A0DA55686399A175593C5FC0ACE9FA87B5997486BC719B36EC8CB0
4DA9334622545962DDA2D1ED67C974DC17C5108C24B4D83B5F3871ED4BBBAF02
54E356257BE600F6AEE676F2AEDEC124A1665DF088074933F8A9B12A7623E77D
6B5C58DBDDFA806CCCD6E38898EAD58C01DF56EB0E8BC41368F0258C105263F9
677ABF4A6EA92F348B2E539B2D424EBA860D3FF29FB92FEF1C8E86E79EE139C5
C9617EC85B0149324F5DE6FB5257BCC840416783BA0562AB6D2183D70700E9FB
D91045D47986D49594014B4A7DC8699768873E869644CD1D8500AF246DCA090C
D30B107D619D84375B7FF6ED91193B161D0A359E80D3B07ED077B4F59D3AB45C
3439CD7A6E0AAE0D0D45F9EDCC5B007D4D6851D010D8A73FCEBA14C3669FE1D4
646DDD116B5D08E759EECCA9B73A190D4A8470D30E9CC2AD41E0B00477ACC026
9874464E57BE1B7BFB1470FA2FB7D05438BCC522EDB6852755041498699B210E
E71FDD7AA6C8BF44B567263A90143D80CE8981BEE284DD61B29D1A4481BBB4DA
452899886DC89AACB4FD4920794884B60CF083545173C9C9FEF135A9CC966954
BF7CE6E8FE123A37BE70A2043B9B0E520E7C3E02B5597538CE3CFDE50FF58784
936AF52A337AE1A95BD21E2CB2DDA569C6CCB31F6461500471693B912992BC81
7E704A0E99582A1F1EEE16028AE4B15D84C4B7B5C3D7BB7EDBFC85491145D585
B4BAB5F16B93701FD47FC64940288506EB42D43FFD22D736D904397FA5BA9125
10AC23802A8039FAAE95084BD1BBD0297AA25492F48B32096E9B186799A0761C
9EADBFD6E6823E197EEB6FA9947794ADFA50EFD7E802FE062ADAA362AA238208
A9D1B0F81D2979604965F7E09375B2EE6256E4C5931142B4C1064DDE5F0F7AEB
2663C41EEDFEC6FC09870C49D065844E432013030605F7BED34BF377544FD09C
8953BCB8D34DB761FAB386C8099A9BEEE5BEA7667EC576ED14C836DC4ACE2F18
39B4A7B37FE7085A248C48DD46D9E3EFF4D995B4B664EDD99AA509502825EA5C
6915BC32118C0DC55E415833C72BF066D28653D90D1411E816D4314D7D98BC77
7914F71AB1AB10B501DBDEBBFD0FFE6E87144F70BD7DB31BA581CCA5EE0934BA
9A764BC3650C9A73D805BB4AB09068FB3EF383F82F86C9BDF8C919F9DEC26A68
9C4E2B6A3693799DC21F35AB0F463BC006CFF2891910C66AF42501C5DA0BEEDC
74712CB8A6654F60038365A10007A43635FCE07D0CBB2C5A1C9675BBB692A17E
2689FFCD0948B9ED9AEF4D6060D3A463341F821DEE8DFFAD0E3F3F3A440DE32B
47BA9BD7FAFE4A66A342E00623EA3C6A0A1476E8BAE8620AA247412123951192
2C1F02DE4106039AEAE823A4B40357DCA54A2832073C73E43FB69BCD78F3DE75
1E54362B0453EEC61DC3050B87A7F448D78E92250C735EC7120424154BF4BD94
00FB750F1D8A9561F4DAFEBE8C2F2E0762A9360F7B2C8DAB7E47A69E934E1839
6ED7711A90B1CCDB8D805A175BE0CDDDD8AE32B1AF866A7BF4B1D22F6BD99693
25D57D1775AACDA62C689EBA0AD020521767083155753E263A1964CCD5E7D86A
A3D18EFD237CDA5188EAE9550769AE4BE7C0541599DD68E0DAE597CB7E1D303F
C26F51EC70B0FEDD062F3E3DE816B77553198A789E72E8E3238959C8CF234DFF
8DFF95672E2E467338DD786585BA09A6AF477234FD0396B0721052784D103048
1C3216C9FAB4CAA9631BA11FC742A17CA443C40698244D3DA1604620A3B9D2D2
14F0EA8B7FD182CF9605E278C8EE4BA8C3AE6BF1BF6CE2D409258D598D4D182F
7D03CB03226F4C431EBAAFF2019E163C0134D50A5859E4C2DDCE3A664E1D4133
C6B3F65314FEFF45FC239A0409F584EC41EF792A35FAEF4BFE3E006ECB282D4D
8416FE5EEB886922B97DDE8F478CD568F121842CDB7E5DFCAD6E026C7E1FA5AC
864888174D2DFC065405B825DB5B87D94DC91DA2DBEAC73E47BE1178FFB6E55B
E44CD8B33D3D3E85CD1048F96209467B358FB5CD78FEB1AC6D70C0C2F4110202
49B84D36379F722531959BF559D2BDEBCFAF1444164DD263B8E92C5745A796BC
10E5494D5246B6E9DA84BA6A34511D585F9A583492DFE5E4051D5846B35D12DC
CC97477F8C211C2BEF4C95E17818D7950BA09C875511245140E1B90FAF278D32
B646961199629001BE2A1AB943EFDDD331D9B57A530221B7736E0C2E80C3CBB4
9F76AA390EF745D54EB054F8335F55CC3025958275F202B952383D90AE4EBFBC
5308F5243E7DE709C3CB008E0051ADCAA1AF8E434A7A0F8FDA3EBDC519C2D79E
C99FDCCB5A73A2D112DDB9B43E2FA851CF8C19B9BD164349B458F4F90E90F1F0
84844FF1B41912EF76B3D69AEBD42C9FF312F1EEA3FEB4A7D2688025D6A6D678
FA05EF92A998797513E1EE321C3B024D980D4A5965ABBF9CEF2AB60915A4443E
C14C8F37EA53E087158444CA4DF7197A5F8DB894642096B3D28834CD4F7908B8
48A0B6381D85D22CF2EC293761032A5AE70742CF961D67BF901A4604D059C015
9E8C5E67E8BB86CE6B4C714A11BF61B12FA3DBBFD9D3BA53873F7E4A94CDCC0C
67CA4FD6FCF0CE21B44220443B8459E7C9BABFBE56C8770EF802E1D6F12A029E
0D70E01A5A080D2EEC6BE6C5F1C047BDAD0138339EAC90A6A4BCA300E5D8C9E4
B320AE537E99C464C86643D542B31F175724D00C0383C502F04B1B6642AE8AE5
1D6655722EAD3839D7830EDDA635611B705D61C428BF6A82BBFDFD09B13FA639
680E972DC7B27738113F1FF8D019DBE38EEE5BA19AC90FD6A5ADFC8AAD2A83B0
2FAC3C4FC45050FA5720B6EA61C8CDD9758100ADD9CBBB97E1459B016D82A640
45A2585FF58D41D1603D2F9B22B3AA08B065E3444FC2C65B6338056BF3055FD8
C51D100D85BFEF9FD51E984BA927F75512667EADF738B3302AF6853E5EF0F117
74FFC12FB17422B911491BA13544B7F391D1CFFCE79F2D98C7A7D9183C5C6E20
0957EF5A7677B5D8923748B24D078D6D4ADD904D3AA5CECFA496769586C03FC9
6F5E4731C58240A8CF6F1A61CEA7FA9227574B541E4C49CCB1D6CE47635601EF
69F81C64375CC7D531258FC77EA9A5A66E5C53FAB4B33475D9C3A3D8A836A5D7
905696D5F33009CCC2A3B9A71C6832CD50BDD780DDD76F83C21194D8601F2904
FFDFC472576307AEE713D42212D38A605042E9D1C3D61DB2A1ADAF359527465B
F16D0894F1D1E7FD1F1150589B50B0A236F5CA2BD13A3B9C6AE1D47C1FD20858
74DC9EF3593C942539038F0CBED5AC5B90FC438503492AC7CAE0A878CD15E41E
C5140AEA2D43AF917D8D87F030003A22C07698F5410F995D3E91C363CC73F5AE
9A215C8FC1470D926D6E7D4C105DB43534B61F74C0E7599C676FC7A749160011
958DD64DA337648A509E793C5D6ED62F12D244DBB7B678EDEFDD8D58BF8FEAC4
F0A4DA23D9BEAEA69F00E597A3331E55C9A1609ABC7906E1C4AE758DC8D79717
44DA02F68551416FB37F78DF6E349BE5593DC6B1BDDE1AA84CA2D3298FC4FA89
C76833DEC9FC857A8BF599743D2676A06243B24137C66F2E8FFB6B6F076C555C
FB9DBACD469FC37A174B31C6852621BD1A449C165FECC0385283F6A3B0896043
B74D12DDE546C0CB164E8CA7E85BEAA6DC682C2BE5F05BAB96F9085EAF0BCD01
0F11E81E14226345B12F46BBE6C5C54D087A369327802DFF0A29945D6E03DD34
534A6E029A414E2D38F1A3425B0E8A55EDED9A50B09A395920444B7792A467B1
39E118D43C83832F227BD254633BBD952B0703556B36F79864A88CA9196E604B
AA0FBC555EAC7D6217A238C36CF97A9DD83D03E1FCFF585633EBF67280B6CB2B
A47A5E63420C85A7CFF5E2D1F86434479279EE16011C8C1A01AF7B91578BBF99
1E948F1E6C40E1B4D6882F3093F5E85631B99351BAC0B6F87D6CFD5DA7A965D7
54C30476CF9BD30BDD3069F9295CC342726463DCEAD5EA7A2E391DC5232E4235
58DC3EA5F4383312A7EDAC4EF0E1433FB5D4DE363457A3B44440DC273CDC0202
BF9825BBBA6F0EE721CBD3A299D17B181BD1E5054745D89E5E7CF8E3285136F5
A8744CE9AA277B8DD53D95601BB338FB43EC903AAAADA7E8B59C3BBD5112317D
C02DE70F8435C19FDFFD5543301C741EDAEA50B80AD13C068C03F974AFFC8101
AAD1DF5E31B5DBAD63CEE42C1981EB8E1965D8FE3A1B4411106895AA84AC2CFF
3C2AD04C76BCE90E0978DF1655AAB1FBCD29DBF29A2189B4CF9BFE45FD13E8CE
2AD4D564D7DD13DDDB4F0AC066CEE9F33B540E92D08FAA1957F94CC63C614E7B
AF20D77D0053FDA4D0E455FB0E33D57BA5F3730400301D1AFBC88B306A2EC947
1EAC9F2C02709DE357B240CA0A9B9DDE4CEF2AB20C54AE6DF8FA843132F44561
F7D83E22555C164BB3AFF1153D85FE62F9DA6DC4972C27A19844EAC89701CDE2
6BC1D459E7FBA0B06B3F26F88065DB1F067A37EFB050332ACE6E53FF04993A08
1D70AD9D1D26D298EC84EC4C9C17C39BC64F7E9C926241625425CFE64B843F17
0B1F069ADF47FB988CE2308BCA2AFFC49C5527DF3EED3C9B1CF54831588D2E79
1154D153CDA8353FF24A48188ED97C548151DD8AE18C410ED9FB49C0B5A4984E
5D647E66131A36D36D7C8A94C8D3ECB6BFDFFBCD76D8CA664E7E61ECE318135C
8375333B009B0AFCAF0B813658BF7CED77BF35A0C7CDDDA665D47B02FD6980FE
3A4AEAA273A07D10241BF2152327F765E094DB35B3D7944ED1CD7266AC6A07AB
8899349450D4DCF85357107BAEF2EE57874A7345705B70BD772F4F7D594107F3
903E14A647CAA484F977323FF7E8F6543C5A2DD98D5B02223D1466A34DFCEFE2
A89830C9B6C8CF71B595868C2854B7C6FC4D49CB8061654EA2771727EDE0A842
0923A086014F3AC293653F266B625F87396220A21D3A2723D77016F982248B43
16B4DB0E34F4EEE140C891ECE93275A3DCB9B4353ADCAE63427B07FEBC5AD0D0
829A251F5657B51B636BE53938736CF32569B56687EF4BB9665C6BE6BA4120BA
817AB49AF9F2F60445268DB63E948E317A4C2D8A87748D6FA6DC2AF740B1064F
0718A52ED5084AA2FD1F4F26E1625D6CB0A36B46B1A4AD5EA89FD62A998F77CB
BC1D6C481FA61C447832A15B8F1B5AE0694AE2C413FF211D3BAC028A60E1DDCE
E0ED23C82117C0F37BF23C5265E652C5F070B898F4FC38A5D7408264DA74E4B6
3310DCBE91563855D38CC060225626E521E4361017371637DFAB7F41D824FD8E
DEFA7D9B8BB80BD5DBF2BA7652756B2BE0F9A0BF651E7E8E6251748D3A5C5226
4DA0F62D7CB8E7B79405DEBCC5AB0E3A25316C22465F9A65E4C9E9432B3DB333
A63285224F450994D23BCD7422B724600C77D424B1328DCC4A3DA4372ED22C94
4CF66C9AD3441924CC860D4D43F591640317676F064D13F1F255717EFDE079ED
D6F3AFA7767AFCFADC96449833512FD225E5D4B24CAE75FD7FA4F3ADC54AA207
8B632B8B4797AD193FB2104BDE8DFB06D252EC9D6E9C1B565FCDE0F128E1BE0E
A805B8BE04D971C7231C4AD02D4FD206753B7CC731752B86F48DE6A92B89603B
648DF00A267F5A9873AA7878934A6E2C486FA4A8C81E93FA4F4C6B84687FD6CF
B7B03F874142624E82FE3E98F0F164CBD17FC383CE76578C43A710A148B9B392
FAD765D219EFA89370B86D1556BC15DE3FF06C87398381ABF73F1DE408C2B7E0
EE5CA9CEB548E54EA57F452E3896BCA6B1F2AC4A31660EE294D4961963B468EA
8934122F4AE889EF801ABF8140B75CF243EEB429A4739366D26BDBDE628B292A
0F2FBB488B77A80245214A12F093B7D84A05DD11C84A4F2E9541369E199AF43F
6DF446974C6340B9DFC8EFC9C962547C6762FF88E61625CA69BD30F447284148
153F80BEBA54C416BB8EA7D02BF9622D0E52D8829B5CF57B8C1BC58E7FA9D646
3F5A8A8783F49CF037D6AA84195F70C6A55B61B293AD5DEDF0222CD195DF3491
B6FB6867602569BAC63044A81413293B004E276F31CEAC75F7A95632AA50E6AF
21ECB1F931B95F0AEC70B39B88803C98F0079B760BBBCAA56A6D192A347B60D2
7EC35CF4152C2972E2689525BD879F6F2F1ED1403EC836C9B4C6523687C5F746
098C1F6E7DC11B95954B10C7D3E55F65BF2D71EAFDDA10B61D47B82F5ECCDAE5
AE3841DE0FC80BA0713054FCB60B527A4AAC3ACB948D56ADF59F5C3C81DF24D1
3A744CAD6F69BAD57F836732714AAF9003C10FA55CD68B45F26EFC7F16D94F29
668DD97D278679B0B5A1BE4201511C2196483CFDC04538050A1AFA8C970B9931
0912F82C15F455167F455F1D20F2A3B515A6F567EA83F0986EA1EB1DCD823478
11F7C3262CF327B50EB05B4381720C265DF0045885A91DD6902315A3E0091A82
FE62AE06FF96C0AEA7FE970E55A25AA5A69D99A0BBBFE3913E82452B592895E7
934349AF127325E88E9E867F335A483065526FCDEE998336D079F34F8023B15C
9C9913B0C2720DEBB9432F01A550980BF6C8CA4E1FD029568B15AB6E119263FD
591841195B0ECEF799D966D67132DB5C681FB21E9E409C4B5B57B1A5E6E94DA2
33359CE120DD892D270E4DF700F1ADE983F653DD94599B8D2CA43FFBE2020E0B
31C37A3C2AE62E775EA52B26532BF06EF31A4368603D692A57F7BBBFB4D4A244
17595D8D821CD7FDD6A6C17FB8E306640DDE1AE69B3F433353E571F38AA4DD3F
4DC44F3F4D9B7F37A36A441BB859A1A77426B4CC5DFC5A672F5C8B928720C66A
524B37D72D32E9740AC98407F58964B19EEBE1F81EAF5DDBA6A5B619FB729E38
52C71FE1D42577951735AB30E65E5E6ABD3001320C647191126CED53E3678D66
BCC472C289DC70B5A6B6A9AE9DB022EA1D8024537C5E793ED16B46EDA4D6177A
DFCE0D2C3205A1255A9EDBEE23A55FBF61096E7467C7C6BBFCDE2F5586557C55
E72733F4F95E8E5B9278ECEB87E87F9FA03C6C4892F1A4ACDD33F6BADA440F0A
E401CBEB5E5E148C1A4E120182EF2103606247E509FBDAF4F4CC09B581D263E0
454C53BEEBDD136141D4ED3E9982359291598BD445EA221538D8078967099F22
5B070317E6C5678B864BF0A6E3D0BDD11969C3638F0B8FD51EDA3082F430C130
B0B79664130B8FCD2ECD46F19F1EAA7E445E1A4C1F93E8E77B17095B97C0BAD0
3725AB50AA654396EE74ED62A0CEE97F71765318AE3209864263EC9EC6DBF3B9
D6585160FCC5A9ACC746314C6D5262A87C2F6C34F3EFAC1FD949B7EEC2606AB4
763B8E6BCFD1970E0DD4CB2B87834E458B66749217B6CB521CF77281D2E07F6E
5BD07F1B97C3D6AAC538A4476872BFE5E7A4B90B9EF3BA4D6B84E9BE81F5020C
9C6D8A7B02AA7F14375F62BFD0CFBB4C097DE0CF391A42362BBE9F6864EC7978
F14D1AEFB4EA631A2D427CE377304783DB33DF941BF1D5C3686DC28604677977
5AED3FB8BBD4E186ECECA135786B9178275A03E9459AF2DD2B9648E61B8A881C
8AA86EFF3D193BD3ECFE39408FA4C886317967BBFDC3B0A09767B0EDDF1E3705
A7E9F84C3D09A3FD47B8B3123F1B6B6A6CFB72CA41ECC81727528710CBC7581B
0D5E16A1AB1A2A134EC9DBEC4061FCA48A130CC0964AD14295C3C1786622636D
7244C8D0D8A5FAE233DE593276B50E82A0D26FCF2CDB36B1D916560376C2E716
26447468201063B1E386E6A2738D2A61D15499E9F2B1D346F644A8126EADC481
3F842B00551CC9E03F8AD6236FBE589423B942D9D2530344CB65987E98A44D4C
EE4803CEDAC8410286B1A256101389A8A638CDAC659376017ABC5A6BDF5E42A0
6F81801BC733DA9D596845F1BED0EEA915C8E476DA4B7C3CBB9F019BCE5C6796
FB54A771754C532DB28A2B3D078CBA25E8CE59ECDFEAC71ABD17E9FB627A78DC
3DB1807D7E8E38C3671A6DFECF80F53E503F892E2AD637CF1F4898CC5D4B4E75
197FA68F99D15236205171F104B24D38BBC8B83779059C29EA8BC7DE665CA6A3
32D6DB7D9894CC4675324B0EB0C08C1916D52E31DF5EA1B984FBF893B77CF013
47412F127A684A24C75CB605EB4B1A15DF82CB5F80C7440A99B587EBEFA36A0F
29CAA3AF558B259704F03C36602608F42F45560883B5A3B581EB91D8C5FD5F54
9FED4E719D39E5C3E074469B2985ECEFF487828B995818043B77C7BBCBC0DF36
BC9F876A7730D984FBAF9DFAE66BA02C0512FF541A16FBDEDFC1AE74E236A798
348585261D4FD4D9F110CEE189C750DAF36A5DD43FDB9C87E92DDC5E0D5217F9
F46A3FDA5E9D9C43E6D20691B072DD4D1699F8703CBC338DEA90CCD4EF93EFB9
B8F9AF25F6D7AE4251F84316C85A4E041AB3DE64A2B5BA44E7333B50CFEC5823
70D17FA0AC8409532C515EFF90DA827BF8D4070BAE92D8B7BF0C520CFD7B2E28
81A8D9E7C243070D530E83DC3EF37E193C353608A3EEC4345FBE5AC52A4F911F
FFA39DB14BFB3C820FF07329372A93F35E5CABF73E2B96A5C557F409F7296877
3F78378CA104CC85D7A6D87CC981A251DC2722026264EA6B1C551C04E3A18A4F
1222F898D5F9FD416ADBAEFA245D2B8AC53C60CD071C47F6E34CBF65494B57C9
9941C4367C1948F4F4AC188253CE5B0124F1CFF0FF1F0E3B0DC0A6744326ACB8
A636FE4BFCBA1F74E59045747E0DCF8DC850BDD3275B848A5C65083A6524E151
948950C3E836134401ECAECA4F3AC8A719CD9C869FC2DDA4F25C8C4CB4C3DD6B
B5C1A8E13B9874F39BD444ACF028E491BDEC6B5BDF76849AAAAC75F367EB6616
0A8FA50755AD8EF7B3C906C5F562B5AF7CF0ED004DEC817ACF8C4FA407DE697D
7B64805CD83FD8FB5D87909D8BEF8DF8459F1AFCF2836E0DC5A6FF9F0382E9B0
9FC599792AD66C0F17DF1F04FF1F7D94F130E5394BBBFE6CD5E96F95EDC4010A
C0B6B1D7F33D5B4AB71D6730136BD0F36832E00CD8DE86610385925B8F0799FA
72BD22790DC5E417A6AFF5FFBBD3268CFDCE299070D8D981D110DE4BFC4D7764
977B7C9425CA10E69F746B0E411F596E86D22213D30B5DC2178BCCABFC1BB745
875C37F4EC1C41B40C7BBDDE96E9AC7E1B234596DCAE22FEEFF042E3039E13D8
913BC6916105005C6AA22FC8771FF12CF953296AD2F449A97E3C61CC5AFDC82F
982AD4E2BAB80B793971BF8AB3B19DCCF734C7C4A0BC90D4113331F9CDE54BD8
F6B16BB8A2012AFFF91C47699B902004A5516CDE56FE7A7162A328A79AD0D6A9
D442D6F6CE756A133410B06E9F990B9FCD99447E0C516DB7B420A748E0CDD0C0
F80E6AE4E251F1F99C5D43A4F1D6DD0F02DC5120E7034E1FD34C1601E528FA58
EA6BEBDF5ECF8D5AA73B23CC40477F32573BC70CFF88D2DAB89BBA7956B45AA7
518C66DC86B4DF6D611220052113BAAFE0B32374E5E67D44D8941A9671AE7F0B
068E26764496A225C46ABF1BE832947B9CFFE21ECA53806157DA378B4444C421
C2C54D087A369327802DFF0A29945D686CC4F5E858F4CFF207E67AF587343AB6
AE4403873319150C6CFA0C4EE73CAE558AC236E6A64F1BC87E4E958D1903B48F
6451BC8274F38B2550EB931E0A1E0F2E0F1200126C00BCB091E9C72B745AF32E
B6F0AC1522A7943DBC9E5CDFC1B0EA8AD158F294B197BE594F2AB19D4E567E4D
E8BDD0F3E0EAC400F4E12981289C8BB3D3B38DC1D406418F2735FB47A97302E1
1835F983079F564F6ADF1B7F3686AFA1863BF5F6390B4641F2700F77B734C1E3
E8075F686D9FD0A49893F8E1C3339642CA970357FBA289F6043C0D2977403C6E
D6255DDCC1966CF2DF0109811C1CD2BF3AA14B3AE79FB3CAE949DB069E5C664C
606A810E6EDD81671055F19F4663A47C06DBFC574D666AFD48E92EE5362FAE19
01332D8DDB7C15FE2D9C0AA88D7A755630935C42F8FAB0D292E84A0AD107C511
E4DF45CDA2E60DC211257D4FB69034EB7994DF1ABB97555C452610015B9AF8A1
10A06C659DBEC28C44EE23999C93D6CBC3E324A8EFA760DD8842A2B6700A0106
006E84D21EDF9047B11407EB1174B35CAD61832DB7FD0B9C228AA887FC481D18
1F566376AF4D646EB366B3C465857507A4E38F0AC2431DEECC66B63AB537B8A6
F387836F35EB3575F453F4BDE0D22024308F2A50591F19938EF20015EC8538D9
1FD6BBFAD4D4FCA116CFFFFD84D931F37432FCA554E66AD90692B49F789DA195
BE053DA38E53D23F15A776E25797B8E6D912E1BD329A536F61169344F16D631D
6DA80B304325E3CF06E9B2468083435CE79F361A1E5FFEEF71A28E214B3BFD19
886DFECE9A496C86706B8107F53BA5D6D7BF10F60E851943C1783046BBCA2774
F2773130C1825DBC6FBE8886E0E298CFC60EC5366643D5C2C3D58492171CF88F
EB29E968BC6846A689975A0821BDFF7240CE0811225DBA62D4452C5D4796283C
DA43CE0B6A1BF00393B02DDF53DCCBB20B24E56DBB752A58CF6C26177BB17440
3B9A94299609C0414C7EC9947372ECB27BC27CDC3C7D5365CEF1DAEFE2A018B3
A468582B3F7E7C0D6AACEC7A555A029B70F4F099A2D1D7F775BB024FA95279E3
AF3C5046DDFD43C1D0E4C1A6FC4A2B795AEAA75DF43B15FCD672EB3B04BE5F5C
270C1B01B5E65B490E99D75F55E0464E5B8D34CBE784BF7D6FA959014F0E9A6F
B78B1C5EEEDBA02655019557A4A5B8514531733C7EF4ADC46E9B7FB75085445A
66B08CC01AC9E1561406DCD0990EDDEE2C8FEF8644973AF79B66E00F09DEA193
13E987E4EB06372DF45CD1151FA393F4DB1EF76BFB3AD5BDE9CCFCE1A3065C31
4C27FF32A5D47717D82EF32BD53EBFC797DCC473D81C56E5441A2FE0E8E9B58E
03F4CCF42255F337E2A069C30917E579888926441AB54B25635EEC307F8B58EE
81341C97910B766B0D39E31B824BA6912379CEF50DF2BAE3647170C8B4FF3B9C
4FC7CA5341D5986EB0A40B5887EC5D9FFC367708C2BAF67C1A51C1273298BB84
E74453BDDC71B62C2776687500866CDAAB6D518EEC5D8C382B31943816E86332
3C86B07E4F363255EB92F6A69012CF9F1649B1B2AB6D4CE121AC3E3B33C3F21E
007B629DA7DD0EF8EA89875F1BA72CAF5503F0779B5254DC1B8A7AE053F8BB76
E9A59193F9E51B8ADF515DDFBCCB55C9C03043075E0A1B4A14A60CE45CD07064
9CF209DAFE497D63ABAF28FA6AA80BCBE8A09BAE1D0A75C45CAAECFE622E2B35
E5AC3DA919BD99123CE66D0ECC211ADCDB811ED4C507F8952D76AC0CE331349F
6B4D4347F1E55E05DBAFA8EDDC7A59305D602FC366877A7912E21FEE573A4BB6
626FA1CCB08CEF668572CD3018EAFF3F0BCA37BE98FA38C76C805721A0DEEFBA
50B4EB4B76725F90A185CAAA042B84927E25836004633EEF4CCFE98859CFD804
011E7884E8541A21A0B89314E8AE0DF539A07DD108E16AA60CB0F9BDF60A3866
CB2F9551E24A024EA37936B9F7EB0330193A0969B0CC233DCEC2AED884DC7088
B6E7B1F61B3020EDF59FC7991E30E538EA282C42DAC2EEE8ACA58C0E7056C9AF
72F866C3CF541024C4E4EE396DC888049499CAFA740CEBCCB0E7D9D5314EFEA2
3EB331187241702C42333CCFC7305DAA148B7E2CD22F1631C263E22444D1F5A4
DC175B2820F473A00E424F4422ECC5F69C4B6E1D0B583CE26971EB8F857FA0E9
F604ADD885B7054999E1C8DD01F514891BB3E492C6E9B90595D133E1F4A303C9
8BF99DBC61AA18BF04C375EA3FC250564536EE0D9E11985E7393AFD886991E88
5C37A18059EC3ACE295613268FEB35CD52ADF82B24AAD8271D3FAE1D5F0AF192
2658D703B1359443E2C528A02E13A44EB28D9BB301D51A1D0F258E096AFE70E8
02663A93E51B719F2E68204143BE17E8AEDE9474419AC653E47AE7570EFA2847
8ECA87E7C0D8F1E782A3ACD5F34209414E329D08AC9C56717F73674677043CD7
A203D903D590D3C07A891246AA10B903905C553DA080A7B4D27E51684145A3D9
6036B2FCCCD0B2065F023B08F7D87838F62A6CAA01A20DC79DB3DBA38FB775EA
73A89A446696282EDBA417E3273CC0A079E5554640DBF1C74A8F149B636C03E4
83A80D47A482693085432F946F685A4FEA2FFEC41AE2B7C2BFEBDE09BF219941
C1B1A2E9F0C252818F856FFD810FF2A58817B4A4B974907E6A664B28A2ADC97C
133F1E94B56918BC0D8DE43DA42335991924D148CB671B6DBE5853A54E1F219C
4FE055E6F0669C3381724BBC432E470A472A1F7A016ED439FE987D39F4E68DB6
BD2B90DFFE3ED7840DC54CE7A34CA71278FA3E4FC1014295FBA2F4AE017B8591
5CA903C7C9281DACB56EA39D00EA09E91037F30CF4B8C0B19C5CACBE35026213
098D47ADAB343906DF092588AF26BB034F561453FC99AFCD07011C011EA6DFDF
E117EBAED663B22BC355EE78EBDCA152FFEE0D40A842EFA893EE341549A11E81
F477D0C3BED44A2D79E2A882F6E706B9CB919E9B5F60213A13F985073C410A0A
5D8E3FC2CDE3CB2CADB6C7954273E98DB00ECB145C9CACB70D4C06637E8F01FD
3A1CA96334384C71B9407FDE0D0AA6330A6FF3ED5B41E875E5187B871627088C
03DE2B67BE5B206883CC78434B7BE9CB73113F08A794E9CBE589540AD1CED135
239012D9DDCF50F0EF0C2148458327A48F3351E933AC1309AB56B84BB6966ACF
3A2EA77B2380DE5E09DFEA525612A2AB3D9A37804CA55792E6A0CF283AE44DB9
BCD88800634F13CD87710CB93FDD5551A98F338822ADEECE87738776104AF45B
FF928E0A767E0D89AA55FBCC0A0E08E38B8146A5E7B7BA489B2438D01FEF514C
A205BC61E9685FE4EEB7AEFD1C96FBA2A7E3EF9944D1A7D023C79EB972EDB0F4
C743474905B1E7DFD42DDCEF7212A452E7B1CC3DD7CF803CCFC1C9FB7E8C5F4D
2953316505AEBD5DADC1B84A54CC6C820D6F5E2072D2FBC5D75A7FC59B02F12A
ACB8EED0C80E4D42118BAE4628F7B6C86EE00204AF7959BF2D966705D80FBF0D
3330E33ED144284274D00CEE7E0EBF297531196DA02B21BEBB87C4E1D75C48DD
000B449D61E95A722896208CF85A5CCFDD69CA8AA3675D56F810B40CB1CE9661
537A84CAD1376D1C15F3353F8619187874775B6F2ED1F12B5A2186DFBE9E8F8C
025D7C70D0C7905943A525E6038A71F00234920B956EA59C1E62F978A72B986B
9FA8BCDCC3D498B192E0F8F46BA7864A3E811F47986CC3B29B9C00E87739724E
8F6CB769AFC565394929A729891A505BA717875648C0FBC11441984FA89022A6
C6E67F9E62416D85AEDB5A7DC413C38604746D826811F7C8B663A9376CBC439A
9803CD4EF58D2F04263EB863D5E2BA07CE4B7064ACD328AA21CE547EA714C852
C69B91C0BFF6E811A8097DEB8A1F648E340353F459C70D71A38005C26F9B88AC
12725B7B3689F8072D9C581C9DAC737C05B0670026F25502F6888A5478BF8C75
32201AB3AADDE1C5E5B97DAB9A15A4BD6C8EC20D5CD2F480A7C9E7ECC8B3B01B
9B88C659B876C5375348219A06F4310DBF6768D98EBE8D61CBBF937568EFF7A3
9A5833198C0391556FAB1D51BC79F5989026401145ADFAC047984E2B33754B45
1147521E6B740311BDCE9CDC6ED1533FD047CCD51C522441AA6862A659E8251E
5D7E24855A35FF92F1140C295BD6336EB49D654B456E636D325E79F2B48DD0B8
CE6D2DF2E112513211A340D7690925B0AA04B230B1DA97581E06D4CE5E25D21B
B8291E4BA70AE4C2FBBA51638B64D930B506FE3196DC7994F3ADEB8D0920E6FE
0549EA08E333B192B1CC0D45C7A4FE583886A7745A3B64BE76B894B073B92684
84937651C0159E8C5E67E8BB86CE6B4C714A16A4A63B9A5DC14E134D32D74493
377D6B9286A882C87D9283FCF90C4EAAE6F23C1686B4C575788080388BD3F177
CB73C7BDB04B55BEB022EFC139A013037903C98440DE5B385A1578CAE73AC761
7F61204CC6D61EDFF5C451E23786D1D365E654B231727E89E61C0A268FA3FE78
059077CED5E9EC06945ABF6FAC7608BB90246A76F3B72F5895A6BC923F96157C
957E2D140CEFA96E559D73536C66BFE612EB64C4DC165BD6C64C44F44FB70C37
4AA0E58EB48492EBCB2949498A3711DFA9E9B4B5025FD90A8B104589EF38811F
BB5D0654F0817C4F0A043972604E3D5BF1F09968B4933C9D25B72B1E1637F543
AD1A7C074884574E969D16C7DFC8B36B5101F7C5AC168FE1312E586E7961CE93
2F3BDA0C85DD1B4945327633BE20B95E2AA8351507380CDBE800B60F67191E6B
EAF8EDE7CCA2C792390440D0495BD7C6F5A86BD272D2F9ADB74A79F1043C14F5
53F64AA7BC0B3A96CDBB96C89A3D0A0426C5357F7F712BEEF7B3F0B694EB8C7E
35258572B07B5E6DA78695F7A72480199C921C23396AE89524407122CA39C37D
E8DFB217422F43524E56F4744940AD5E73AFBE8CEE260B85C98BEFD523C88944
E017B54F23E754BD8357CD1B64FF13EA41CD3056939D188F24ABA4D376DB2797
1584932746E90B3BAA6A8ACE63BB8758EEB53006DBE34E767090910A9D3DE176
052BD1221FA8330AD209AB2F31A131A36BF6B8FC59BEE455F28CAF29E9DAE32D
3C3ECB2F97A6ED1313257ED0B8AFBEFD9D51E0987554DA8EDE2058E48BD0DD2A
17B7A945C7181B2E1E395397EBBD4F8CCE98A000C4A25C1C98DC4C1399F958FA
CCBAF383B709A941637BDE582428E743699DD44EB86047BB5F8D8288D98ED577
781822F76CE50166F391FDB67E3DE11E2705E4EF82134EC41A4C1E3508FBA851
DE74EF236E54EEF9B385330562477A65CCDE8F0739FB3102DB7A3FBEA8D34BB6
D0D4756893C00B97AADEF83F4FD07C076DCF0635033D8896AC50EB8CADB65E26
35DF369735C2229ACEC8B0328E8EBF054C980E39E700751C8428D21E5BBE46C5
9CD2695AF1E6D48BD6778F44B05E65CA5B79EF594185E1B8C023F7E76EBAB278
2EBE6755E90F51301680CB83FCF5F6279E0DA6BD86025673EE9307549F8AFEC8
520C293DA5C1A28004A653E838F104B83000556DB2D3EC30C2E710CA128E8B9B
51290D6AB5A6EE8BC58B8ADD033D6A0D6CDD6A0DF736C833BB3B575A26F7631C
8EFBAB22B94D30F49EED4C518F30D02BF42185E0318CF7D0CBDE60A5DF70C05F
A759994F45D3C767D1A9C5477DB023FD71495D647A2EA1213F0EE69E5163C8DA
30F989B8F242D20D3B092C99D92F3A527DDC93BDAEF84782D88E92A632EC8613
F5FD8CA44689E5DFAC213A5681E35446D145400AA4DE5BF8BE184654C6E67EEE
CC731D6E0F51A9C588C5078EE6A484AC5AAB00996194B6C5AFCB20185D522BE4
AE1C62CCE9402A35FAC32CEA67A097239599520B35639FB363111F45FE52B0FC
888C815FE18BDD09AFA0F51B8E2D2C3010927E3AE0A422BECA4833B16F5BD533
76F38B98BC11B3B58311E772DED3D1AD54C345AF92B5FF6FC15C9E5137A40933
4BAE0D240A98955B94B8F9B3C73D34077A7071A26E4A6077B3866D3FCDBD09F0
CD7CAE856D3DF516043325B54EB538A5A26374D029372D8F5F513EF6415438E6
F3D1E6E16E29B538CF6C497D0D1E75DA0DD648A764BF8F9B1F844021FAD8EB29
845025DE74A79D5869C8DF39C4E969E8BAEDE16F206873FFB93808E81E866D96
CBE0D26C27359E5209DA95582A1F1EEE16028AE4B15D84C4B7B3642EAF1F79E8
B8B0CB7AC783478AD15F410E09FC61724687EED3173E67B2924E2938B28A4B17
5BBCCDA1BF9B5BB8A66C8413ADE1FDB239187945DA4124BB23E661C3573877B8
B5445AE9DC9910271549A2747A198D85F403818E09B4766E2A21D4E6D773C225
8A0BD11B6E3ED3E6295B90E01744EF2102AF95929739FE933C9C752465BD8065
F100485F74B82077063F6ACB3FDA289F09A5729643331A6B9AAF4D5FD683BBFB
42BCAA36262A6EF48017A9BAF1D2B7E9A7F7E0C824CD219AACC259BA2138EEF9
A262F0714F19E2237AB5FC888C815FE18BDD09AFA0F51B8E2D2E96841D0C61E5
465C5F7E96A913464C5120BB85A1945E07CC4426594CBBBC246B3A9609FBE97A
440D58126268CC70650845410B2C9C5E8743F566EDAB756423433A180185FF33
0E3D4103A6A38E9FDE9003CCB87A1A51528BB63AD47DB08673FF661BCCCA7045
89D6F9ADCD7E5134FD21839B036AAE27C264E87D7951A233803E87B291F94D0D
F64B9713E542652254598167D892DA454AD59B931F344C25E008409AD901E3CF
B2542301FAC77F677800FD3C3A6D3FD1BF8681675F4AD33FA3B65B8EABA18E26
E068F161468E0E7587020F108C8E0D4A3F0C3CE8A592881297A5E9FFDDEBA823
36E53B00A20CE0A7E1E97084966301CDB57D800AF844B9D58EFE7BEB994EF5BB
C6F11E9AC04682962E7F43912C144A873E70EAF6DF2A16E3969F4ADCE20A6C0D
EB6044EB34A0034038946E8F570F9DAF72D09F8A5DEBB9CD4753C97D13EEE8E3
7BFB618413F7C41B9090CF23C21356C1BC6E30E64FC294A5B1C1C5BB7A3BB500
C96598920E77EC92700ACAD8E5739504EDF798FC33A9624992FDD95412A61ECD
D5C430342CDF7EEBCDF11BFE38A7AF80E93277F386E830B8265E3149197EF81E
8C71BF655DE895D867B69CDE4C5F2E37A4744EBB9C46610693BD95F7E93B09B7
EB900C04BA27F8B182DF4E0F81780B97017348ED2C674B6066128D5CE30D0599
1852D4DA802A09BB86699C06D5F14F854CEB69CFE8703757AFC58AFED1ECD15A
6AE4412F8BF6420667B07094B97224DECA860819B17F95F1276937C14A52EEC7
79530D117942A15FD7685D01D6C447F86C8FD91B7D1DA32596763DB07F059598
AA82945B30616862F0EEA284D4C128EA9EAAD051713194ECF42FA5581D072722
60A40CA9D334222486C7F8848E976F05F631337D8FA4B433F58C44DB6835A760
E333DCE32B32C858C898303C8701718FB6C223877CC101FBF4D8BC525C1DC028
46C90FFC904130DA68286FBA449AE8F9B27D879F14DDDA6A873BD0394979035D
A7CCE56880318064FB68D7430CD0F7156859F14C840490A3B7E23BDFC4CFAE09
3323981CE71E453BC7F38F4F15C155FAC20C095B5A12B66EC0445F4F30037524
35D8317B77DCB27623813AA067E59404F9851D7E4B1168FD1FCD1B3FCB5B7893
C8AB2938F7B02AAE4AA35A29114631AB5BD39F35629F5FFDF25EA3527C420411
D2B0624B14771C27251A51355D059A0AC38DFEA67E62998ABFC56EB6889A26BE
199678EF8AF826A454C1E99D8516C16644BFA37B7BFFE4BE8A42473C9F171B84
2CED551A946B253A66EB670A7EF50739A747802779EDA24C795433F0692E2DB6
6B169C2CC096F2E1B0E6477059BBB61BC891A862A5BC88CAD0C32EBB4139C440
B18D0F11686A6E231F48A54326393AB1BDCB8A1F7A66094DAD9B9CB52647ED16
5AF16EF75A7CA442F562597F43DDCA6F6BBD447616BDB166C94C878EFC9E3CC5
9D581F41B2E28C506514303B28BC227AF01144957CE05D3E1202ACFCEDA895E3
0FA0CF17E0FD80202925DC1ED21677FFFBFFB739BF010C61423F690DF96D92D8
BFBB2426C8A6526EA1464E9E579AD0005284B4EADB943CB326F29DB8FCC7315C
07F217B83ACB24FF8CEF84305795C23BBA19FFF3F800BCECFD7EF8EEF85F1F1B
3645FE3AC1C4FE29F1AB9EDAE48FFE92F26FEC4FC9DFF6148FDFD181CAED0AE0
C9F80EC2B3D58CF05CA1604FAAB36B2653B118594F4C14A753C64952433ED2A0
024A084936553F74A5BCFB64288B6AB3D72CB20A8A656F490B234311A6C3B5B0
923E9C91A2A580472C147F6800542AD55B5CC85C67D82B811BBDB96E5F7B9B8D
3FC14BAB9A08709139B47DDB10AD4D791FA37BAFE98231807317C71AAA4B2FF1
E27963647A88D2401A80CE2A2AE6AE996404D020E796B95AC00C6D0CD76D19F7
5D8A3DC98300E2379734E9F49C0785D7E398A356870AAD459FB136FE6D181B40
D57744D9D2313D0DB956239486A22785164B8661B2A15A177CDE5123C5407509
7E1E49EF6F7F3B60D599C82E722DAF3AE4DAE660F44EF0FBE4EFD9D12D03A0D4
90FD7F0045E9FF4D4E0EB77DCEF7AED669667EABEFB24C4E93D0D1262054F134
3532E74B5587181112EEF30B52DE9C84486B14D0A56A899C31676627CFCC0CA9
0CD12EC6802AB30DAEFB3B99F6719EAC28BD4F098FE73D5BAAF3EE2BBA4D98C5
3CA1A4E9FBAD5A45CD8740019C0CB5E7FE3721F4456EBDD60C98FD5D96D219E1
7B4ADA22C0A8365ADEB440266A3ECAFF5AAEFBC6B7C2418170CF2B8057D55EA0
896085D193512632C4CFFB180A4054B02E860F0F21A9BFD86DEECAB495D3F08D
50F8E4110BD09E04867661E346C44D49BA478464B6628B421A3386BCDF80AB58
98BC2950B1114729E1639305A0D14CE40A576EDAEB588CB833E58B643FC2BF0B
279A92E46CEBE5D0FB1B9D19ED3B76610B3A009F72EABFCCF86CE3E5B63297C3
51DD25FD02965BB8212AD1FDC73772FCD1FDD34089D289A05C0DB2DBF6D86BDD
F9F66CDC2D623FD3612C77E60FFF7393A36FC89D67687F46FE7BC059D682EC1B
78D48DA9CEC69CF956218DA3785281ADE9B168DA8C4820FBBC8A0BF4246BCF10
A781D1686ADBDDE1179E698423B4FAE3F61AD51125A2C53F6CB5C0B4F8781E33
891C139B285879EF8B799A37802D663A8E395AA4E8434D73AC36C62ACB4B0848
DA67A84057AC73B3EDC9D29D6ED4F1646CD216B609D78A189EBD2A1990FD2BB1
C1556582735E0C38EE09CB133786941D682AB64F03D129266C47DE3DC6B596D3
DC87AB035DE7648B5BF303C5BF6F5C5528CAAC1CC0276D05E8BE7796F312E5AA
29F00CEB40DC2AC05ABD1B0EA10AD850BA51704D965AD7A4A0004388B8F41018
0247DDCF8CE7E9E4B04A6EA910B501DBDEBBFD0FFE6E87144F70B43974682295
9E95B02C05E78C1E42A891020529F7F0FDA23DE677677038482909B80855F79B
D16EC9F360A9928D2BC5F2734A27CC4A57DCB60AD2A5B4E561426C007E5688BD
B3353CA13A2C739CB4AD2DC01679D8F12DB90194A71479403997E8DA476FA014
6858593F6559418E01D81739901EFA66F9A121C9B19D9090F253F180F55C8935
5A821645A569C2D614AD21D1B278619CFD825A5EDF8BFE9C667072530AF552EB
6B877B9172BCA9D4BDFB6771DEA279366F257C8BC67E40532F56D69BAD0A4808
3DFF76284D3B0E4C0EF2C390F40E318DEB74788E6C283C6124FDB9529F07A74D
15F0259D7E11B99F71FFFDC3D41953D73B192BF64B04088C5EF624EAF078FF57
4FE31C5EAF17665398D7778ADBE78EE149B14CF8D23CA5874C93DBE75D31A976
C2ADBAC22268FFC560582560537D65512781344C5BEB38346E3CDBAA41412809
62E2E8FECAEE869DB2B6C561EBE908FD0A5EED781EC84195149F6FEC8584038C
F5893CDE443546E70E8F89870E8200B68005C7965750BC9583F234AF0C4F7D94
15EFE6B8B1818B45466D11FBDEFE8EE07B1C9BE2D74A7E297FA74BCD97AFA08C
B284BED7F8828465F9330FE9F861E309765F942C76C6CB87E1BDDD54CDD781F5
FABCD7AE0C36F4248571CEAB06087D3FC35A14E92AA0C8454CC65677A162DE44
BDAB796ABA44653C88840C5689B2F3FA8826FE9466D4004EA422BB6EBA376E04
6CAC718208831C65464F72DC5A324837D153F208723C30ED0245B190F39A5CCC
8367FA65C736D142483A6620342DB0373306C6F33CC9D5650DF8E47B1FDB13D8
670B8A9C0480A03B89D9F7C3544A787B8EBCAE52C3879D9D4A7BFBA7EC807F29
5C52B96F5BBAA1CBD7BA339205A614FF367F736E66FD4BF38801BEC23884CE15
2503D4E9189D10FEB734A10F362F0A8488079019CCD82E92897D949A0A62B2B3
AF697C79EC1791F3AE33FF90C0981E241BD898CABADC50B607EC0E852859E8F8
5ECC8C2328E22BD25851BAB4E52793A0D81EDE92DCF190461A1EDC3AA39A227F
380C227DBBC8058BEEC210B9756F67D38104E578A014CB48E790AED7D3C6F818
0A0C36CDF44CF300CA0B3709734631AD8172AAC4DC2A4CBBECDEDA0FF44ED0AC
AA92DE5C57BEB3762383B089BFBD19F66DD6E291C0CE40BC9A44B2BF8472DD51
B1FF09E296514BF2052C1832BC507A59EA7B220632E0740A8AB4695500E347A4
DE42E5B330E03E3A671920C581FD7F371D1ECFDF9298852A82F9191BD49ECD65
A22924D48302AF23219C43138B4C3BFF7260BF895DB7A96F4164D4F1ED8F3F49
B846978E1B8D9D2CE62BAC01F37BB50C9546B475122F2C7648D5B802E17B622F
0120F577274739B316B5D4B4818EECC0B43302137D8B6759EB5C3D36720B0104
30E53D26A9B05DFE94B16ACF82AF8DA306529038B9BCAD91666E6712D30F25BB
15F1055805B07E519E9632030DE3FDF276C9B33A402243CF05DD0EE956B128B0
7BDC904C52C7F64A2F484D267CFAC0C60F3042DAE1793BE2DFE59D6D95330C18
90B42CBB33BEE2B7A55099413CC60B149849417CD720642BF8AC7DC7266249D4
157699AAE4EEDEB23A0D709DC75853E2B29C18A0618936194FF6AC8592DC2BAD
BA7E2DA58760D78201A5FE2E9FCA56A966E4CCBAD8D590E142667E990963D903
E048841CCCF5821190DE16776FDF2EC203E7DCCBF4A4D8ED8544F755B008345B
57F92188172E4699BB195280338561CC4324F4BA5E28D9D9CC5A6766536980C9
59E52B74FB9EBC9000A24C6BDC0EDB351F69146097BF718B1E1F2F3ED6B3268A
435D7257723527E68F65AD29D124C4445207F4BB2986CF6D21D578CD54075559
784A7D811549745A9A1F619F96B8EE7AD5EED8A9A2A2759DFE7707CB3028C116
C906743EF75956DDA8188F047A3C50EF4289043F2BC7050BE6457E9B026C8BB7
704E22188551C99968EA7F2AAE3ACF3E484D2265445F58421E14C5D3288A67EB
C4D120DE1D0D32DF090ACB9571DADD828C4E39C88145BA4BF6CA9D51C8B88A00
9FF64DE3412235852B811A3C8C1FCB3FA51430F1408B1991AA5D7458148D3006
D36250BD5E5B97D1749FBCD90E22ED5700D4C9C1DC86BEF120B7250250C63876
A1EAF007D97887C8883514FD422FE645E6AF4969DDA8429DD606A1821D1F324A
040DC10B0E66DB6AFB1BC7555E8E7B99ECD1C8B7AAC14B788B1BC830AFEF1A2C
0E7A4D04D2E550C768B21F6CA3F1F5AB43E89A4D859C670DC3FFBF9C5CB9A34C
DB6CCC42CCAD11CB8543EF568E14FE55F341385BBF6D8E462D2719EF09F9A05F
0D2D6FE9382532ED810D84A82846B851EF9EDF6C17C4973FADDDBF1ED56F08F8
779C75724F1E49BF9A9A64471D100FA563764697AA4B6EF251F96D9A57089BA3
1F3845ACCC332311B8AEA9E612A1319E427FF17489CFBE24693729588763AFC5
F298EE2A429D2A0E51036C73D29292A6D5EB72C1B9412F3870588B96279013DD
F7C31F574A0A776A1DBCFA4A4CD203EDFEC54E771EF2AB4A5DEB0742EC173F2C
78A16C5BEBE42976E35F2D987FD7C692B739C5F706134A0C4B5FBB3747EA30AD
45B1FA177677CA304B6336A3E73CC640C24B91831C892C4C474DEF871F4DE6A0
B07570C723DE76A4323470FF9E26335A71E28994A54442CF9D5975A1E98DD4D4
887B7607A4DC2100B9613E86D518B9E0C64D12180698CA03567556DB1956B37C
27DE8A180D494E5E36E6617620FFCB01145674AAED616BF5153D30C7D14ED61A
2D6DD5E2D207CE2469B3F0B9DD1FB1A2CF0734E32FF5F37A4A2AFDA1B6205931
FD94310B213F666EEE884134FD28C1510328DAC211798737F14B8832AB763183
65DFB431C1E9F8597BFF2B5F69DE3752C2ADD085D1384A6A3998208339ACFD61
EA4BFC3B524CB2E3F41E1C83CDBA03755A7283AC9B22F8F32FBE100816ADA89E
99B8B67C8AEFD8AADE389AB8B47A255B5F5664618397AF8E7ADCE9E8EEEC241D
2D6063267CD8F7DBE5ED86B6D497FD1687299C926F9C666C06A26C56C0699E89
DF2AAE6923D66A498A904E21EFB3522A1A4006385DC7F911616F7D606DFF04D3
4078DFE694647CC9CA7E7E7C66C5EDB88309C0E667B1BED05D89C24179B0D266
17166220B02BF71ED4CD38A00B79982161A10474177D4E1E7ABF239FCAB656D6
B2C6AADA57118CDC7EAA5DC0D3C6A3C2BFC9C0FECE1882B85E69509C8C8A8DE7
7B3E4EE17AE1F222104AAB98DFAA480FD47AC0699F4373178046A560CB43A1CA
C22E329D70CBD1812BA2A86666798367979D9487D44FEE75B5F5B2D3C54598C7
89446E442A268D4C1E2AB5C6FD6BDDA3F291D9C59B0B4507496D1C57E6746465
19E413145A56DC2FADF6CD6D489136627FAA31807065437EFF8DF2A74333841E
750C4035E776C5391EAC9A4A4029664F17EFBD1400602DDA1B4253AC0DF89A75
7094DE9D7139682212A4A6513EDD7A8E1FDFAA8A7BC631D9FD7D1189E992531C
117B34020D1E9A67B350F441E3D74C48895099509F3C6BD7B2016D3A72FC144F
DF4E3F6AE3383BDD1CCA888C8DD68B75EDB126B630C87DA9B6F31B9E8E1416D2
1F8F1EFE9853887C769E38E84287919E0C666E5B4EC2F731F709F9C791270F15
E3C17A6D273B934655A35AC8C7E6EFF1B8533328CB1162591BD6127AA1DF29A0
3E31A366A15B81F6A270CC007FC22B670D5B03A7A40627EE5783CBC8816947F8
619DA4FF2DD71B8F3183DC9DA2967A43A64B029C62F2726ADA7E1FB6FED10AF4
2784922F1D5B334F2DB9CE58CC308042A59836FEF5702264E554BC7586BDEA92
BF7F2FDE5866D5D75FA1211C1C0EE5BBE3F31B497AB9456F95A3EC46B902DDF0
22DB4A358B4A026E8CD665EA0270AB8E10E621287FD5248CFADDB679E3D264F4
F203C5D80D08C9F1E29C420B7BA9B8CB2C20E3C7B17A3E10592EEF64783F6EFD
B59133B7929427DFE3BB1ACEAABF200EFB25521EBDB6E9F98F63083EC4D901B5
75B416E8A95D7EC60D16ADD483D9A5CA2469AB0928ED44B478B852D5917D1DED
18A3CE1065737BC7EE8AD161F459E78868928F963782EF385A7BDC1E85277FA7
DC1C03270D5715D31F0998359E427913919AFC3785C2581920A88839EA6727C8
2BF9DA26A51BD7FE53BBB901EBCF9053809FFDC83096634D7810469BEF8DEAE6
0BEA69A7904D5122158FF04EE04C721A9870AB141972AF24AC4C4321F6840395
5ABAFB182DB4B6F8BCCFA72FC1B61C16E51A309F26F9060E04B2E0F1C4A32CC2
5E527AFEF6549E57ABF88141A9B4C4E8193FBEF74EAB7BC25933F36029602E40
0D69EC02FCED9B8E5CF871EA028F93BC3D39F824E65B400266EDC0C55E342E34
662CCE8ED575FA7CAD709745C9543617D4BD9BC7DE8D3658C6D921A83542874B
E7EBCD9F7926E4645CC41E8846C3FF451B8D929DDF73327699129E90A112A0AA
E0A0EF518D5AB4BE249DB090AB42EF58519FB874248148C0FE02ACB8201DD438
0048CDE1EABA93B730F208C7436E073E419281DE4CBB6632370FF636013CDD8C
0BE1DBFB96CF0BD248C3905B0CE8F5A3A258B7CF15E93265A59D442DBF579D49
301EF360BDAC9AA3E49FB5173312FC6FC28314C8866D3A36EAC4B605E8436250
9D0CD0A057E2EE85D5BFBFD32ED25DE5C13574DEA004D9CC27F894A7D8CED0C0
DE604FE8C55B2CF16984C838422687C160E601B881252D2D0C0EEE9D12B2DF2D
8C1DE6D8BB9F8E4A4EADAF1DD6CCDB3C07C19D6AB6270F151DF6EE058C9718B9
BFAF002504155CF7123AC8596C6ECE0B969E73B85E51B85E2DE184CFEB19B7BF
0E2C1D760FE56B0FE693EC5A339E919CD204C2D9E320735A15FFCA6F894537C0
9B6F52482BC91DFC125EA7F99047BD6C88B5B9D25DDB9E257BF0E75B285EE76B
9D05023CDCDB8CFA2F30FB281DEDE9BDB64C4A93C50666CC68CE5E48575F290F
B03AF2F8EAE21611A24EC8B48DC748D731423B61FC5EDFB365F102E4527860F8
D7054AA0DBDE189698594E160F2F00B8AB477DDF2BE7146721EB8FFD7DF72E2B
33A8DD90EF62EDF865643AE9D240C04A51A40BE6657261CFF0C70AD16135A766
8F27C18303CE3137398B6029B6F3DFA57B6BC20F41EB4D87ED21EDD2A61A13D6
96AFF181DE3776F8BB78AF026D6381180FDD3792C4B7B2A26E4B0761BEC9DA38
350A54A9CBC68124F1927D2AB9AC95BE51A12467CEA932940E273DA1CB0FFB8E
B6B3A7F1D7B7441DCEB500DF953E3CBA986A2B5011B246655DA1C3C639186C74
B673D60B7C022373CE43846720D4D01162B5CC69BAD8A1A7123CA23A5A3D4892
29CE281D14D4685E4BC69A5E71682C1E81AC6C9DFA77DC698A269804B1E6D02C
5CFE7D6A15A60F9E3504CE4581362AE66A35443728C21DBC56D7E89B3478808A
38B734A75980463EF51178DA255299387CC0A6B81F5C81DFB246B415105BF005
644AF8C46DD5C293541CF6B2B90D6E6A0CB297B531C6EEFE435EDBB6BF929A78
2734DAB23A439AC3FCFC4A2094636AD7D8089C670A33F71FC58C9F474B1DB57B
B5159E0F87060F0F7D3369936E4B71D9EEE78DB22A5792DA4DDB13264E338BA3
BFB8EC667D0F736D8AFC6A240E5019D717F7133BDDDF9ED7E55D48E1D90B4BE3
94F1101CC95913B7480025825F059E135D54ED27D48EB7EE9EE8DF1D55E9DCFE
26568001116D0639C8A4640405F65BE15512E6C60D7D8822C3149633774E8498
3D86F06577BFF24BB68BC42409F234C74266BA1AF415AE678D5A9CA4FE00BFF1
94C507871C40AB5CD8B6FABA64BAAA346E34AD9E1CD3CC16348AB86F60FF8D95
E0A73F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 66 /B put
dup 67 /C put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D5937DAFA344288F17E
5464F698601A657A31FC63341D24374052332BBC9F127F79622FEBBAB5C6549B
D748FBED660EC5DD28D28BF633D601D421164D4172910BD6795C975CFFD3F170
48CA14F75F7B66A42BA12472BFCB8B3C46194E66BB49C292505C3FB56DD6A32B
FD3691FD2CE0A38744DF529B5F46400B3109BE50C5E08833E1FE9F1913958F77
B73367B77070F9168786953F5FEEABAACE52AC4A0EFE80B96FF4EFF9D3FA9010
9B3129F19575CFF7C9E337828B3B3DB1ADC5721AE7CA4BC277B523F23DF3C1D2
958DB35EE3AE3680C7F76EB1921475D9668F34DE1D336112E2D84D368C820D01
BCA56DF6F026AE9D780A121C957035D54E75C0C637B9DAE5618EAFEC830D473F
23BB372EEE7C54377780B0FD7550D918C94BDA8E10C432E296E7CF6712EB1A9E
CB0A9463BB6F7ECCCC8DE43EDBAFBC2C0E3648A4885B3D6AF3FB631D692ADEF6
B015630C809F06D675E7395409599A29BDCF42FE27A545A72BCBB6558F4E7DCE
286A7FC33E0300454779C5D1B6A1144DAE5FBDD870ED64FAB358CE9529EDEB1A
44E769319FA2EBB8396E895E6F6873E46AEC9C03BF3FCA527B052B82413D3944
4F0A300740C2CE1DA472D44537B5E111C35009F23A81B7248A44106D558A4234
FC70CC583DA8D95B6582A82C1B517FE39A21601DE32B5097E82342D1C84E1A7A
5734A73895C591F72BF1EFCCA2C9B49ED5E9E039E37558A83FF9CAD143CC0955
59BB5CC8475E7A37B609A81D14F5C2DDFF00C7D71FC33FA861BE5D3C7523C968
FE7E68B55E402680270A4B4157DB6EA37FAAABAB2098B14CF86A050AEAF2A895
C6D3FBF41AF8EAB3FCB2AD91FC45D47216EC86AA2ACE3A3B5B0D7DD0C11A83A4
FF6C029DED5831ED7A006F89D80901297D74ECE73C85369B2759B0E4DFB23320
A179CF9898ABE1E5E6BE945F0EB5034798102EB992A8E91DE653379DB047856B
2F1E3F4B97D21B8A6BE7DB203D3924A9FF0278C1B8047A25E11BF02E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /pi put
dup 59 /comma put
dup 60 /less put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 109 /m put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A90B8A9EE5C613CDB822F07B
115D4C174FB7945535F2F9C2875C9675143B8D98DEFD3898170FBCB19B4C29CE
1E6883E0F68B5D42751BD7AD09E3EB745F0A6338BA2148B769B5E1EB21109414
C1615EC1A1FEAD5831938F74E26E1F6BF51136E5C76F823D29D35078412923DB
B3A32176ED7935058ED16528D28E50E37BBEB1D1554503645DD6809FA22A0DC3
112E7888A499450162B7373CC8855953B351E8873A4D7DCC40EEEE5A8A2D00E0
EDD8CFE7153824BF94833ABE10FA64768E457D5395519937705DAD2FFC5E71D4
521F01213B7DF82426867DE914CC9866E428F614F18078B4367187426E2260AA
AD0175A798267E86204D216D27F02A01F68F37B887413D025D3C5CD4D9B6EDC5
A961BA44F2B0A5FCFCE8C3AF3F09658031915FC9F0BA59BD8045A2D75631964E
04D5AEF7452658CB14D66B9814F918C088B1583C0D50BB07C365853C4FE5BBF3
32CCA910BE8F9A6BF5C2F9C9752D1A93AF713F57EA137CCDDB049BC41583EAB5
A335D29450A8BC52735B5E5459B3869B7244F34280A566CA9B7158BE94754FA4
3D727381A09C6F42C0DA5D484B788AE6C1233B0A02B1AEF996F2AC18C8775E22
71B1EB708279C85D7968E24A5F727F2416A08DDBE6EE02F5CFB2BBCEA1AA5E9E
E9CDC913B840CA659560EA1F09F986707330ECBB7DB22635501817DAB4DB7F95
EF2BBD19E40E1931116C7A7BF42192C1B6E41FF185E2FA825471364075559C0C
51DCA8D350D815380F47120AF06585342C754D8250CC881E904B85169B259BEB
AB22D1D35DC0F01B3BBE7F0FAE0B3BBB57536F1C9C507D2EB061DA4D4A2CF91C
F9D19EDB4D3B577FB8E67189749DB975E8307082E5EB29545DD0DDDA15931DA0
6801FCBBB9EB4E809797ACB77CB3CD67BA02EEA406BCEFBBC4FCD899E561C9BE
E183D73F73E2FAD9111EE648D0AD0BCD46D009B02945E8074047BB71AD967C4B
8437E21D26735E966ADACD11D3B35974824C033E5A811A591B37CD9BD1968805
D67D0CAC2D64BD8AB957F3B7F136159B0B40A6C06BC4035F7298E925D9F2B401
6C651A3F91CC4936427A7DBA94DD582B216B4CA8BDA6B81C705BBA24C10C40FE
AB83C26DEBABFD8DFF489EB78839B1821E3C1C7C8FB739D7C7E64E7EF66FC7EC
8FD7C9F02FBEC9E32E673B0DF1B714F22657A8EC179D188A798D4FC127C610D2
E325604B1941E0EF4D305A28852249AA822CC462E5CE3548EF7BEEDE9F0F6929
F9748A25C58C3573EB5A48865D148019DDA290B14943397E7E6D44C483070E35
F2CB20C007D6E0B79DB352782C1CE5FC8B7118FD31586B454CCFDE1C0E16B745
C6D1FF3B9D1FFDB057CDD79A09C4C2672C64596D348E85C3D11BEE3DF091FF48
234D220EA1BF4B1B447952D129F1351EABAA6949D2B14FAC3B717871D8EEFB63
A2B4AC8AA740E745A2683A635C19D33423AE4FBDE71F4EF88B198919D9AA8451
6EEB25C54D103C6710D1578884482CDDB09885A0BFA54961EBBFF06A8FDCF99B
3D2B8F9CA64871F940E28A6013043628F5761EB4682790DB72725B760E807624
9C30E3914CD9F1E8525DFC55359447D156CCDB95CEAB4F5A6F3A8C75004DC085
52B28BB3C0C07837BA0C49831F8BF5C439BA9D88915625EA926166762FD26A2E
79234FD7A2420C58A55E37903AA20ED7B5B25163EDA8A1548CA7FA60B8863972
33012B2C5057FA67FBEF2EC914ACFF0226074E15485A8911EB7F228ED1F5858D
B49A9E0F8658FCA1FDD355136759545CD62E150770847E3F312696AFEB6510C0
9C31BBC0E61A3384354D606C7F8592B3EA95DFE4A29B458E513CC20CF61905ED
E4F918D0F503064F1C78C76E0FFA8E4201B3085E2780BCD2F587157CE5BEB468
041FA9C3661758D82F822B40EA7C4A1372C516F2294F3B030E87F83F5C74CCD8
50BC30514E6BEEAE199AFD68F12C5075926E6C459DF868317C1AC465B71FDD57
7E8808BD443B59A60528952D2699CD8D50A7087A184E900C77BB0E4478421E22
5A61AA8946A368E4D091474B489B95BA40BCE61070537C3FF164D9EC56095E28
D856345E0C49648FB22D73613A010FD3815654978775EAA95BEC5B4AE8536654
D441ED1CE8D86FABC02D1BE4BA65D8B3624F4EEBC57C58506D997955D61913AA
7D50C4392D8F5E18CC263413D9168439A685A0CCD2EFB99B1238122423720CA2
7AC377213EE5147C6FB45BED06DF86A8A17F723FEA9739407D8926A5E95D3554
D2EC0A03A010BCA5C7D7B03F931D69E0421FFDE9C1ACBF31C7485CDB8E784DB1
937F4AA3616005FAB6BD647EC49E2FAEEDA7893B6D2759C67EC8CC48017A0C08
11E0A866517D4C15F81E1F43E822EE272158EDFF439066DAB0D51756B6D25DB7
B91C490DBD7BD5F668DA244731C13684B26F59E462CC5FC51CAA5CC1B2AB3D8C
803F8F86EC7A555B3031FFA03F0B167E727E725F1241B56222837417F0C2C1FD
AEACC2E3AD8E355A348C43A9E25790FC2D58176EBDC778D1F08B46F8EF75749B
93B9C7A0EE1A07081AC95D460EAEA76DA9BE2E3C482959242D3B3EE5ABAD1293
779905740ED4F3ED9F35404C97B62447AD48261870E9E7453C99E8B08782DC54
5FA7FC7D9D618C9BD1B2D75EB4145529A2FA6ED98F26E3B2E74DED84B3F85403
705B9D24BFBDF670D0935579707DB01620184A8A4D8235EC27BD7D2E2CE2E2B2
F6589FA727A7954BA68CD3772F876DF9F82341E1EF361F96D780EAD36401338B
3CBCBB9D3764CFD434B4E347CE568B27BF8BDDA1DD80A99355E32F6B9B9BDC75
A054ADE5803272A4D01DBB151B0C2A8EA906687646F488655815F95D1E545E21
385CB3A78846C137F06A0B8180FFCCFDF2426D86E59088A86847D553C3FD40AD
41BAA43287820E1AFD5F53757D7760B8B2EC279B9E5C5BFCF2B74B4802A18D22
7A3F366B6D2D8C0950CF56946B0EABBE3DA214B954923DF06E8C7F7DD5519DB3
935A58C59D30F6FE09AB5EB175319751A8B427998C8593AF5DBBD86A92A42C6F
8E8F1511C1EA38D4AAA4A653C74F8E2C37E8AF635925FD21C3B69D2F24DF10F9
F03BDA085258E6812AC8C40EEF1C2E0F5A1FF8B7C8BBEF884BD3554032667B47
C70E47462F119F3A356102CC6DCCF500508DA3ED99D1BF7806D70BAF9EEE80B5
4A7A8351D2F16B43D1C5743ED115517CA635A33A5CEAC67367887F37A61AB871
28DB430DB5DACB5963D0D3208B7360B035A6255A93870D5D015515B643CA7FDF
5C79D8E1AA7526CDD84874918FDB45B9F03719C14648D1BF9CF2E7325F028875
F6C95BB0ED92A025BCDC17FD44FBF68EAD9AA81D13C1992BB800333046AE4EFF
BF43
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899A767F6A99C78F239001C028002478AB
E12A94D59AECA66F54951972795B4EDE80F67BF746E85C18F990C54B1A2A148D
DB41E49F264DF5FC0C890B501E1DA1C0D5ABBAB86B8C3C4BD9808AD436AA8DEE
050F18E90E9529CCB017D9D48DFAD3F8C2D69C77F37924E40EEF507C2069ED41
EC4BA5059F9A8983D858523953F8245D2B8AC53C60CD071C47F6E34CBCCC8B2D
D96ECB3D65C5F091826733619122A5E291FE16EF8C01FB54EDD95A82087F4E69
B7BCAFCC13B34B86F06197BEB2C71851C9B20DF35015FA19A6504D71557DA3E0
DD04D29C5BA37BF4193E5E18DAD2FDB2979ADB9D6C366646D36014824C1C2F4D
025709D28EECB76E4174BB1BC3EEE0ACE9950045BD25A5D100A2D77B00EC7C75
91504C0D2368CC90124239014A0C4CFD2CD60E22B004DDC927339E34C7F7733B
15FEFE23CA179322EC361EDF1B48D266FA7EAD71625AFA29921EB5064AFC211E
202ACABE394A95196DAE70D660F9249BB09E25134D709C289E519506B555EF47
5C1E3DD3FFF69BF0E7C6965549CECBDF7BDFC6FA4F7B74BEE2016701D488296C
E28432B97C5F79B80DA189C306B3C07408C7AAE52BBA3269401FCFF5E6D3CD5C
5CE68BD1F946C6DADBC5FB8BADB64DAD461DB208B1E2A278771A42DD8AC6F44E
FA75BD20BEEBCE9EBC2BE1D00E487ACA07E20B5C42DE54D4A7B5F2711ADB30AF
5F9D5784D0B66AA0C3A2BA95EE94A5EEDAC954C033A1BBEAC0D02BAE213BFBCD
BDDDBDADDEFFBE1E3A1F715BA7A47E9006CA6B2A9896172B801881CD78D8D1C8
A91AD63991615A2DA3EAC1EB51261B2AD4C243D76451DCBE91BC31763F5B08FB
D9B21015A30F225E1DCA5374D1C2D78FE64DB80B78261A2B5C8EFC8EC3B4CFD2
992998F6B9230D2B3AB4979BF5E2BA0169B709385B88D9E484D8CFB5489ABA2F
75C4E676C5E99F047A3B033815C699B778AC96D967F64D7D81F133BB7A04B342
ABA1ABBCD4488E89DA5A892CF7E111BB1886A94D8CA1BAE98C95DEA8966574F8
F779FBFEC09764D71E2268DC61FBA0685CB820D72ECB55FB8FAEDD4D4583395F
CC2E7C1611FC07A3D50158A6820F38BFCBDB596178F69D922051B6B0398A8758
5CCE4E01E4993456140D36B603BC38A07E5C5D5E99A4AF24BD0B954723107396
07EAD9ECFF2EAD26879CCC010CC8C274E96374977E6CD6DE427A7B7522EC6B60
6CF186D582DD972D1E8B8F3068B2120159D36D3AF0118FBC8ED28F580DD78AD0
6DC1E54CDD8A7B0F05CE4BBD2B941A82174C1EA4C2A10E6927E99D9CDD7E3959
0DC25FA98B2F04D195EA7A7243B9C9C340BD4EA59194239DCEB5862DDBEBFD36
8D3F08DD9C414C5C11852FAE23AC16CF82CA3579BB607403337A4846BC2665D2
109A8642A9D79D69AC68E88713C1673A10D58B5D411933162A5B029A6C729A95
578FE386BBD0254354B0517C58B50D5EE3B5FF82B4A73B213A33CF6F29E7A218
7AB00F7D604CB8424875111084019DE1FAD264E2B59878BB98D8676CF7767305
CACA53903867AB44E1B5328B71D341DC7F9AE1ABC694D2599AAF9DDEBBF58A0E
BE7E591D7947341ABA5DD67263FE3B84A7F66000AEA0E6D887745F77D7D7D793
590791C0E426E31274F710F40D62F8301FA772AB42EC156B6E35C8FA8245CCEF
39996D7AEE5FCC7FEB8C50C16D88F177D28A35EEFA010F628497497AD48C4E2F
D413E6C8A51F12C136CE58E350571FC08052D90F0F15E0E8BDBCC88F46110E27
EA040586F49FD91EE25F07D5A401275DAFF14ED5A8DA7D9EBE300688E62623CD
B05676C5D84907E6A989341B40CA11EE22E662A6C6F745E6331A3115508AE407
4AA6B421B33A4C45A7C942D568BACFD11820E835A135D14F63256F4E2CF47E14
61DB12A5A5B7750F636AC309C04587B5DC6C6BA31CC103B603DA801AA118CBF6
76C4E6A1C2F027CE2CA51CD4EC20480B8B7B1E39D1A96CC62DB7951416B89E2A
5EA1FCB09C9B2F05C36E0AF1A537C00011B4ADB0555C4F62C47324B83D71AE7E
E303F69264FC8EBA5EEC21A85C9EDD20E7A5CDA4EA23EDED3B7981FF403F6935
DBB26C9D816102AD9F0DEF41F42051B84E160AB79B9C073E3DD2E2CF588003BC
33A7696722D1D56EBC5B9E8972CF88EF90ABF09E377CC2DD1DED5FA28F10A55F
99FC6F65A71B56EF449BF6EAD0CA93A75E6888534EED2185E95331C2AFEA75FE
772E9671810051CDA23F56258F49FF487627675C3F3BEF129061DFAFAC573A1A
D57C44AA67757D17B8BE932B4EF5CE51FBC45BE49C023E18D3715BF9B7BEACE6
2034552666DE3279502A15A95F8A6922FA5359F72243F3B90E42CFF17C02E313
000687215E0AD9F927B71B6E8278EA0F18E1EAE2BF7299500D3063CFCD801879
DE9F0D596D3C06016843785DCA15976C99B380E602EF8BC46E16B786DEEB65F7
96BCDD85942067755C7125E8C5102CDC644D4CCB2DC209C602A1FD52CB879392
F2CDC3E77C89E3670097908EF7044A56E227B55EC84C02C988528B4C162327AA
DA299B49B5A65638BC3ED671057D51A6386E3D0607F2F83A8E26A08687EA6F7D
1FA6A8BA59728D15009517A39B32136B82785136C06AD19614EB0F5BD9745FCE
C9B8BA96AC94586979F4DD1D1FD0C5B556EAF74D9DF9554F288B1C652C7CC4ED
9874252F0D7A50D68043457B35DC7105332A5F1FD51781652095ADEED8929F60
2867943242767F2460C4948FCBEB0923BC86537E9DCE8A7DB780D4F11D2F8532
85E7524EA4B5C6E171F657319FFCE63EA6188B1776A80245214A12F093B7D84A
05DD11CA2924D48B4E59D982BF9E06969E6BC5E6D689EE6873A387D27D42EB30
F9644C28F3F52CB539F61C37CCCC3B1E68C28821E5B1EBF73B90B02AB80069F7
DBCCED8901F90F6CF848B6C8DFE565DE7F55704EBD3FBDE0CCE285E73554ADEA
67A78F81F67A0BE67D614B17AA3169EE243EC6890E0AAAD7E2276187EBB2516F
7F34235E6CFD6F8AFA4D5F8047A15E9A43CCC0D156FEF121AFDD121BCE4EF860
E3C487901ED08A47FC44540400BCB34AD43026D7208342608C6E01E63989D7A5
1635011D06421ECE4982A6E06CCC7D5F8268BD5F27CA73233188A55927B13051
0BAF6268A273112DC13C7BD0994D5B969BEE34CE31D78D057EF2453EF7A4E09A
6426A099C7B63BD1335E4C253D16818C5AA3A28D242C601D7146FB443BCFE474
1219C0960838F15AB5FE4283D5F71089C3F949F2393B1612A2C533F3125D5518
96F2BFDAF166CD2996527AB7830A9E9FC66B4FC576AEEBD3BF41EED24401A945
8D10A5C0052232DDBDB2158CE07717E98215C37D3EB3C64EA9C4AD81F1EE52D7
A1D7C6B353DA579D9A2FF5ECC66C5FD2C667ABD7922E56CD876230E08B8C7399
F0EEB265FB97F33B3BA2069F7EF33DBC3C7CA4A4DDBF70C062A45644B7E55CEF
4C7250A53039E2E933F65C2DC0770D5E05776A25EB4676DDA48FC93B6EC207A6
913EDA0CB2580456A55E17CB51F707EE2D9B82790D00996A785B1E00A91B3A9B
47D3F0B63E6E826992F8F56FDBB0B23B92D66BA09E43EED36C94C45705EA9242
C306E4671BF03CE58821A380C6FA3F605EEB5984FC499FAF9917E0A4211F58E7
4D0934564379EC9D3065564661C26A8152A3119FF14EFB9042155D2EFA9E4947
FF31DBB8C30A1CF8BF83965CE9CA031E6A7285C1BF74B161A800FDF836C19EA8
41EE1DEB1380CB14EDD8749C182A66A4C27C0A4E13A0643A09FE99F66586474F
CF20136A76A18F7A6B4DC594CDE8A8696C5AC192C0747477A8C161B1E4A2BB93
5EA6DDAA4682753E434200ADAC20B41D519C8EF5A14FA8DFF85D634601567CAF
564050C8E934363CB5D26BC241A8BF68AD6A07923E4F30CB4D7921D06FD678F5
CCBF120C29D7545D0945C40B1E231F1704A1449A76B66FB1901E84A19C683BEA
C3F6ACD696981D8A35B1BDEF76B3C12A9F7AD81133423DE9275A246149A31BB0
F21817D8A9D9118B346611F5106B4914BF137E1EA8EED8C8171C4EC178165698
468C45315DBE3D9CB1DF4AA590BEAA8A5198FE8C6DAE5E8BBB9996E871B77B93
FEB9E308B154FFEB5044A631680D49A70BA8A7826EB571B8428AFE5B179AE764
F8B9EFDD50628153039A10FE012A876A35CEF0C8D8BB9C25AC80C97538A4215C
6B5BE2721C72150D10314C62EC9A4622912195A7736F1AD0DD7BA97515D37C48
98FF9DAD6A2C80236DE525FB57345A692A4916D55BE0EE7041F3E776898F8024
4A834B0E63003F6DB68D396474FCF30FAC429EF3C7D1C0A43567C8282F86130D
5AB6E7D9D531BC0A0DF4A79B21B7155B3BFD25B2D764F0528BA15A3680F7A56A
8F5D0DB8CE763A3FDED1DB36662C91496E404773434065B0985D442F1D307463
F4516769AF07E7DAF6E127A7D1449253111FAA6ACA58EEF48EA29E946E05DA09
44C74EB0D01E5237A92DA4FA168A037A6760B8C246039BBC6F0AAE5F86D701DD
C09671E86A01327CC9B19628F781B5A9EC2E44C0504D6B43D2E25F739057AE5F
FFA4F3E1A2EE1F6FCC07D3ABA2CF401E5E48EE0519B72D1133CA91F09A304FA6
0B5A8017E3244330D83143145837FB44CE935B88AD27CFD2044ECF823F198CDE
A9FBA4EF131A6949AD34C338A08B3DC66C8B6CB9E88CE980B348598A37444871
09A330FC50A953A28D27E5C233674F0000C5BB3A34201DA72A822E7C24C39D7E
F5D91818B80BBA57C3B3606746F15E230DB2B36FAD2BACA4975838572DD72B20
F242D8A2367F796267A93F920F24121885AA8426EEDF2D8A778073C1A0E77D79
E47029E40C4B5B596817F23527EF1602BE2A1AB9E9C384AD82DEE1B8090C9A4D
CAF3B24A91B77DD4CC22E516C5C8F0C49EDEA3BB1C6E10FCF22375719E962AC1
08F03C36602608F42F45560883B5A3B090C25E1338F0F7DCB2A58314592EFEDE
EF7694B99CFC312D3E34443C43EFD019FD2BE62137293961F1AC4E279EEA4D1D
24096DA4EA28E5204DDD6F895D9FC9D4EEDFE9BAF80D3EE8B23F9FD5D8F56B92
79364FB8435B7A23464B9AB7EFC9E5F852ACEDC5D0E8082C538A4109965703C5
9E72AFD4ACCE3765422C5E9C193030D383093B7EE7F8EB6F5B7C47DA237B6439
575C23953D5B8A11231468794847817B33E57AB2803B20AD604925FBE9A3BF6A
FBF184009EE2DD94C933DA3A7FDCDF044BA8612C7C6EB6DEE9D130BE8012527E
B8E0BE0D8C70324795007691A98ED401262D349AA2002C87A108CAF4031FBB84
7A345265C58B580D0CAA5947D28A2CE315B24A8A417F7E9C1F31DD4E519CC813
AA3D1D91255828E09E44CBAA3CB16E7F9B2B2A94C613B4A7CC99A891C938B5A3
7FA3B2059FF4633E307B1A8BD725E67F6FB7612EC3EC75B13E1EDCE2E9D84192
525D19ABA4A0F86B718348A9E8270E78DEF6B3A255922FB0748134B6F6FA919B
C7CBCD9F99899FA5715BBD86FE601397436DF6CD99E6C49312434AB8CC502765
3F221BE4BB40B79FA7963C43192E820BD410E84334A238AFBEBBB3C0BB6CC55A
89C2529A4F261AD82C4DF05ECC377E155FB2623C732933783D54D5E7F9D30213
780D3F1A1CA42D36D3C1FE622EAEE49D9FBCB26AD548F07DFC738AED52A8B759
1BB36E9DA1187B9B5D4A33135AD65E132BBC910C494E85A1E452B07E15D4B245
F7C24D0AF11A161E21A6AB4CAA2CEDB0220C150933220E3F1B9DADDD653B0A77
9780F1B340DA30A807E54537269DF1B246989EB3B5DD3CA79431D8FC5AF5FE64
69726CFEDD7998945670D3F421FE0E81C0700BFC16D3F82E3D9BFF74AAACC793
769EAD5149145C7778BE3CF49987BC2F766156316B81857B302A0026FB345BA0
77F06D0F86AD736163289C894CD5FFA5FC0A527B2EF907D497AAC256C1113F18
93C6B5A0247FC4BFC9268E8B0EDFC839F37092F5695902258146510F39CEEA91
B56881402F07562905FC6F5CD5F9B640D724FEC7501CE39961C7BEEC40992C1F
EF8B02FBF55931427EEE0E098DDB552BCD4B12B06C4FEF24C3157B7D1C04E109
7B9558341B2F7D3BE67A44222AE28B232D1E54F0E3FB7805BA884F8808F069DB
0153E0EA84B15E6A8F1FD76BC306585A15B4E20519B72D1133CA91F09A304FA6
0B59DDB417E9EEEB848154EC758792E6234F8C010F26418B07FFA30D4B3BEA9F
D601A8A1044A73DA8B7EA56CAAFF104B389CCF93841C063680604A25E7C54450
D5622A67C4F598815486857CD91B52D4BBFF8C194008BFE1DCA55DC35DAB60D7
9EA274B0C86C0D39B0534A70139F39E3D278F5E57DC8F688D2247BF63773430B
8771F19B895BC408609B2310D8FC59BAFC9047A06D5E4E385507F49A036F45A0
3766C13E3A6E5ADF4234D7588B5ABCA1277FFCB439E6C980326593693815AE34
7814569A857F21811B7495C1BC988CE423CF61B4F8D7CD12BBBBD91F79D3C32D
DE2F0A44B3468DBAC0ED5E34F70561F5E77C9545BFA2FAEF73176340616650B2
49EE4137B63C47C0AC7CE26902FB565176F51C1CB9B218D9080909A80CCCE3EB
B841B0774C5EC41B3C142969F1E8DD21BBB1436A1550340D392D39AD11EBF80D
988B018FD7A31EEFC9D256061122F97C868450EF0D028A744836269DD1D0C5E8
FE4F0B4A8233C6596FD0270FCC203E95B847105AB3EB6E48604DFB91C31FDCF3
30B0DE76A9161DC1DE834D91F7CC5AFE5EB838C95B0055DEA4747265D72586F2
EE505C0B4A3C2EFE1FE92DC584E6DB882C3A883C7A4E0A70BB1321CCEE21BDD7
A907B17D46A67F6CDE53D4A4D507C12664D044295E5839D2D146296AA6AB68C2
97D3F5E34AE3763445066B2139F4B64AA3F95E8C68866DD4C4D1BBD27B060EDB
1BC9923DB3A69C5F2A31A123BE2AC55FFD80C55BB15DA42E27FFDFC2FE7B4C2C
AE491C9FE88F353173506B7869E186B8EAC1CC163CE66D0ECC211ADCDB811ED4
C507F89284AE585DA756D73E4D9A8A395AF413C98533498681D63124B3B80398
F23DD7676EC3BB77AD68A03E74FA4306C61B97483486C378AC75E76E1AFF0D31
19E033384E202C38521C1A398C58EDA6DEE806424A9F151E0220AB09FBF48476
62082F926DAFE1F3D2CDAF1940E7D90C3377584790AF5A8BAD5D9DB44FCAE8A2
5C9A6600705A7057302A95FC91BB1FCE108B92B759751E10C76409A0F8E729D4
561BF6079CFB0B6B56D3100372E04EB4196E8E42CA1097D44DCE78FD29960A82
A2642DC81E608DF2FF576BE5C494D3B96D31D2E68B650B62FAA0E69AD4AC12B0
9DDD5B976EF63F315721530E4A8B18DAB232FD0665F34324C755992F10AA5BC2
885F08C04631C2C915D433969BACB7D3FD49E1D5D4DEDA77099F9A918D8847C8
6EA3DE3D0AE0E989F3A3AEDBA367DD15130B59BD9BB8433B6F81124F49FA708D
CD302D6A3AC105FE541E1FFFB8B1FE4CEBE7C9F250F58B066A0B3EE4F55CD03A
82EF087C1000ADD779DDCAA2E78EC53B2848E0AFB5D74BFF42EC3C5999A46790
0DD074534F2E040D458B5E5C616376E272C7181BE5988CF046E74067F6C5A7CD
B31D2FDC86A528623D54F22D07E4DA59DFBACC56632900681A2F346AED25EEBA
5E608D876D97F75BAFAEA88DAF72939CBA9B2E44C819E84CE2C634D55A9EEB4E
B972A72843E07D69D93C5477DA020A9A9AF0039DD270347FB9CAA6034AFE0876
8C466B4996AFE6F30043F45FF196379AAF8586FE73AE15D8E216F49C9996ADED
E43E477926E37A5AE94213438A77D29CA666C46C78BDDBF18FE2F530BDBD2CFC
21D684AF84AAA5675C5A5EB784AD24244BE76CC1454771AE45B97829968ECA4E
0CD35AFEAC7BD6A32974FB01070951AE71E913DDF6431296AB12AFB4EB5790AC
4ED0FE24D29C23074544C0B6A29D7438C4A02CEA00006DA31157A1B84EF1C25C
C7131F5E3D67F1E40330D662447FB54CFF70407209CC3E5EECC5B6161BBF178D
A9F95CD51AC5C115194DB0FB0DE4281C1EF110156DCC8B7E774F9128470808FE
5EB66117E424EDCAB5798C2E260434DBE674534F10E08E63682ED4BA8FD6B959
D434916A58CAACF3F27316CA78B2E29575DCFA9D29EA9E146E742FCC8BA675AE
7AAC03CEAE412F527D6BE256A5435CB1008F5103C7A2B72C5980EE40BEF1DF5A
8AD87222C49F8A17D797FBA14B93D617A8EF6C9792828F4545F674E322692FAD
8021BFB2DB4F00F266A9C63E4081FE73B38255AC32B2D89ED803CFA6AC99B7F1
12965F67442C2269B94DDE8B90708000726496E1775D439D8A055ED2D22F855D
6049A58F8732006D750367F4365BB61C805F2DDF3E221806D7B482684167E312
205B73C40211B5C9CD35B0E54453C05BB32230FE2A8E7110B41DAF2C3D41AF47
A104CD72610A7056AADE2E1CF8484385BF9D67AEE06AA10A5F8950F5879209A1
40A1E00FAA24ADD08AFB863B94D4315313E101DCD7DAB5E1E5D8E38D71E90DE5
650B382267A66FC82706705826819B52AAAD094361CE01A09DABDA27288924E4
F3BEB8947E87E54995FE6934DFEC4ACF83B9BB346DD340E8817D8B7DB8AC8F31
5F3441B03AC14FE5E90F17906A065504F5EBE6862256289671531094D9E118E0
F08210ABB066C75BD2F2A94661E8C7770BBD4BC43D358874ECC1C1E78EB586A8
8A353D6E4556BDEB6D6DDF6A7E9C4D83910926C7B1AF5D9210483ED715CD39B4
DAE1C96FAC7C7FADCC056E26B14D4A7A0F8FDA3EBDC519C2D79EC99FDEAE0279
4254617C282208468AFB3B28FDF39ECE8D07270608CA362B908AECB140BDDD50
0DFD3C54002FDD1DE1AB5EDDC5A75362AB5D193755C540F7DCF9FFB14BF47757
2DEA7A7C5B69BF26656762A25FE0464CBD7897E01ECCD9AB9794FDA42E5D2E35
ECC22BC150C347164DD26312138F759E13390EBB4E032BA8EAB02F5BE9FEC002
4E40A9EEF6BCF3215D2DF39989762DA1738E0ECEECB45383D5819E08A750B51C
6E0C7368C5E7302BF035F8E38D2F5A92F0FEF9A4742DCB0CFAE737396599CCEC
30B50632E88742A2D5D3508335E090951CD4AA406C1D10C8EE6FF391F833B652
335C0B24A4624B7CD1FEC6CDF7980D866E46A77149FB8C0AA830E7BB9F8ACC2A
993067DBD9729BA093C1AA3079A95C2478E8860F3E42FD46838B72AD0EEFAFB2
7BB11CF8595DC99AE575783341DB17459F2FF89D27E74E6FB4544F87B0974C5A
18DA8DBE52135594D1B41358C31F841CFCCF1AB6CC878837BF2E8505934C9382
7CB8E1E5FF8DF7B4ACC1573A530FEAD026AD3CF517684ED5C21C084ECEF4405F
CA70BDCC8FE919D55E1351579EC5C3EBD317517C91364D0FF8EBB611871B3B5F
DEC3BD5E1A49594FE46BCD40DCE48B4FBC1BE8605746FEA25546D32BDF3FBB52
82962120BB5FCE8B9CA3558B105DD2EE7616669DD6B80F53A44CA4AEDA471704
61B0901AE1FC50BB3F5D3EA85FE76FF807267C096C415EA3DA3403678EEF852D
7940E850451C550EE778D5CE85ECF6D3A85565617ACE96E533B2FFDF6628D725
5CC1CFFD95F8A7D45E5FC92584963AF8FF8191BB7E1A05ED1672C9A741AEF4AB
E208F744A8C5BF58C7A5B25E236463DD37988478E25A18F53367809F569FACF2
8AE5AE8AA2552DCD6D2B3CE88E98C8774B53EE6920D25EA394ABA08EFE3C136E
5DFA085FD69CAC31A111D98F2099F0E771F8E7C7CCA209E3EE4FD459E6F729E7
E3BC09E5C13DD2FEACE5C946797E396157CD855FF4C6B69D8B0DC6DBDDFA45C9
2FFDC315314C53EFEA2B87DC3C3EB09C1EE7DC5CB12F49E64F881ED3DE8F547D
DFAC06AE408EE4240270398288706F7D9513F1BBF8A7B3FC79CC7EE277DA2413
674511CC92AEFC1FEC944E58BD81BBFB13B6527EA4526FBC44C47651AB81F022
85C610427C027EE8383A59C8ADC17DE809C66A71C436D10D890EF34B0D76E17A
967A7375E87873F8755B70B20EADC6154D05EC73E8D9A6F9E71C36ACDEB28260
295C7DBF4D1EE1A4F7E280B79C99073A67D8E96487398F0EDC29B39FD107DD0E
5D4430368E61B41A97EDAE05CF60692D464E2882EE4DA11EB3538DBEA4E6E3E7
7AB9D1F85F0EC04A5ACB7071A60DE4E92853ECFD61B89500C27591C967E68260
5CE4E9100439351B4312686F8F9F8C86D8D507AB6873D78B4B0CB143AD0342C6
6EF6FBE2FD358BC55CF22D55FFFE3A249F79E7494DB40F5E6A9C348B9B4FEB15
135215E436CFC53515F78ED0152AF67EFD615BE6CAFCC7D661ABA56437AE5B85
06129E9AAEA996FA979149B8B39A244DF0DB86666F4B7EA8705906F56294CF38
E4AA678BA8A08F81174FFE6A4361F97988E5FA97105607AB6EA76230A7296009
9FE51C7EE14975B0FF64BB5D9625D0FC1B93ABFEFA990E3A02996C15700B1114
655D5713D742FED25DF8E63B22CBA719576A31B06D51B447E7F215BF69090B73
7CCABF2258C80CA61485BB27EFEBB52E5AD6C03E8ABC7A0466873F1F7F8F93BB
3B8D5EC1541583C5E05147330A129AFA9DF18A8B951AEAEFF289EA0BECE061BE
BFDA248D284A5ABD910F92E0A8771F8B7A205499FE4648017A3696E07E739A33
324E32956171138E77F097091DCE9472A43B5FD6AE51F3A1AFE4966BA885BE52
35DD3D50A5332AEE9815B85B98E795BAFEDE2899CAAA419F53F06B36257EB888
B6CE64F5EE467FDFB65FBC14D4521266339AE1FC4FF99C29C798D43A33FDCBF2
A97D10BE533DCAD82809B720498414A6D5D52D97BDE6F0919A12B63D7543A716
F2A6F8BB1E84CE36E93B62AC49664B1D34E285751689EDDA8FCAC11575AB5148
C9E75CEED5DC357FEC6FA98002905B1CF54D51685AA877D7B0F4D919FC937533
340859648BA3F86A0F8FA6BF2414B32F455A6EE6C091B28C72FD4103B7946FF9
36607FE6B2FC8655FFA080FB0559F7F94A744C628C4ED71B9B9DE91E5A426AB9
B5EA106E3FF13EA79968C8239CC2EB0EBFD1D67944BAE58BBD4331BB9F5EDDC6
4BE255F808AD2D298A6EE00B91904AD3454116CA130F171D44B89F1F97DCAE95
E10D2A20505014FF96B6E128177A1EE57E7017ACEDC7755659382E6C53E87681
D0F632634F18648507B20A5B53B081BE1D837AD5E333EFA90A3DD110F7075703
1E4310E451D9E2092C31968B900CC9FFB281AB0AB46D321DEB7AB0AF62CA92B7
70C632A5CB74684948671E5A5F3E4E2E1F7C59E59874497DAF3F41E352111EB4
19EEE4273BFF14BB6E61BAFB497EAAA77C7BF33373565EBCA2734ED18EB28564
E5DBF10FA3CEB90CA329858F8493E5CB7EAFFA6C16723813DE4FDD18A424BB95
96C012214D892E20E04A03A942FEA75FE1E9E278FD03B4C95BEC227566D416A8
255758FF27AB94EC9F6270C871FEDF9E4DBDF036C8391C911BE4E9B5D6976582
BB3634EB9571267D27F8E437BCD9A2103ED62B37F7EC03034AFE08768C416644
5ABC4EEDA92E77EB104754BCCB0D928CCDBB7B055BE766CCE468CAD420ECD95C
C3BD66B83B1664E0E16D53F4CADFB66F7F6CE420174B982C3371265CFABE1913
8026CC9C925FFF3FAE53532FA2834C7012BBE55EB63AE55C98B340BCB13733DE
8B4748FA4D522498F94BFB4234484A18F2D86D581289EF8FC0A3D0A82B20016B
9B24348ED691D206DBBE4AD3D83219C52830DAAE8FDAD87E0D258CC69754128B
F97217E937890EC3E530C70FDDF4C4304583A7018906F68376D1A2DBDC198C07
B86D8BC97A684143BD560FF65327A010425AD424612C1D7B6F31B19308AD8546
74E8E633B42EC6CA64168799BB4A88AFBD4683DCBCCFDBDC55D1125EDFFF1439
E329BC0C5CC42B6ABD6369C9260693557A98BD182D3535C55C70172AF217A969
7B3FDA4DB77DDFB68C4AC6067B70B911A7E75C3346AAE84FE648DB270F9DE290
E3302B1104BEC1B29A1B0A4AA0F5445F9B4083AD5DC441D42F7A17E978FEF2B0
7E18BE6D0EE4E8CD0708CF43255405F7423523088C72AF4B9FF2764F1877C5D8
515C405F275EF5835B8486AD9EB1D406DDAE231A169966F1E1069738BFCA7C63
90648FA99C82DC5B3E46AACB53141CCB1EB7D69FBEE9B214EB7E091123B08FB8
6CA997ECDC75C8394C05AC0A20E4A414B5353ADCAE63427B07FEBC5AD0D0829C
8D791D5035DABF8BF4C7CA56235F280A1CC7B181E48DAD284B19F24E21F842FD
0F39253394C1E1E059A77BAD6C9F6639846310EF79C02A2F6319B8CCADF5F7D9
40CE9023EEB6E83C494E0889B80D9C56CEFF1063C73AC1877253324B87B4E813
DDBB3CB3324C000966D1F3B544E7C1D64DCEAB7476A2E57A98E765230B81564D
5C7740C834FA1B76AA8B14C67A0D8F5312B20DD102A8E3C0019EC89C6AE9391A
64A65E6FD0BC2AC6BB0A252AE74457C6422CAB86C3960736D8D892BF76FFAC51
2364DF9BB709D9B7F9F720A17D74A9AA0876EEB948D45A029E991753E7271C50
45A340AC87C58E3504D16DBC6749645D3A1D87296C2FF427BEE178983EAD83CD
DA9B715BB5BFA725A9917FD9DBDADEAC32984D9FB85FED1E1504E592F72AA585
3C8D822BF5EEB1641CFEE938234999FC5108D0E935F37C0F2BB753AD167C9F20
4D705C3275E084503EA1117B788BDE08E1627E053537B474298E38DDDF8F3262
CC764F8CA69ABBEF77E80572D1E9C0C173F2D9B88EF3EE140B5EFFB40C488A20
6191BFBD30C18CC3F3C531667568DFECC64FE1F83CB48201897A6227367C1C73
EB434D73AC9CC15AE7C247307347A0C6026C44014B09C17C6E8CD316FF64F654
308B46FCC2F13610040191153F77E9C16131CF77CB7115062D3052DB0709E14D
4201384F2664322A8CE8340758AEDCC24EA63876BB336D057535D6CF74E95612
3D5EEDBE11EBCF837419C26D0C690B3D9210277C6506C0488D264A1C1BFC1AF8
5EDE04DBE2955BBA649074E8932E2A992D4D8CF7E1385139E26B4CB23B612D08
DF3666DC839270C53B5EA2E5F7840FF28C07DFBAD35C824CA29486F8F6EFAC10
9C4173186288F85935EAF72CFC61C945AAE209705D150B04389E3A3A607CB394
7CA04798EB526091B48A469C72511AD738DF129D14BA6436EC2FD0F641ADAB81
4083A4A3A27B8DDC60166CD8F39F442BDDF61F103920420120F10414695EED42
E0289231F37D978479FE0DFE0DAF702F2FB7382F9BC4C96A1DFBE7EB8A48D2F5
B92469BD2FE1974A7C56EAB8F3284CBF2E1158F05533269F3F46100C6CE87B96
AB00CE66A3820E352552C452EE90D2B38E6022465D1F77A39152D6BD593B70C3
CE7C8336F3B118396ED7711A948D512947C92273E55B4AF2A738C2C03D02F9D0
5503070F67D8C25F2E501346A72F53B07F96CD7C3BC3508F16E6A19F5D8800AA
0DF7D89BD0A034352C6BA70C783587C01C312732D86FD0CA9AB003FAFD940062
55F0F2AC4D26D57C33296B894EA6AE0AAB0BF85B190D2DCCB4FAFD84E652A324
9F91FAD173E21ED3A05C0EA432E61F42DA2A368753BB7154E39C02B4C1C5247B
9950C177FF59177C6B64B177C97BD15E01A80AD6ACE460FD1FE0C16680C2F4E2
2F210AE8C4740329E1BB998E32D38AA3EDCE034B29FD75CA3D1C5E3FDC7039B6
F9D7E6159CDBC4366800A2E47707ECA0EA73E1EC6AD46F9C3128D06B998CE35F
72BC11EC563B98024784E7A12DB3429AE002F3B71C2F0ED18863E8D30D7CCB6C
785B49091D16865BEEC79CD3533F83842E754D9086BFA19C629B863F9AA3BD84
F90083F551597F0B1F370A47A35DCED596E4461AB7FFB7086E21D013CFDAF8E3
9BF35DED0B12D4145F5C6C6B765A1A7EC64A5C13531E151E1300915FCEF36A41
352B6905FD22421C03761D9DAA8D74719233F3E815B4DEE832214A3172F7CE04
20FF0C0B1CF004B11C953D943A53F8835568FBAB8559F405E2356C473E158E2B
362BE711DA7B17E5A874BF14E532D888A35FB8C89E424CFF01F39FDBE11B3377
D5529845FC380CE8A29FB56A541927D8EADBB89D7EE989E31AE92ECB5631ACEA
320F867082159EBF61C6308009DE710899BADCF60F4824DBE03BBC46DF88DDB7
0D053199C3B86BC41FE30BB0C3A11C93F641BA780BE4AC5EB5CECE43B5FFC71B
9654C0CD0918DC37838BB877721A6B3BD63DE90FD71D45A925F6C3C9BCDF11B5
B83876B8DC19F58FD14B04C4521AE5ACE33A33FCEDD3B87020371F49C056111C
BC3C5D5F8A297A9253FFFC1131F5AB4BE5BF0514687BCFD5F19646F17B1A7A1D
E94536A24AA61A47B1A58E9DA953D99267EADE1C8F833F293778AE98CD942F6A
0ACE0B689F94C8C945DBF5CC6350A6BD9501FB5E3D2F6525FDDD54CC1865E5CA
2CEE589DDDE96E3B00D4F0C6B7AB68072E87A548FFDD0221708ADEF3425C7839
991A788CC6BA5A651B01EACCF0442490FAE83FA9304D436E3A3D6E1C289B9B87
015A90D0C6E96CCF2D72FA9ED9B79C21B1667E274C11AF2F44B26DA28481F353
411F977467099439DE3616B96E5B22855682E39690B59B9C7B24A5C17DEA160D
817B6226568D05E8F4245C90D1B145B38493CF67C524702A88B9F24411F96871
6E5FD99256305EF1BEE598C4244EC3509E7B2A8ADC462AA8FA3A04ADE131889B
1F40D167EA995B12328C9EDA7E66B20A1B56E834852D92BCA430AE206C0159B4
26A832F3901E0BB7413FD5E2288C7FF84D82CE7BBC5CC1FDE477ED5AFAC1C4BB
BA1AE633C09D2BCF61962559C0B257815119A48D07852E2B840CBB08F461991A
7FEE4A322051A7D11D35BD930FAA27BC25E2FC1E57E233C21AB044B32D92BF32
6C93E94E2D600A5584E6D369590DD9B1E85677D5503575651A37CE0396365A00
20B6F1A04262DD8C5C3414F518EB56D764B10B5F14F40420F3980B753CBE7EF1
96BA3201D6F24499E6DCF3692ADED6695874F06FC41A77C8FFF6AD0131F3E9BE
C0311923CAB620C1D382FB049F479799D6C6652EE135F41F3D4B0AEB043BF9C3
55A5C29EF4F8C47ED334CFF5E5D55986881E0FB7A6B06D7256EBE0D84D5BCBD9
F6CBE68F5CC53D80BF9FEF50C7F0766E81B5E590E43473F272B5BD64FB81725B
A2C85BE2E870025BFD7D46F76A4DD1B95A7E25430E347FD524EEC5E7422BD337
A8C9E8DF339765E539AFBE0460D4456C920284E0FA669F37858FB9DE220EE497
E219FCD7E802FE062ADEF24099A2291DB0B33077348BF5CC9DD1362738B8B961
2A7487B788DBF44D7FCD00583FE17504EA416D8611BBCCA928B65C11E78E65EF
AF308F7F593D0FE14BE467FEAB295AB0467BF4B414A0D25E4A3E34C8503328D2
89FFCC76B64F0CEF3BB6E85FEDC07595C0A0E34FCBF1299635EDEFF551C3D345
2E54FF9CD1503F6B55BAF00AA0CC1CED04AB6EF99A31E566AFDBC913541295D0
082639D8BF38239EB36BE18F257A4BF09E9ECC356F4041959CE361069897D013
9B86D1497736E320C62F9865D5AF46CB6E9AFE43C103EB63B58BF5F016E93C1F
23A619F93CC946D421B426E1BC782B2971AFCDEB7D6EB100853BCBD3296469B6
0C930CF301749EFD88C69AC5E6A7918EBD5314D156957A2CB416B920AEE70DC8
06CBCD8F468A565C6D5DF5818344B5D270C05D77D60B0A3658E39E7FBB2ED660
97AFC86B8C168CAC6D44274454E4AA7CA9F921619319394EC4D568EBAE3950B7
3A96696C66A7F1D75E9B19BA47122586EA6667753BF738292CCA43B7B4FF9568
4660541DFD9CC7AC3F38D6C3C54A10CCB302F2F1D9B7DC84750D90158DA9ED39
76CC7CBCCB3D35EFDE97AAF4C38B249C5F6307F4B8887ADB4CD1D9A6A5FC74A8
F78F01FACD379DDA244AC7B861325A9758F70935D55B1F77CCFDCDE8B92C56FE
0F7936B97E947E1BC624A43FB0DCBEB38BB5A39D16C2D43E99D94DD7E3DB686D
DE465212B3F1FE6A5A10F02956660D2B87DA8ACFC7EB5FCFEAD8AF1AA8C858F1
0A88E4A95E076FC08C5425C61F6993C879674E791E48A5906BEFA5B5D6BCC9AB
E72504E5881A5759BF03424FC890C3A96283969D432D227A24D54A22570A5040
1F456221C32F1571D29E54DAB452A9C57BE71C6A8D66DF174AB29E242F904077
46B9D78E81EF4A387FA695EF7A5ED568D5B95B29910049F62493707EFC1F0CF0
BFC0D0DDE69230819D2B39AFA579F91F534B15A83431B4BED65B0AAFC824A963
C5F13AC2DFEFFD7BBDC95A6B3BBF90DDD65A0C14170CC7BE4FD43E3FC5AE6A48
EF6358EC29D71C5F83CE3F5D8E5CF69B1086B58AC76FEBEF86528451E17D7DA8
2F5244AE0680FEE259DC0D453D793CCA76AA3AE79E930331BB6CA785539E2843
0EC6591FC47CE0E7431D2565FA95E94804C5C57BF04695B19E18D1E0A10A1EF0
F600D6D8FB2A5FB0D606BDFE812F0FB75DB75B26FD5A805D9D46BB5E15F4DF78
98C7CB4050BFC255644B6AA755A5367DBF52F116E93C1F23A619F93CC946D421
B426E2630FCF763EDABCE47FD992FBD1338840E0F46EEC7FDDECB37A96994FF4
0B63FFEDF2C8312C847892F04FD3753587DB2DF74B4F954361070A5331C55EB5
D0DB70D62676A83E84CB34901D3C1D592A48505BE430D42CF7A9442AC60D7087
ECAE45A1AD9F508FE537F5B40CEDE1096DD623C344B9FAE0A4390B3B07F455C2
4E3FF29B8996EB94C76E048CB3F54324112DC66E4F7A66EC82A85A423AED3C46
EFA3B7FD5EB822D24EB4A4AB1B2C85F2242336BA4E44DA699160F8838CF72749
3E5D92CAD819766CDF1519C7346451413C5338670011232DB3D648918F1CEFDB
B10E74A09791A69E8620A52EC3A8AB33526E0658A3230D245348785C7C06D6F2
882911AE8DF3C8981C3B26C42E52DB5332AA7F98FAD41F5FFEA2B63739E9072B
CDD886F09871455F3BAFA4E2BD9CD0ADF9ABE8E7CF988C3191B2FEC245FB9657
162992D85248ADED71F56D3561A9DF1C661670AD0B2C42B023D9C0D4B99B9463
79B5A7E7B5433E21CC67BFF9E8E106CEE6E12FF3C51F0E0DB06EE539108CE3D7
C6D737A6B221FAB4F88FC73674092C631DE215B22EE9C0FA967E7DD687D99A05
DB2F046C66FB961F688B82C03BB5F1D3FAB7A698C82D5611FCEA5603454C8807
787BA056BB81F03F482C8C3738A5C50D990187F1DEC4D092BA631C1B78533F06
FD3F597C38189CFB31BD28018ABA76F8CC09DAB6058F016EEA4BEB6D070EE775
A3C7211AC67AA28D36BCA80B6FD878D46C12FA76321E23740B60B6D6B1F7ED83
D154E66B82BD35215D8D83A278543F8C919BA06E3655D8096D73F650F14CFEF8
0336C987B2E86A49ACD035F612458BDD0258EFFB92D15587237A054B74812BC5
36D0293C0101CDD1AAA549C71F935FEC2125DE6C8A067EFD1E0B0354CD853222
F53920BE2B47FA5D3A9FD4DB2803417CDB58AD65327C76C367465D010E594F2C
4C3B457C1A974B8C3036EDDBDD0A2A00F80976145258DB44055B6C96D636AADA
AD610D1007C2AC6894F03C8B3F3CF759CEA67A6278CD0E603FD1A9BABC89CCE2
74912AC32B77902C88C27BBE3F4519C5C514D10D5FA90DE63D7C1176BE4D3AAF
BB7FF25E58A9BA39C2DDC148CC245D2C4F5B93581B03A58D3BF406A132E364A0
C892DAF67396390827715E0F24361A8023F4B3644234D30943B9C87E3BF7CD73
6DBB575FFD3DC4CDDC9EE26AC0E8B2B2B483A5207586D639629779E9735B913C
17FEA940367E70FD66925E7F5961EE0A56CEEC5996E49871E55B00419C5B3052
BBE8E3CA6978EB883411DBCA1BBAC782356A50478C55B32F8836FEE011BEF8E4
54D219B4CA751589AC3BEF29A9054C412C795ADCCF732185744432749C74DE04
DFF4501EC5E6E4D7C2364060BD956815008AB72FA6BEFFF8CCE74687C88E363E
AA10799888504096A75685099366E7706C3A5ED5A3C6ADD4CB34B261A4C7A078
7E0CA4B5A8DEB64E1352EE6877F065DDF75131356988DCD4E39E9C117BA54FA3
E7D1A4634A9569CDD787682150FDC348296E8C69E1F39833CD66D52A9F8105B3
1AC66FCDBFDE585DBFE73144248AA04B2BCAD1F8ECB8A09E57FFA2A67AB7B356
57AC4E5E9917094AC041F351D6422D8761999A26C310E32CA2B2DECE2680714D
51C55DBE38B239BFA050E6300EFFBB5F8C21D59DFA7A7EA60322CD34AFD977D7
18D10B649647ECE50F2A3411FB05E8F5C7E2A1A3E4AA7E26A9F324EB0F55CB14
0C2FE3C69B967C5D565D46243B69359C196345FEC8A23690C09F63F9087D2067
0927CD5C97E945A90CF1A467259766F91FDBBBD8E0DCBD581DDBA4507D7642FF
3238E1BB3387E7ABE19E48BF0AACB9AAABD401F1500BD522DDD14258FB9D4CEA
8F4819C975E758CF8E51D1B07F290A7920EF62643C2125EF89F59095172FA669
81744151630BC7B0A489E60D612F9276F6010E4F5E53CA8DD0241605925AFC9B
57BAFF07FF598CCABFAD74DB9D6BD9298C4DDCF9D193E2D60E534D70AFE8262C
50677C9A14933F12CCDB4A8645F82C87D678C30486EEB1693A2A56353C091916
A7FDBF8E2C25AA6A476E75423AAD37666BE7D6961E2B5BD858ACF62DF7418F46
152A8A6D86EE76F9A4D98904D41DCDC60627BCAD70A3533CBD7F649B1DD16FB5
158CE077A85C95DF8697D74E3ABEC804E63B579F6F95A8B2E1F80D2255938FF1
15126F5CC52E0A2F4EC6C8D7B3C8AA382E4FB4791E9F045D596547DD2C972F63
DD646698FC3B7C24F5D905C90D5DCB37049B6F74D3884ED125C01B8FD382B372
C77493B5E838B21B1942452E09428FBEA90BC60633120AD4C40FD869910DB9A6
77049FCD89D53AFB4F1C5DC76DC06BB76FA4E0740831F83F10D040C9A6C4A8E0
E619BFD99D65344BB7F57A5C1B275D7DA7DA41CC2EE2B5E64CAAA1C9B52B9349
BBE45F235F2D1C928191DEBB521DFDB263E16B8CB68836A2E641BC14FEC2F509
B8FA1FFC6FCA4643B338A52450A2D25292881F32A362218610891496692FB795
6C92B9D56321272AFA45D02D01E544948B727D59F869AA9A3BB66A6333B5C021
0811B5C4FF54681EFC777CB734EB90B9C6950615A0952F10B56C6ACB7DEE7ECA
1E642A1A982EABF1BEE2ABD71EEA6EF3282EB29E9521A5367368DC7BE44B3724
D0A9646E550B18D9DA48E79319F5A9A7C17E590FD23C85787AAB7DE0B0F41C10
ADE2659FB002EE75CC7FBA6B2C6524AAADD3880E739E29DC68E19E2A5E872962
E97BCEE11E12912F21BC796C92C7287587BBD72E539EC78A59683A3734D9DB41
1B659E22131A6B52DC2FEDA4775FDB148DA42E38D5E588C415D9ACEA55E6B601
4A26024DBC65E902CE6D5ECBA723F99E19F09C674BF1A3F2467DB06D9608C2A9
F4A1B5C3BF70CB97C0AEEBDDF56D0A7EFE4EDFFB55E8CB1176E72784179B4858
47BF3CD8BEEDEACF6957D921F60A8825B8AE04F433360C5E250FCCA4AA5DD8BB
1DE007C99516356E2BEBC8A809B8F8C82971CA5953F82F586B4286C82DCE895D
3D4AA566C920FF10D5C41A9504E4D3F94405E4C58EA0F40E199984A66D9CE801
80A9C9D1E948B58042B5B20585A942314F62FF44CA6FE8C648243CFBA50F126E
E28EBBF1623A0C84BAE2D7C5B58A66F2D3E538333F55E69B69B01869043B7C4A
AF5FA4C50921E25032F1F74FF80CAED8DFB36CBF841CC1882247608A9270615C
5F8991FB41597D3A7FE250A7E4EA3E464D226420B5CB507BA971BD482422B3AD
0DCED84B6E22695A67419E53B6209D3C3C61877CAA05E5315F6B0590CF330022
F19B524CC86D959A2AD8D3DFDF01AE6AB48FF8EA42555E71E8BC4303C307E42A
A0D48B153F2A9D742C6F71382EDBAC290F87273AA80687D2FB49004B362F27C6
EFCC633E8066FE3B6E58AF945359AD65E273D9DD6953B742C9300D16B5CB17CB
0EC4EE9BA5F1EC62B761E9862032DAFA86D6F7588427937B7B70A24F444FDC7B
03042015F86ACCF38E4547E68295D4568C3894B477B9713298998F1B3B9DF531
12F31E32579E3479929455F00E41A8F92B7AC7555FF72624E377AD12D88535E0
7F6B58A5D22E4ABFF89B0C1502F98ADC321EFF291650FCE451A46BC742608D4F
E4F0AFD4900B37C79203F121F86C8ACC9F32EBFA1B83883D41A10044C875EB82
9D2E83B84848A9AD7542844D77B3893EF5EE4E87B327F7A68FC6F74604D0817C
4D3DFD8E5C60C829E825FCD3D2D9EA17B2175888F949580DE9C4F0EB2CCA9943
295305F7D4E57DFA0A8A355B36078070F71E5BA3F6B3F85515273F9C0F33A1FD
07F0A8C298D5ADA9FFDDF1261AAE8F26A9FACB9C9254C481098393E5137B949D
F8A6A61017C9292C4741CB0C0F31C4EA26B42DD91FCF1EB4F476A2E26F55F42F
3B8BF801BE60056258324AB6FA7ACF2072140B9178D20C7913AEC19A6C6DF5A7
5A012895EFBE11041EB973E3E65CE218557A33DCBC8152420D706B9978BAE5F4
A954033E807EA9E840A29DF1F053E91D549B529A395DC22942D9D4376B42F68D
1E9A6196C08776BF4802A2564018952DF650ABB28EA0944FFBD6703F51816529
163BC49B41E2FBB829630FF3CFACCABFE66A6E6DE6F1833C9DE2D0AB71E72A23
B9D4B29E426C5D4D1A832DF1D95D88AEAD5E6A64FEA7D43AFC61B7DDFAB9174F
EC87CF4C6199CBC4CB0326C11C6B7C295D8AB74C451DD69D99B91F373078B55D
63BBE4A76DBD53314525A55F5561B209B21D8F28205065E9F245A9A66ED56681
A3DE442EF8547C4120B2C208698C50B69CE5AB5768C88DD848A1C83DDF1FAF71
218A2B20A1CCE52B82849062240A7437494DA568F2E85BF3F9DB8197478F3A26
196FE49256EC5B2BD871CC8EDA1623977F6A6195AE2BA162B4C9C7EED1FD0AE9
039083254EC3509AA868CDDB6509C3E94361A07616718AFBCBCA672503808D72
7335076842F334252EA4C9C6967BF62B1C3E3E32144B72F250B0F27D2900E32D
BF52498315ED59C73C8D7196B3168C30368B8FE092C6EC1CFC6D2EA8852158A2
CFBFBC24DDECBAE62952FFC2ADE8026ADA3AAF498608343B92C2116B21D7BB8C
456C7408892070621FBF8391BABC511BC3BBA85D7414353E652AAD9AA660C2CC
D814F1C3A890FDDE70262415DA4021523BB7F6E3940D50E4A1C77A0865E592C9
9E19FE57C4AE22546FE8834D8B9A63629A0C7F46699CECF5365B6E4AA9C24F54
4DD3D38848A7410DA27F44D56445A8B67E86E2A0E25981C7B1FA4E2D6CA255A7
DE3FB2F8D2284F50F4A71111853FDD8D25B52D1D2E7E10621D513744CE288A09
B4DB1F638ABBD6233BE4C4EDD1AEC43E5D9F09FE3BDE094F88D678CC7D5791E0
DC5F35A51D180BA920D1570E63FAAAA6E96BFA9607BF9BC8D6438521599ABE99
99CFA771785146C543B436033AC14CD8FB4D33AB0684A11EDE4A5900693B5052
1B8311ECD68AC3F9DCC71095107AD376E7711D423251F3B582D8308535AD1FEC
0BEB07AB05F35D99974D313E785DF4FEFBB6C5363723705E9E48DF20AABA1199
144FAA0D76676482A077EEEFB85DBEBF61BC4A89CEAB92E5CED896EB01BA4463
48F51AA73B8A1BE4A6F459CABFBCF34497A3212616D6D3C7AEDB388227C281CD
0EDBDFAFFABF3BC4DF6B18D5CE5270C13C09656CED2A0FCBE997397441E8657A
BD2E0363D9286219BFE03DECC6CB07406D2A0C0D5C3EC4054524D9149FAC931E
8FCC24A85FD706A2315830E2C86C55334A347F82F0412958F727851F9D9EEC34
4A3BCF6882E640773E4EBC1D9B2897E23547CB4E96E78F134D05EC734E0A2BFE
16893E00CE9D769B6620C8DAC14CE90288A96B05F5C3AB8E8101C6ADE9A0F3C4
DBC8DFD50404644B1410613F34600A765D65F355E68A56C79A7C327CA01E4A57
A98A00A9B407A7CE96F9519DCC8563F0ECF4A8846BD5BF4D91AB66E601ED563E
1487737B97BA854FA9FE4EF2D1E6A1795528149ACA408B89F3576D5F2043537C
B25620AEA4D4FA10CEEE4D005CBDB64E0576BA004D7B3E9934476E826E6F5268
EB0A76A09D48477A1BFFF74AEAE7A573237B1DFEF5D2B3B91C580C1735BC1D2C
DD261A50BD5CFD8BA26247BBB655359BBB7F1BD35BABA529A5566CF0BC862460
F8F5230A130D048BE62651AB94A0CA7D8EDB0F10C8C1B63882894C5EFD31BB15
0DFE17ECFF795D3F4719FA767B68FDF9824CB78CFD0A8A05987AB6B1232F61F1
3FECF227B3627B3B9464286730CB4442BFD322410CE37312F7B88B53CD1962BB
5679CBD8CB3C06715744B17596B38D1E79E6E838E1C6826AF254EF95EF001C55
B3E8E8D4CF3C691A62A76A204CDC84F250228E47A38A8A5B3A2BBDACA306E322
E4BD3DB2DCBE918ABB2D6649940FC0E2664366BD6AA9300553588D3B741D1492
4F69175595D66B76CAAB99C0B1882C1D9E8BD4F815525E542C8DD4E85E8143F8
FC54F97789D42E4D55E09DC16F00034E0B1030E104EB49DA5673B6775B49073E
2BCEE7019A67FE4253AACBE466FAF85488608E888C478A11238A8308DB80F373
489961CB094DE24200498CE44D4DB3495CD293313BED656EA42121D535896EDC
9394632F030023506DF48FDA33301A20B4F800781BE0C8AF75ABAFEC431E06E4
FCC88BC5B3A59A865FC5F974C215B903119E896A3A637835638964D2C90E7E3A
4CF8AA60B68D3C65B51BAB23D0EE135260D11D6F112EF25679E6B149812A9DEF
6100ED52B5935C327F558C308CEEE9A5EA754B5D5594920A7357F91E129B6E89
498377F8E026614571B06AF4944369AE7631EE2C01FBBACBB40BD6DB1FACA0A6
E85A3628D24EACC0B1FA2C0CC6BDA33F6E70CE8D50211DA2CB9DC2363538141B
B8C9F71C2ABFBBEF381765189F3487CFBE833A853F0D2B437D888FC0AAE2AFA2
CA4C0E4E86DD756B5EEE04EB5A0512DF884E9B36818F37894587DBE5C8E33F3F
7320C6D309D13F55B22E740E91AE2B86ACDA1E9CCFE84E4A6CDE85CA9CB43F60
7909858AC71C2E9923DF50CCDA2D80610259488336E39BF95D7F2DAD0FADEF1C
8CCBDEE9029F8E870E1DFB2E1E771C1498E4AED07F227F702E6BB3CDEDE6F6F7
D4C1C06E39CB6FA1D2BBF8B7640A94754F7C23CE210123C4EC8EA039F18065DE
DF8D4AA1FB678109CF849FA3BE1058505FC0051A81294C4BCD84BAB28FB77057
38F55C16217059E96324A9E872D82E78D70AC9F4F8472A4DC882FB7B83E58FD3
5C2B75D71553C3BBD970A69392EA77B63B9696FBD60A40160519180BE1BB7737
6BDB70677DACA4A9C9F9C9D3096F47D6990463073539D14A44EA10D0A2DA4B71
0B144B8018F1B624755EFFFAC1512B08D8FD9F98763F0CF16D6E5638BD148E11
285A9D59C603D8710A59A8324AB0D56A08230907D5F95D1960FC8402EC3DAF23
BD4B4E568454D403D9129762FCF8DD25E0169DB6C1AC8F4FB7C457FBDE88D65E
39E5B2B63D4666EDC23066459FAB983FFE2FE9A735B88861C0B5D63DA2D0B84C
9A2A1219327630155BA0675D21AF8F128AAC8C18EA0D8690A88C673FAFDF47FF
0150CE5E69EC758E0BC5E057EF57078EB9458467A09E723C0DAE8C168C4A297C
8B8ADA38E25C02772A13FA19A3E859696ABA7A1796D6BB9853838BF5B2C4B880
355F3EEE875F6DBD608BE837487781CC2595A6E484F9F7428DBF0612F06C0B71
EFDED0D8A90B48EAF08BFAD493D3C4F8BA3E982BEFAF1B98474B7330529E8FDA
E2315DF89DEAFB7E662C3DC5019600745E319EBD1FB616B0F68D797F6F45AA68
BA75E9344B8A225A4D4FCBE20AD4A4C08722F422311A9CDC7B290A480DEE283F
EA8CA17C8E3BA637FDF7007E12D2DD40ACC4E414A183DE6C14005B5D66D2A9FB
0C531AC496C030019D1EA748EBBD898019011479AF202D9FF01819FB2A7DBA1B
6788AD6FF919E8EEFE08714BFE67A1787D63FFE6AA406E4A50161E3CE9F01693
647BA2F04F97425426E40E0CF92E1B3626CBAE621B5C54A80148E04E7E5D1673
824CBA37BCCEB06BC3402B83778BDC98676A26D2DBCFDC3A0B48475854866AD7
1A6C0125F25EB2F857F88FA88A9B151074D73F54E24907634743AB401F90A605
C2ACD1727EB5F240525F947AB0C4A0DB7F221EB4331B48FB1BD25FC03C9C1BFC
28704A64C11E8DD9F4D608F49B2C1FDE1A301C4337D1F37ED77BB83EB7C0E2B4
210095BECDC088E071FD132B5DCF355B3F69C1BCDDC37CCC74796E8543C6E385
D88FDBCED1AB9B0033C735F6E618D1F263B27A348B858EFE81587A7023D62AC9
AAD47C18A09C479CF5EE8A998C3EE0B7E0AE748B15EB59FC5F59F8C672A85204
91FBDB9FF1C71A55A931B95A185AAFA54AD7523AE47E7D1AA7C38C5960BA2774
700D81007EFD69B385DDE19EFEDA3F9006C0B4B06923BCDF67F88D52F33D4100
F2CCCBF010791D5258CF0012AAE6D12515A771768FE35F7E87334FF34064D22C
BB9F0F4245DCC0633C7A5D73A63603E12B30DD5235CF517B350FACA2F42E6A42
D52AF6EE6554408B8799BFB5B61488143E5476152C4A0230D6EC72FE096BD348
42F2BC1AD5BE390477831A23B151B149388F2F8A72EB3A7A818C37D2979DAFDD
7F327A85FBC5592555C1D5941355104BCB5CAD6277970F9F1C128F73AA8FF5F4
96F675A710215C8B558E09A2BE5DE54E9B976EE25E110757FAA032FA2DC4BD6C
B19919F0D5B872B27E61522B3F3E390A5EE48C35434C6F2D7CF1150AE371D77C
8C9A492C52CBCF70A68089E685BB589E0269990008EE88D26BD6255454BB4D5B
B4702A6E7ACCED2C83AF66E6EE067BC2C6B067114CEB390DC3261DACC6826E42
46E8A276267B8EA72EBC085A44D1C3A832296D62F72287DAB1E640A7A4C93AD6
82B4FA35E6F8282B5C7D1B430C89440293BBD325C50D0BED5EA9039C0EA48840
8128BE929FE454F7A0A821DFAA5561AF025785A4A00D643FF1BB27F117FDA22C
E46750989D884BE89677F24BE282A0700496129B76092FC9CD541BCBE6E28F30
6C4BAB8DAC06C33C9FF1AF0030E713C1504E001C0EDE5DAC44E080FADA035A87
D2ACDC62D0F54BF864AAD3EC696AC6E6E7EABFEA2DE993F913F1AA799D2E1B30
C8EE899C1F0133F179CCEAF301B907C5D54CBB151A51D9F2D58C57B332FB51A7
F5300399E1610D92E9C785E6CA77382491809E05A0D22728B6C612796A86E317
9DD0753E1AA11ADB27923931BC54F80AC7E344EA92AE8DB48A8D565BD762F037
9F1FB2081DC00848072F5566E7B4036E2ADBE4BA982C641C3EDD8696F792A9EB
7ECA5211F96F8082222DA923AB01D5B19814CD559BEBCC9068C04675A387D27D
E1C95EB3322DE417846FFE5DF75C6C7FEA66084169F1DA03C406C5169C77868A
FBA40363AB928E22325EB52DD5F6FFF2274C2EC72BD7DF8D7914DF14A541992B
3EF0F69BE4251A8EFB15F54A9BD9E5AEFDCD31095BCBCEA6ADE129DFE4E80F47
051799E197DE2D95390E627DF60E9175BB19FAF6D4531FE5F067CED7EDBD2C38
478743F63DC6CBFD114CD9EDD9D3FE528918F077BAB9868282FD34E248AE3D5D
E6522D15D79BADFC2FD34ED7AE2366870B4B6C3F093315449C3551EAC8DD1A08
FC3553FB1005B77E52E519FE355D51C7A2194AFFB9AECB80B4FBDC043AAD2D22
650025FCA755B2DE5CD8953E9B2F26F023F2D523F7667784C004F4442D0DE836
627257E3DE2657C4FB5E50A1B3089D3B6728CE07BBCA2202F2F6644F9232B530
6DC06A5575204B164998ABCBA7D367997DE34FEAA2A258EDC89FED8DECFB346C
4568E67C8F42509346DEB970105C702691AE24D27AB925516AA992E4724CE61E
6AA59A56708DE702DF5385AD1563F60D4451F56536922825268D2188A711B3EA
8D43526E8C82F60B9153C55E8D256B1735DCD4D0EE6C7795ED686F9AF0B3987C
9B7CB692E529664A69BA820962CF8788CB0D54CDE1242116407C2E41F78D36AF
50D1F3A2A2D4A94B286DFBFA9C333A17BE2E6F91CE6045D01B9853B3E14875FF
C48A34C4FF799CC0302CD56A5BFC02F749760741447A188AB856CB9788D9F6B2
8404F7C528AE6A71800744683BBBA2C3FE5B9A31AD40A616BBC4C6A25E062317
D2B78E24813D4468D069D08B3A0215A353EB2E3400B6C321E12114CB107EE54C
6FF2EAEC12F5D8B3EBE0E765476DB1632EEDB54BFB3227242FB9C1E3035B089D
5E714DC81659FFDB319597E68A01C4E96383D3F45C0BE42A93249AC8811EE16E
6CE72FEDB612D1C5B30322CDB10E348C2A750F1788034D32E562AA28919948B4
41FCF9074E564819D3FCDE2BDA9015700D4FFFC7E2287C88C33A59A37FA32C4A
E9E4F6F5E0D9FCDFF51D65576280FBB06CB8CF6DC775E4A3D0DFDB8E6AD033E6
A6EDB03331A78EE55377C164FD97954B8547A20C2589BE7A4297029D30AB1051
503EC3A91278AB0BA256BEC37106286928713000A7860478788B69FAB646E7C4
27580EE87360C28CF29796AE04B4A93ADA21C67A858B5A068135B49C8A995647
201E958189CDD85FFFAB738151ABE3C1134B33A52A1336EE70101D5499765585
5806B1553870938D6B9276DE448CE8A7E0A82629C1809122A66C3A481424DE70
CBDC887CEE6B06F74050E8DFE3CB981EC79BA3C11E808DB44EB69BCA55C03E29
4E47DECC71C49D566658C5A9DB4A4C2822169E24CB07641FE119A3FD7A604AD6
775A8B34A41DCC8C8F4838555E317AE5A7BF910AE3210CB8787DA184F8D6FD3B
39F6FDCEB948B0BB47B6C3B4ED66A8DFB7CA8950EA8B87A34C567A20835AC6ED
4630EC90C8136DBC3523FFEFC1043AA2611B854361286E4CD251D2C1B86CAA94
37534C1D3B4FCD7689F591D3F1DFC07915697CAF9F8D7C4D49A64E6E1FF5D8C1
B8B9A903109C691DD16980F4A742A8EA1549B86B35AC6D3E4B80C737EEDE210D
49DAA35F9C10EE425BB8A7F34F4A71DE01C51439FD7975C306932B71B7747090
E76ADD01FADEEF35A66B55443137B51F8CC00BBF72D17616F293B1A1529D5212
DEE2AC256C784F8A80809D227373157275014D31AF6410F8F8E6C1DBDEFE246B
136BD7438891FA169D4C1680F75041B369FEB5D408CBD859E19FEF74FA53E708
1CE03028D14ECC1B9337C2458626589E2658F3B62F6024B8348C11F6C1E0DAF1
4666892E76A589132A4BF4AE44B1EC29E206C8E14FEF1C15D14D90D86874BF82
9E6F3CCE041588F3460E1D05917CA260000131A2DD7533BCF02EEC3DBA771BF2
452974A000593C91BFC3087A965F6A5462C4908E7A14875FDA8D1FC027A275B7
B4083B9BA4BE961EF37A00444ABB34BBA3B7F8887572CBB01E9109715A0D6202
C3BF1B8CC586F4D611D1D52862DEF07B431D84FC222FC79799429F9B87FD2FB4
D3B55FAA1214D079BE40F623CA8EC75444E7AB139313CE1D2C0CD622E432DFF4
13C05274C575549E2E8CF944AE12708CCA0B485A3DF2B2BC76DD2305269ABA41
147860FEAB33603374B9B0A863477683B699A586E9C37D7B30790022ABDEB0F1
5AE011528922865FDCFBE4F5C9A5987BC5CC2FC455A40153E0914F48A4A67F35
80C0357EAD497D042BAF4F071479A3FC5D3D05320A8F3EA227AC128A344B50BB
D5AB6F9B536EE9B2720B13E5EDF7033E894E2977A7891B44CD36146033C72F8F
F8C026FC7F83DA7766F8CCBC09E376E9335BCFE64DC584F5D4A244717D85A5F4
E152715D156A12221A1D2FB248C255039F24141AE68582BE5FA6013F83808636
09313BC4A846754B67DE6488DDDD5D84653C128B0159A77B56B7BF077F7F7343
585B300271B250DD27F899B8477083CB148568E2FF3B93DA33A6B2B586BB43D2
D65608D3067F3E73E1EA37B84047D3292451BDA14A51B25A6033D59BEAEE75C2
E50ACC1E6EAACEB5EF60EBF95FACBA462B7C525ED8DCB26D2604342987658A47
E4B4DDD65E4232745CEEC92CCB1EF9F9B71C9348933D13A606F8E26C45CBE49F
8C432D003472253D2D0CA036E68976F6C527637217B3E07702F88D43BDD7EA95
2C8975B63424CB648D9362D62F3821FFAA2D2559DAEE51DFAE8BF4A29534781C
9E43A9C9AC2B4EA145D85A029BBE60AB9E8CFE07BD1DC720F16F5C036889449F
98077C2708924D8CC0BBAE61B7ABCCA32D2C74B60295B5C44C5138E806CF2C37
8CDCCAE174177D0B585E694D4DA2EDF78F2AB206B8787815E56CF4914DD04300
D31DDE18E9F39D20687869BBA84E7A3C8F802671527C88A69AAD036D11883173
6645E5B748E7941E53A6FDABE199557E039A0F83B97846C3ECA745E48F424D5C
F079996EAAD6838BF29AB094D493AED2F0E7E68ABD45E6FBBA7D5529FC19436B
B808C9572A0668E0D73BB4A5B9897CDBD73A7E18F375C3462C4F2976A1E6E213
B356511D4606631F9BA747CE69BA2F89C9F94784C6AD4B5FC83FD3F93ACF7BA0
7C11714B2FE94B5ED236B7B487C1D8FBEAD8D54D9C635066C2FF87535AF5F397
98BA21A9F4E9149CE2D3D63B2F311074964B969BBC90480BEE6DAC6A529DFB6D
A14A0906F2BEDB729285FB7D51DEF64DAADE7689119CDC88B715BCEEABCAC7DB
D0986684569FDDFCCEB0D4B299FDB91057900D475F162B7B58D590FA394D79D3
2E0C1F952BB919A5E8490A86F782D9D0070A5AEA3CF71F56B5A48913E1885927
812148C19AD301B935D1F591061FF95B0EED4C4D40605A017CB70A99E4A553B2
9194A3D771E6DF448DD937077F2547F49F46DA5CA75219B2AF69482B2482811A
FCF5268C75
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSX1440
%!FontType1-1.0: SFSX1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsx1440, tcsx1440, lasx1440, lbsx1440, lcsx1440, rxsx1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFSX1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-238 -326 1844 909}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA6B96583CD501F89BC45C7597DCEBA1A1F483DCE
2DB867DD3051E0094CE179669BB45906D49993093E9123E74E0D043E05F96989
CC79F8E4E74DD5A67862742C72457F6B5D088128F616F631DB84C5D2123834AD
432B6A6A8502E88B914A17C1587249B79BDCDD0C9CB28C6FFCC7FB63A1106533
660D6C8FA5F7E6B6E8FCADEE66250C2F351A6CEABBC35A85036C4BEA894BCBA5
84A1031C4F978A3A659C971AA5E6C9186D708668A6F1984D8D117CB19F915FFF
5A6D2BB3A989EA46D4AB6AF86B08081D62B7293B9A1FCBC4C73B53B218267790
C6C0FBE6690390FF903324C3A149E9309BC05BE5DC9322E80183334828911DE0
8092D16A64609486ACE95F119CFC31CEEE3EE3BD855E47CB5DEB829BDB29AB66
75249FCA982AB635B1D9792440525B4B703A13F5C7B2BD09650EB121302FCA78
BD602E9D3FD72CBE619A8C867263508420DD9CE391A7581C5068B3F9E493C108
0681D51B4CC140738461DF0A9C8D2EEAB46DF8C05ECD81940D3ED562AAD12EAA
2361AD8639791EEC173E59B9327EA2374DCA1BD956BE227CC92BA07883FD9F52
D7F3C89F481CE4819DADF2E26AFFE6C22F0C38540F8CE37992C8CA844A4512FF
1A74F991A47A1B7A78B196DC1D21CF5E6FC299C77C839276A2E4E07B1AAA5738
5EF6AAB4ADD928447FC809D2BC1EFF60816E82C6B8A217B27CA609522A90C771
BCFC8AAD2A833555B693BC5733B3B856DBC473E0925B6838F4229B8992B83074
B80AE9716E0D02C68404CFA3F35277DBFC9D9C09F812C2047174DCE71ECAE26A
40DB63C62F345629C407B2EC5723BBDD1E4B85C41D444880DCB5C6F4457709DD
814CBDABD69A48BE50E57657B373A44733503D4DFB43726576FD8A84960B9AF8
824628ECBD9E1B33C6C993822DC5D250F7F90FC4B6CD00389398CC3FE9E51E1B
36D92CFAF283AED79E49375D201FF99CB97155C7490BFB9C965B8CCB9E0766D8
032ABE75712DFECD2A63D8E12FB42C91CF67EB7C2523BC02292E1D1E419770F7
03322DBD74AABF8FC76ED30FB0122FAE304B84184AF757886F393186B5BB030C
72397BE2798DC546A507927A6A8852D5B7C3BAF6C95FA301B8B38DAE91ECFD67
C463442638261697EBFEA504601960BD18B4DC6C1E6EEBD0D40D5BAF777A1B1E
43FC1CAC9C13BE788C47EC5691E311F74D5D8E1B4A20F1FE41239540833233EA
063CA246FE2DC3A9870C2A6C5D0584AEBBEC3C4A876EBCC64A3AB8FF3720902A
7E5644848A57346228A13E306DB5A76F1741C44E8FADB2EF2903443283DBDF88
9ACF0BC604562958033A47EDE8EA24F0269DDE4D7B7A32F65CFD31EF732B69E3
A51D690ED747B16088540239306BD4E9774576FFEE1739B003D889A6FBD95A9C
0863EFC3F5AC56F4B050F26C96006C528F618077F413E94659865C54AC82DA85
3CF3FF053FB78EE140953D4A4C5DA1B2BA30F234534CB0FB5AA7CBF15B560989
C7A89CE3BA5ADCBF48B836CBFAC5E6B4A812BD40B5E72F5BE5CA9A6A26503033
7A8DC576F4A165DF6417181369AE535F8EA8DE3987D75B1E1BB91540EB95D9E0
3CD928B671BFFBC96D253D6AEA0AD2235663C579914D39D71C57C93F19C7EFCB
31A980B6A05B63D75B83AA1C883DC902B6B3C8CB7DC9CB0006F626BB50A62CEC
CEF5A56712EE5E31D9C4A79F0BF0409B44C2298C76871F1F34DF75103F60A11C
8227669C1D758D8C883A57B050FBC4A6B84956B249AD29281A239CEF2D9931E0
A182BF3E3733610842E1E3800381200CC97A0D090E5F37B5BBAE583B767E89B5
1F70ED56E189510DB574BABCA8DD0FC40A837E17CA7A7AB687068215504892D7
A72E5AAD673C77357191A24B41EB7B77C59EE90AF4F02BBEC77B3C1FE764A569
DC348F052EADD055C97DBE4F4DDBC96AF82B275307AF550F3C88DAFF499DD026
33DE6BF6A7C81748D36420336D66BBD81C7D0EF2FA36EDF8594EEE5458B9DD32
FD0FC10B2911BE7935015180835E9891F7AA4381EFDE8AA1B615142F781736FC
A7C857739C81401F7217C813DB56D08E75819DCEF46669AEBD12E94EFA9C8A8D
56B0DC6E93ED9D24223D6B8E434C0E7F651E7D6172EC63B0420BA3482C3A4813
9746DA6E93B28E3223FB65BA83EFE4FAAD6EB84EB17E62CF33D227CA3B3B0AF9
B64D129211F46911B3352C0B1428C1780D18B60391C5C4EAFABDB230B4C94657
C5279043B23AEF6DB4372F12030266885DACD6B62B8BC293A7C3FB8DE2F42444
65DD080CA9C04B43955F92F3BBCF238EDEA967090112ABD6810D3B0CD9B17F2F
4397976A72E90E3B9DDDA8E61EC4FD0D695AE00574D0BD030643B1EF886FB664
A3E13C485F2CC8E86EFE6A1FDFFD8E22C885D969CD18C61CAC9790AC6E54D998
B8E441F3161074E3B4194BFAB4FBB152028059A8909845C2A0BF4E171AD4EF68
CC5B3C2C095688B66DF6D74EE9FB383C131BE8F85C95571926E6DF864FD27C13
7E4ED53C77A31A0D8D3CF0766321DD10BB3D1024E6C6E15097A292A220CFCE5A
DA1E6494FFF9E4D785CECD8DD58D04B4DA88A5D420C9D2D361E16530476A74BF
EDBB37E08E183CD3F0045F943DB20F4B844702D282CF72A27FAA46264C7C5635
DF8A174972F5DCE5751F05E62078DC1DFD763C1FCE48AE61ED515C071E74C160
B266057F4EBBBF2A1D8E883762333B78B0269815BA55BB19D35A6ED50CC09324
02AA5C039E02B7C7F7C822891F8D6F15A2E82B52E5C2F883659226B762CCD6D4
76875A9394DB3DFFE16773FB0085E4584E589E242831A2881601AE3DEDEFF2D4
BE2EA46713C28573A8FFCFCA314C75851E7951E39295F87BFEFD0F80603562EE
1C10F0260A1C5FC6AC81C641D5B657F4A9A37FF60CEBF7927D50E580B348598A
3744487109A330FC50A1C152AF7DD393558A441EC9EEC6B7BDE9DFD467BB36E3
01E79964300C8C4E43B9D0E6C6AC093048AE73DA5FA01E47A50C672B7B1FBFD1
184D2F7777624B250F7F9F2731E45968E23C6FBC930CD472F226E8B95781FE1A
BDBA26588082039A41DB1D1E6FE2F6A1E53402786A3B39993737BE0E6FB456F6
F0FE8692660DDC536B1A6CFBD3F83E667309EBBA858BE69DAF0532ECC75487E9
77D1493715C7F455300669F0B9741DC0233B93B11CD2C455CAF393199A9527D5
0E2899134ED58E1BB40039371EA3EA711CE9FA06D506808C17FEF3515A77680B
4C95278F40325114FF0C0CAEC4D964BDD888F39085857CDD7E1DEF73EADB23CC
48AEB365A9392CD73471C771FB388DEBCE8AAE26FC97E46E86C87B17D669E4B9
5D3A5D180673DD80A3DC68DFC12BF91EAE7AF9F3D53D8788DDB6CAE75E44A41A
25535F0867405783A94BEC1E9A1248B9A96F3B3FC5440F3DD5A24E534E81CAC4
FF36DCB44124FF3513EBC9735907EE11754075A8A966A7858330EF31545A03F4
91CDC9B18BCB322491729B34256E70ABE13B44CBBD6ED3C3B969DD821155C6B3
5AAB6EE59E53B499321715A18BF8463B63CBA2001BD839CBC17018FFF27707F0
9451BB48F273EBDBF0D261A347C0CBC91DA422C428A72EBBBF4E3369C5A43825
AB1CC28F65AFDC98697D63FC27737640F3A29CE13043F33ADD080C7DF312102A
B81806F6D5AAC70FCF69E598C039ECA0E56DCC537B22489789E83139B2353403
CE8211CA2785E71C98501FB676C59D680144816E907415DE542DECD3A23016E5
E1564AB11EE10C5B0B401A2EACA553C522E0B77654D108B6C8CC471C6259400D
08E20A7891130E312ED47DCB23823E7CACCE40DC37561DCC115191F5C6D24DF2
716FF77F30AD5A2B83CF7E2C5D9A58F408930E780839E1949DC6E4C61610B1AA
126236573D7A1C347F55648DEB162FFB7FA4F3ADC54AA2078B632B8B4797AFF6
4006418EE4AD1570F44595901DE3454D7C62A9947794ADFA50EFD7E802FE062A
DAA18EF0A4707D1E4A58E0041F205407839F75952B54E1D63AD89F845A4ABC44
BA382B7B898A194DF5F4DA3D811E3B6A9E5D5C99DD7289D161B9C12A49D3777D
170AAA239E057E652F4C3D861FD1207D06346EC0D1C993DBE080F88226230120
937F9968058437F02F4C04CA95C8B5A1504A26947963C88D594B912C3F953402
1FA4EB3009373BFD55CFEE994E3562B77F70AAF3A1B124F1106547877EB1F3A5
E405CAF364A67B93CB9A5F15D684627E551024C82EFCDD56998B1C3632B200AD
D9CBBB97E148227ED08715419B128C08C8ADF66FE2CAAC6282BD35215D8D83A2
78543F8C919BA7CA55BB17AC1A8DD8DB2A7F378D85500BB5477314FD97E28120
D8A1373B617E06110DE7F53E6F09968A126514F58377DE82C1F0BC273039695C
5461E74F86BAD5DEF2C0EBBB2C4709034E24DB6553A025F760169CB95453713D
51F6400DD9432B0CE54B0FF347EE4DDAFDD958D4EFCBE859D283503D108C1B49
1D2D1A76E3AEFDF16CB8DD548160E58BB0A3F7AC3ECFB06D349AD934295DDA30
73A699C50CA17B7D076C6009475F81CDC48F9E33BF3870875287143D5950FC91
D0DC381F3A8FFC5BD4EEAFD3058432B5A73B55AB1D5ED1FFE6658F7427E02309
2555066C28FDC2190BAD524A2FD68F1A2CD474FB47BF2FCE4285CA2AE184339C
5E0220FB8FDDE0ED1249A4AB0C351DEBFA86D1351BD5A9C51FD7521039F9AA39
474AAF3390E3FBC9AB6BE9F4CF351DAF8F88418C32671862B4CF7DA2DF671C74
B269778B7044767539C2A1B964F5BBB64CC76BF1EA05FE1895D30CD440E776B8
0D1D1D7F10BA9D83194164CC9FA95760DF13030605F7BED34BF377544FD58501
3984D02EA2F1DBCD5A2FDB5D2EBDD4EEB2206A14EB68CC5854E593A5F8193CD0
CE3FB465F0975703B8BD0999695ED675C3219CF0F76258639F4FB3F7422FC91F
21648192DEF782F4698C29F8C95B6B6EF413B82AB52F13667D5251A0CBAC7559
D8CEC6C7351CE632A9134E4735863644E0B7B8C88629B0AAF7C61D0FB625AF20
6B2C87D3A6BE69DFBDA71C0994A19EADDDD7E10A9FB1DFA19A54D989D5DC7AA6
7DEB9FD654EF767DFBADEE70453AE600575553153675A67001AA0C28D081F1DD
6DC2C82D88B0BF013FDC47BBE259BE4B02E0598B3AB259EEE0DA40ED2EF6B1B0
E9C4F4856C9411814BE68C66F1481C1B3385A0EBB098CF446EEE45193B16527E
B8E0BE0D8C70324795007691AAB412FB1D19B7F3078FF824236037C83A7590D0
5756E6FC44A52E5C75CCD26C3A1272C17E4911A9C5E9DD3F7521BCE86FEFEF41
D38EDC5A851476E43C7F2A30B1C9EC2AAD3EB9594A810BA7507A23F8CD9FEEB8
42DA3E63BFEA8164EB837F213701705929B12CF20705ACADE1E4039D242E7434
E22EC93615EE32B3C59F5369CE5AD2F715BAD21C566FBE5E610E1B7D3A45BAD1
EF95D17AECAE760E03276017DF01B688391D5598D5C19B79D5D855C8B7BBEEA3
E86021F595F9DDF78EA93C2630975D13E0F3E3B38E41D0055A82784D1C185323
BE0798C8CF6B4CC492907CE877F80E8303D12FEAB7D1BEE367846BC567BBFF2D
D2DAB0D0B3637ACDB29826CAFDA6CF8B9EFCF6A2B3AFD37B226C0F001E14888F
CCE383CC3D2C88642652DDD3D3E035582222BA656101C3002E8F1BEEEF87FF2D
3D0D31F72792979F188F76F0F2299766197597CD8596ADF934DBB213EBFBD2F0
0FA99FE60CA15B49C5F33F51D5D3FFCD2B5CB511C0548BE676D7B7E646540DBD
D8EE86D4B4AC39526B89BCD30813F121F7B9E3926A2178C0ED9F0FE81A58F720
904E41A09DBB0AAD9ADAF67396CAAC0EF19215BC8F6A09486CBC3DAF2B9D536E
C849A4630F4F12375E0599531386BF7F7127FE9B820605676E8061B01E1B20C3
0E7C216E5571D4EF121853643A2EF56BB692F6094A8A71F70C8CFAB2B50A19DB
D767DC78F65213659797E4601574A1CDAB3CDED3B6BD0E3687052DB96C052C81
359299D326F98270AB9DCC4111217520E8AD164551F58A49FE2896541CBFD23A
8071E29CBE07BFB4AA814CA0DD22B2E1C38F8C75A6593C521D27E364F9986988
F578492F3F161094164C7F54CD183144A8EBEB668F1E896F1F9E1E4F6839CF10
752B8C4613F2A877953C963B823E24A85D00250DCAD6D46560102EE1826073C0
5C61C3CFC29FA95F38D9C2694CC88CCCCAD7FE46DAFDE384DF8F20B17770A899
ECF7DB3731D584D22BFFF838F21600D5AC275C2798AC491EDD689190721D8AA9
EF000D2BA97AAB27F18597F7BBB484AE40F9C9E94ABF52DD9AA2FF4053A2DAEC
61D79DBED8E55AADAE6620F12394A24F81135C9D9063C0F4441BFE07E56951D4
FDB05FC3B18B33E6C393F480E712622B92EFD5217D9E70546DEE5401E1B23BED
89F2E6C08EFA6DBBB2819F3B1BE4E8277561EBB2F5771B5C3B301E6A2B3EBC6B
67725A3BBBF30AFC5E0AED54074004E307EBCAACEF5FCAC11E1CAA1C2DCC3FC6
3928EDECEF1E8572AB098AE00EFB5043400797531996E6A6DEECD51F1463A922
E378FA49B21230735CA8CDF47287CC3DE786B58AD5161FD10508D06F266CAE23
4A46B51F89B0AEBA2B54FA8DF415CE6A8EC279E6FF80B49C72D15EE58878F045
8D522DA2EAADFF57E025B226F49407125BF72293FA812D8666A77F17EF6B6507
013BFE064CDBB6A4AE34F6385CB51FAA9735E707BBC255BC62976E95EAC79E6C
C35CC07CE278A971F4AC9A27D9A49203C90749345D09C6AE3E80A85FF90CC323
373439B59A6634289DAD8D7AFD649F5B2919A21BA918292F40A315CA76C4E25D
FF301F5470620963566FEE34A55080372D44D7EBE22A986A1EA77279F9D19504
7C17B12139B35D0CF655EEAB69381C9B29EE31B2F30C51017D8DC3F9731053FA
140613B70ABAC46ED49E6CD3C240F1AA5867DD0F5FC622B314CC8305DF0012C9
388C4C9A6884A161FF67C1D2A6975A93859EBC1460D7D6569DD717F518B8906C
40383C9D965B46E3130049E414CE906934D916A30EC70BD023E747100DEDE147
FA61AA135FC788C37B5ED3235288DD4BD7F33CCDBBD49719025E58F68C998647
536A02C42031F198BC587C4BB2DD3EEF0434FE0808E13770A8817916ECEA388C
596E325A20065E230905B369D3A1F70B05B4025EBCA744663888593BECAB6122
8DBC7B851FD05FA5A71125506E638C9752B5AC855899672B7ED9325C8BBDEDEB
FAA4ACDD33F6BADA440F0AE401CBEB5F01F45066644CABC4406F0BFA98D21C0F
6A68BF0F3D29D2D54F997FB6FBB9B91CB4258D8D4A590221B7B421583544B296
8689F5D838DACFB467D960A721BCB2533C4974AB799CD5372BA57551C602FB14
75D388051C29B9252CDA74D15AE70E0C9565FAEEC1CEE13446559557F0F1557F
C732934270702C9BA06B1BA02C9E123EC291E0064860F3984E3C70FE538EF3A7
3414BDE9E85821EC88DBDC2D3837946BB2D5A2B94B7A9DF5CF6C9373D2A2EE87
BBFD24ECD2CE93CE7D08EB64776B52D628D828DECDEF3FBE7FE5588F8B77532F
5EA941F3A511DF7E5F7B8FBF21923C6C8E4BFC0B351AB04308D8BC9DAF2A58BC
7A6516861F668A71C7D6B094B14FB946C39AB4059C4C1E741CD9E9B79231AFA3
AC3FB1394F8B279992AA5CB2C343CA86592AA778FA4516A9DB4289E756E9B412
A72E190BA8171386CF9F25B69236129A36419B22B772E87320269C319BCC71B0
CAD1E5414ADFCB8E6816B3CF6C248A93AB9974D3734896A530EBFA1B831EEF3E
965E2392693905CB8AA54D8B208F973B30B14681571754568E18838E185D7D38
A556DB0B64C7CD051D9CC00E2DE650DE6BFB38017C2E5851A11E2B0D3A25698D
746447D4781D65E8E779BC2CCBE567071E2513D94ED70D9A99A6BA184831C2C9
15D433969BACB7D3FD49E1D5D4D6A762B142CC90A12E6C6491B5C4A64B0A161F
BA1C70D3416279A14940F93FA5BF9C025EBE4552437A93BBA21D3B530E8F7188
4EEAD28C23A8EC8A07EFF9033BE9BEEA37AD1EDC05AC30FA6E8FE934288972EA
898B79FAF2325506A0D2CDEDBBD437830EF71EAC4B2E70FBC38D6D3AA5878019
0F135E092A734794948A14AEB2D0C59444A3FDD9244DCD4A3D043B54235753D3
D4D3A68B7A83612BACA579C41A22A62CD860BEFB0928E95A72491AE0E2CF7D44
7C1B6A40A3AE9BD04A9B274ECA35EC41E8D73EA320DD09E224F0DEDE818F5E66
CCE7C463F1E38A6ED86F571F7AED59B4E5C38C1FF2E594DD8E0BEAE2DE7BB44F
2B278810A476BE071C01DD0A9DF49583ECE9B8F2A7DF32C5E4270C9EC83DE69C
1D0330349F7D38E907DECA0184C4CF35E946996586C79196F03715FC56EB1474
BE529B96547A2A8BC0F291309CBDB0A8C278DB09121DD4D44F9B68221AD59991
F9F0CB3C3D8458987A3D5D5EB6E2988831D914CEFC3A623E5668F13BBB819BE4
7677866F86C9AF5A6CACC45382A37B570C5A0AAA1DEEE85CB885D9CDC33C28FD
DF8B550FEAAB058CA2951AF0D5CFB904B9A774CCD6B1B26679E5D3C37E06EA08
CDC4DFD91255BC4601ACB03240C4618E0AF2E9D450350D8138050998948F742B
10789DC6A5B3BAB3E391802E7E6D61537620F3F0F69FF58059FBC44BEEBB8CC7
84FDFCA631ACE631E93FB4BEE181DD06B48BF73DDA42EBD5D0D236C34AE92C1C
F20A29D45BB12EE97723CE00AA2802757651A35C8A7F5ADC394324393A21EE07
6DBE47E899537045C2FAEFF9B4FC73437210DE3C85F6EFE29A062C8460299CA3
CE7C65C7090E0B50C4AAAA6BF374F45BBE47ABD4574456EB2118A7C04EB2B195
DF5C2EEBEF1FEE852C5DAC917E30F41CE95DDB7DE26D5EDC6F7554955F6466EF
878BCDD16482A0A27A0C23C4CDE7731A579D72CF43A35C192D59FFBC51C2E368
4FB04DCC97A561CED3C2AC9DCFCA6AB0A05A8F919A49C6963169AB01EC23F830
D63E1FF9624DFD24C2CA654ACB66F2F66E3C35C703855417B97C47A625E5B585
B02DE4D608698A04F0BB51643CB242CC43E683494C5EE74F40D343ADBF73D9DD
0DDF595278BF516641EF97A458F40983DE82A2CC16FE187136E1E88B46B201C7
A2041B4AE823CB74464DFF46A992562947C92273E55B4AF2A738C2C03D045303
A146B377E88BC6FFB14E7A93AA015EEB16598B64FDE8F843088D961747130172
83EDDDBAF01E6F543202E2BE9E532FA80946C6E75FF3362241A995ECDC489D5F
234055EF03DE75B6681AB690C1CE37D41380862A1C9DD5285265C5FA7A6A0F57
BF6F0A5A2BAC30A328415465705C6AB0224772F816EACC73F21E8C3591A3E339
17A0D951FCA4D6E167196B86C770AE6A6FC053205C1110D69E7D9B4A70BDB369
77D644213D14B42FAF2E7EA2BCDE7EEAA13517AC23802A803B5D000E1C5EF252
AD1B1D89E5835B0DD4BA0AEBBC3C27E50668C91E8175C35E37CC62FF14C69817
A611C490CA4A7628C2257AA1B5C77657B1E53062642E2F4C5B8314ED4F8D4A52
F262D567B50576B64E0A50A5974F84AD7D7E6068500894304EEDA172A99BDB54
117DE5E44A535DD90A38D9A6F44932C07A34C12D34082E15582050B54CE2DC59
D27A9F8F951DE2FA1CB50DF0B0179FF1123158D40812F329580C8536FD4B0288
F8BAF08A4F65B01C9C4626A42DD8620AAD09E167931DE650BB57F97CC107D116
1D391E60CF22B4B9984E3474A9C4554A086B80EA65DBDFCF80A7D861AA9E9199
E7BD065BD7A4D6528D78EC2B095A47FD4DC55427E61B9B2FC947288473740C94
A6DC104D71240B5169A1334013332B6952B84D332B77AECBBC3A01927A6A8852
D5B7C3BAF6C95FA301B8B12AB28A28EAE9BFBBF2A42C2ACD8A06F29EB3943137
31E55AD3ED32F461E52B04E008C913D51AA807678569442271699CD9BFAE6B1A
7F3686AFA1863BF5F6390B4641F277E53CE1B400F441B627C895947416A78AEC
5424CE4641974A4BE67140AD343DB3E677B826B6BA92129B71295D0F02753A24
01D67D6EAAF0E6BFFE18EE918E814A200FFD16E4DB14642226FE916DEA4ACCAD
F5182E7A1A99FF8AC12FC09C5037588F7B1B043BC50EF1BF643EF2C21EE902A3
B131CD5EF63244D4F2EB125A9020AD216D26ED6F9FFB5FCF6233F5AABDF27F3C
60E8AE3B287732A69F1DE5C96658BC13C2D8CBD8B1EBAFB0EBE6992B271721AA
252D0151D7DE2478A2B0ABC58F8B7132FE9C9556F61A1CF019F96CD4548334AC
AC61FF21B0378705C512C017624003E3EF522619B691A4A86F49BE1229839886
F16E00DC0454841956E4938C6DFD9FDA9EA5E53B923652AF4290A839440D51EC
8488C5F2A536E4F9F6966A9D3325B036F60DD81B9AB9949DD30A8FD8F64CA95E
29EB71F6382A304C2D3AE0BEC5232D48677FB3C0C2EF6920878A88503B85CB88
9E27F71F8497F7BBB484AE40F9C9E94ABF52DD9C1EA0811E5EF31ECD686A274C
89E24C9D75314E6A366EBB2DB65CFD1910C5F90752F13E96B5C2E04FC4B67D82
9695BA57603A8EBC7A461FD6DA703C5A8D3384251854E2CC30CC76530355A996
7A3E410BBF112BA75A2185B93B7417D2FF763B3B12FA17AB46861C3FF9C1079A
D3F5A48FD206EDC4E1678B60F5DC24026B9C443166F99050D64014F4DE0400F7
4CB7E3DB82EAE1DCEDD19C2E14B0B8023FC3D28ABC0F5538E62D234EA9940AAA
0BCCCD7FB910F31868139CB79AAECA8FE66F917E4BED0AFD92CE58F1F9695B00
5BD251442175A1B1EF865445EDBA2C9F4F2373D8B5414924DB2A1ACFFFEB527E
7F7A899DE795669D6632F498E30A85C938A804FD306F80DF4C11A2B8E86E8383
7A76FF056FBA81E50E210A4A55AE63CA63B1271C7B11BB9503D9B8A87346FAB3
C659E171B0B9FC75FD56C4F0079BDF770C098C6212DFAD46563597B4AAEB7EA2
5CA376EC614BEA4C2F1C5045A340AC87C58E3504D16DBC67496F7F071BED5C30
5FA94DD77E8DDAA7E09DE857A08E5A7ABF3C3CF5443F03CF7C7A4C607E400C90
DC58F281C574704A8EC89294AC3285587D13DF3FD8A6A91993F1B4BD14849EDD
4C8FBD88B96E6381762482408DC0F58239EBBB88CB2CC0B18ADA215459EFC280
EE926710447319F971FE1312FDBD0E6AFA492008F1A4B674D668EBFB7EA2F8C7
D14D3EF5D3ADC5EE3D294E91B637868345AB20BC8C7BEEBD84C16B027A788F40
6EFD3682B6356F5C41DF1187E86BE4501C0E3AB3517E010819684DACF8B60759
96F8CD29024191680590BF576A5A9FBEDAE7C12F2BC94D2E1FB0ADE8AF9C4E39
74835F6DD1A7BDEACA1CEAA12A1D15F6029EE2080F148444C78844288E79B2FB
AE3CB6DEFB663D035AC2F878EAA606E71495CF77CCD097059201A7719217B6CB
521CF77281D2E07F6E5BD7D9C9D763B0796B52B9CE3455855865BCFFE3E9FFFC
3E3A2725823D188CE7D4A9D168444BF655369A82BA1D0B00997134AC6D15EB65
81A50B6A623E672BAF1EC336B6810904390706CF1ADC6CD4B83004923DF88971
112DE0551410F28B1F151C0C66287D28869F2C86FF6F9DBCFFFDB920654F3D93
9468A1E3BCCE78BE91C267108A892671B11DD33CC102F70F1D28060EA3CEB90C
A329858F8493E5CB7EAFFA6DCD5D867211BDB1F54064CF54C8E0A987CE4650BF
A999B0E717679505C9D52884F12ABB9A86E1ECE6DBF2D50DF6FD82D40478F13C
266F0005BB25C144079A9E06D1DBA3FE6AABEC3ADA0E3676FB3A48BD39E15558
B56F422C4B6F82B8A21A45B5E03A6D5C343E1EEC64128C90437685454A5525C6
D23BD022C14696DD7A4243DB02953903FCA10A2063105A477D109FCCD2B9B532
A58983B2F97C1661E7CEBEA485F878DECE76FAEDD51B0A37FE9564DE410769B5
C15D3972B2F7363F5BB61C805F2DDF3E221806D7B4826F21F323971A00E9468D
B00CCB8DB3A68EDCE5C904F38D596EE5EA5853D2F08CEF39141A0431BDB4E06E
1988D30B77B0CBA5B8970082439DBD3A74F8C81E8069DD79D334CEC8DA95CE8A
6E9769A3D272AEEEDA16C98022E6D7DF55BC7FE4625963BCB52535483249EEAA
D9941861355B13CF4D19836FAB59905DC3445ED4D87CC434CAB6F0862FE61057
392CC451FC0FED90B4FD11A69CAEAD0CC408F930B0A0DAE697F7F39CDA0A8192
6A657DFF7D42EC550438E7AC11EF30BF68A24D4A4CE3BB682ECB8809B51F6EE8
97A839A6142FC80B0DE8CE8587B259D373C12204C0E7D47D4DA10F444615933F
29CDF026EE9B4F3EA2C29429B292F8856E74D38961A91FAE79A2CDAEB8F871C2
2A1BB6599DDE3650F547224C9F7FE7020BAA032922CA893F016DB111CD250815
5DCF8DD799C37EB492526838DE8AC537236146ECCBFB7204DC672C8E7F08D441
B2C4B6190E88CDA6B20E347AF08C68175B604519040D0550193785E716B37122
422E1E73FAFADAD78125EE549A1F9571F75CA42E74BA4BB06A252FCF5F1ACEB0
7BF1C820F77C9239B5B04BF7CFC2F93CF2D86DACDA93E7DB66C9BB07EEE8B936
7FD31E6795FCED8BC40A812C8E770828868239CE275D9792CF60F917E05939C2
A6FC15813DA74EED74340262C0226C0464BE3758448BB7EF455C242812451BA9
E1F3857658B55F41030F17245704AB7C2344393FA94BE3B7B80C90CB416F9726
F2E314BC8E08C8BAD049387EDA759AF91BABC8C2B536D1E7E0671BF03CE58821
A380C6FA3F605EEEE101D81B9AB9949DD30A8FD8F64CA95E2EE3EC41EDCCACF1
BAA41E8DACAB3F519B3721ACDBAD8BA6E020BA861F40465C49BDAE54706DD660
0A44DCFF73C43176B2C8D0BDCE7CB90C4E617871F1186E5FF62BBE15582DAC0E
AE9EE799712FCE00B4B05FAB8709228D65ADE4859FF875BE0B0C5367C18CCB74
E2242D5C2C997F8505C54EA10FFB437FDFBA1FCD9F213BD7DE0C99A2B6BEA736
A0D9EDCF2BE27FD33505643998D01E73A4A2B6C8893DE972C1BF956303402A4D
C5A26F2DD383F6F96A2A0BF82FA89594BD032675C7663C3F1DE655F86A39D5FE
04C5FDED2C5136936961C561DFA18FD3FC507042053282E1F930D1F4525C44A5
83D47BA4D4B3F5B529A26A2ED1268D14CBAB5564C89DE944C25FE44637C8E7ED
D5916124CDC3BDAD503879F901FBEFE39C7BCC7B3AA99B6390DD9AA7963C3204
41902C88377AAE579017415784814BA1A71CD2A4B04404E318FDA033E3DD478A
517889773ED9A0316BD6A9702E5BE4E8AE9D0529556F218AAE9F8CBA6147E665
024DDAB002E4F40093577D4400FA73D978E6784CC01C47CFAFE2F8843674313C
4E0BBCD4F278E9F0671D80ADFE316D582C7A94DE36E5BF6F6E21A391F2AF677D
7FBC6085F339098E6CD152BE446965F838C1A870AF10DDB63DE57734CD286BA7
04AEC2B7534AE0810DD6903B7AE3FEED9BDCAD47C282AD769409E59077247336
575EEA9CDD6E0F3F6BDC1B5329AB926EFD4C397ACFB134D0A287324F5EC41B3C
142969F1E8DD21BBB1436DB9431AFE4AEE72B23A69050F30C0BC06DDFC8EF916
E648D68BFC76756BAF902B8D63C8A43947D7578B0FC696723E8C52F30587BCB1
07D72FA0B15E75587747E27FBFAB622210B7CED20499E342BC499DD7AF69B2F9
DCC44C9CE9F74EF949C27C33544CC771158902080F89CF435B82D192A5AEE7B0
ABC939EAA8809D965B92057B92744B66F29143DF3125A6C48D2A8650E05920B1
1492D5F66084BBBE4A7B954B28230D53EF75A00DC15CFC5141595EC251DF1EDC
747C51AF468545BC6BFC1F44173F1ED864FEF722A5E8E0EB7FEF9CCAC6C68188
309ED187FB6AB6BDDB6BD5BEB1F3C77F936ACF5A2EE7EA03B1B905F2C1581DE6
E87E1319D512BF4CEDFE2DE587BCB1F246463812A24DBBBDA565908733C3902F
0EA39A679D879FCEE3756BC21D384AFC63EDDAF636DFA4601E0BCC65DF3D59C6
23E75B2CE48BDA5D958F3D80A9E31720202B676BEF8AD91EDEBCCCB29902047C
ECC0AFFB898DE520288A40306AD864432BA614D25D70674793D88C2BC6D6DF57
6ED34826ED59DEE755D0ADA383BC3E3DC3592FD0D467BB36E301E79964300C8C
4E43B59AEB5A81B562C579510B9B4C47E0081BDC9070839104629201DED5777F
11E4344ABEE291C5878337B23DF5C503BBC0EE740CD2648426D9FE3D0A47E0C2
F5C8B747F604722B030FAA2208391FF96DBA9675F5F3B9C20AE85CA27420264F
7670E3E9B3458F272B420C17F1A2452AC7CE2B0B8C70D65C6795AB0305AD2E75
FB0BB9F48441D89700FA1C03C0A219299540E5BAC8759E8F9F8AE66435FC03A8
00C88766689FF9CF98E7F3D402525417FE5956FB583833004C947146976634F2
7ED258495B3075A43F03C34BEEBB8CC784FDFCA631ACE631E93986E1EE547177
5573397AFF9E07E0422F909016A2BBFA1DC707B34A2223648C1E0DE6D13D1C07
1D2F011248F5E53226677F51BEB012596BC05AAB1C6EF139708E0F4F783158AB
0588342EE56C5FDB5ABF8F27A17CC78B920F264922952343AA6C9D64B390B0BC
338225B123A5272185937D480BFA1B9D94A0A7C94288A59433E1BF6B81F045E3
D3F662A3552829715C8575FBEF843969219FE553D74570A38787A92FDAD3350B
E438066A2CE280B1C3511FC764C7448537E7372AEDC3742F81E6158F5C867FF8
33376EDD4B43E6553E0B61247A3DB556F13637B868EC7C324F0EA9DF8BA01EB2
D2192FBDE6EB1E08F6B3BFD92CC613AC4BED5FC979D11C11BA550624ED596C29
3A3F2DB8A1C8118C56628E9A633BA6FC4949AC7B0F62A2555D67F7FFB5637F4F
0F308F1251BC4D0556B708FD8C38C2F66E37E47B788057EFA1423CB8CB2C810D
2D6BC8459588D883D3555DD747757082E9BAAF24AD2C668F0EB46D62DB27E96D
AFE45BD3D7EFE5BF32466106C249D9933D98503BE6A537292AF15CA0E7766AE8
BD7C0E3F70BCD2697D2A127E469A4F087650ABAA96B76F83A2B5045E0CABAC1C
838E442E703D00A7203E994DFD46DBBD241AB4BDC376280233FC8C61A0DE44AD
619B998881F1C1AD9BF9B7024398B0D55D9E9329EDE43AAFA4EBE390C58A7798
6FE3528C6F0C92A8291C1F3D0571512C20CA035E6A50C40EA865680EC7734711
4669419F9001EC6C9AFD9707E3A3E1E37FFA25501567768615957673D19FCD46
94713744252ED0F496E6E31880ABD54FD126BE405A023B48C8935FCED5219B4F
552799E5C3D132164EA51A7915A201A2BF51A37B9EF27464383CEDE3AC7CFEA1
C0A4CD886D387630E1DF789F4921E48F592C5704680B2D4C1384E87AB33574BF
8FD8D1FB40BED7FF9B109A8E13954E87190C690C7F9A59AC7614F935A09A1BA0
BCA6E361A97B98840B9620EE098562CD7AD9115E039DE7420E4A7FCC55C574E2
9FF713EC377E1E5580FE7CC5C2F14AA8502F51AF485B50C5072AC6E6A7B6D109
0FAA32EBD1235DB975B65EAA7D730F2E07A31C1A96244E7A31BEFAA13249F905
A68D980046696BE16F1BB84AD3D656B5E48AAF880EE574A050F8C871FDBF5CC2
25775D6A223C483DDC8334D49F337BA0B38D0DA81ED3ACF1C0794F1CE5B72F68
85ADD13B6CA4C48BCAEBF45C94F29B707ADA688A6A0DB091B38C94121D5BFE17
EAB903A32D232399AFACE7D3D1B6AD79CB5179264CB9293211F6D22B214B28A1
4D98AC36A43B46CE869E34AA5586293FE0CDB4081FDA33D6D9182C7474D629FD
C268E03B5A79ED8BC3C951EBC10BBBF7ED5866BCE534CD6CEE16FD5841901C23
5417B5AF62E11EBA8D5EF0531B10FC67DFEA03EC9E1B6457D7E68A581F140EE3
05BCB928BD946AF0C8AA9E9B8C2C993FEBB672B77F843D5ED956CBDD4122D4CA
414F5F015DFA245EBDAD50886CD0B732A751CAE76C43E70A3DC4913744F6499F
33265206E95D5328AF6B5A59640C70927FC46AF11B9B69569193D1615E290ACD
38DD39CEC56C2544102FAE86640D35DEBA3AAD875C308D0F29DDCEED3C98CF58
254405720D01AB104A2C26C5C6123F765F083A34556BDCE612689CEDF4A5A374
180968BA1441DB65A27E286699BE75B60F0024B9160E60024BC340700F840365
62E9D9D281B69C57940EE1262B64290D7242B5B0D5D1E979C8ADE33E001C178A
0F1CB2B82ADCDE14F7089FE32F27B438FAEBEDDF2DA27A5B2972F20FEF975675
333EFC4E6D9B8CCC009ECC4D667B2DB1AC0CB4275FF38F21E059C3AFE4FA2094
A62CB63B0C45AD134306BD6A0AD64B17194CD5932EF320998FE7B6857CDFAA4A
A8AD7F8BFF7A35A6C961AD078B6BC83EC17C90EE7857284B5068D6E3DA78190B
D83A25E26489E134A8A185B261809A64B9CEEF1593B66B70B965D0697EB955A4
9494E563267BD04381E332C8AF09AF545BFACAAB48D45448D044CC0D2CEE7D24
B3496C44F188E085B738C47A5832CC8705BEA1A1697B2F9E4C63E8DF3359F7F8
A2E0BE052111ACD78BA2D16DB3D612595D617CD2879FF52A94B184A51E889BA6
C2E1EC2FBD7B9809AEFC1CB863B2B1DF549EB72B3AB103EDCB7FEFEB54D30213
F1384983108ECBC023554B05B3A51EDFB01063278758C044023C97D60D6632F7
97B99DA35A6CCCA85185072D4DBB34700E515972D68174D7373BE342652254F9
F8C1FCA4E7271B923C7B075B97C61373B870184681A496B8C1F7E0C7BFD354FC
3D12FCE8030B4837A936EF808301FE1918E1358B2BFEE74C5D9FCB488CE381D1
74D96A732460CF10587205105E762A41474A4DCBB272193857E495405F17CEB1
D1761AF0226D0B080FD12A27EC216E24EA04662DA2268CA282965CB8C303CED5
ED288C992CC63E941E678D56F87D9CCC9D58BDA0B391B93A865A70BC78A8CA3B
62B4427E0090D08BD005B86A91491D903F6CB628FA66715B49C1949854B308A4
8F2708EC0802BA96678BEA8A636548FBD15FBCF314988ECD529F517293B38655
BF80D3988A0FBB6763857118B8B2D9417EB17E4BC87593CFC9D6475749292C8A
CF335DFEE572BFADD691E2ACE23BBCBAE021F33F3EF4010B3F1C6ECE2EBBE298
F675F2DC4BF7DC99C13D126E7CAD4CCB2CD4932CC58CB855D4E42877BE41C159
B03ABE7C39E74D8B043654E12342C5361D4CC1A35E6126BBE6166AE336169DF7
F26C3C097BDB457324AD93A488DAD5C06D1F9F1FE07AE4BF1F5956F0EDB576AE
F769F948DEAE62D9B334952E8BA3FD82D7E5D9BA4C588188F35A2EA4AE87D71A
338812466C19F306CD401DD9FA750F8E9C3E565B3E1C6A28A737747A5F8335F1
80E50C08DD90B534F578566B9D133F8B1B119D376FE067F28B18C7B125026A13
118A1A9483E1369395044DA62406E1F779EEFBB57CD56D9E343CD41CE441672C
5DBDD26B1F53B5B1CDCEE9FBF33FEE4A389D1EF92E81C988EAA563929B5077D7
CFA5FE87CD75C666617F877C02EB051858DFC4CA28853C77524D2018C3D18741
40609E10B4AD2E68BD5811498F71510ABE80984F8878A24944E7236024AAEB75
A04384ED9A2F27C2505965979130F4EF9AA6BC238D1B56B2C2E7B1A97AEEE4D7
FC169CE70E39E8C605C25B43B4F3DA44594EF0ED6AE145E9678CDF94CD7FC473
87F97615279D4B486861B3559AA7A5089E577F1A768F60B05C3BE32139244F6D
F594A47521E9C5F03905AEF7D9DDC1F3738BD9FE9BDDD4153CE849DBB455704D
37C5F1D201C068B7D212071D2C87E6F895EFB5E53578C307C35A7E5A46B076C2
D5A4E2F460A45C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFSL1095
%!FontType1-1.0: SFSL1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsl1095, tcsl1095, lasl1095, lbsl1095, lcsl1095, rxsl1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Slanted) def
/FamilyName (Computer Modern) def
/ItalicAngle -9.46 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSL1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-150 -320 1474 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E724728647E86B0DDF0DF
27E470DE304BAF6B908EB3795E1E2C2EF1C03404F1DBE0D3E3C183379DE9E0FC
0BFB0D61769003C4A9E55431A4C3C5DBFB2752864A9A725F367EF3165F7E622C
C138303769E5DC370F262EE5CA8F59C0831C0849547E8357BC5300BDD59440C9
294CE784007D57CECA937A34BED5119A5E304D5261DE9153D2DDBCCE739E6198
9070CA375A2DEBA40443CE2AD54F4B3D184E9846EF9C2C567CC19A512C73A990
6E3D61BC03F048A3FCEEEC49D7E62D00A699D12E4459F98C8423D946E74E9041
3C8DDEA7C255512A023960324BDDA11B92459A83DC5A6A119375E450E0F3FBE8
6BA5385413972A464640F061E935AF7989DC229C4E9DF86D9162A1BF33567C0C
31045A0C5CAF0A394B694D99E97BE7B58C3C427F8F48C15094463323AD593CC9
CA898C6939F284563D4BFFE656737D635FD6BE414094FF3384A36F14024D9368
6E38EF747E4E8F662BC7E7099CB166191BCC2410A69BCAF57F21FB55FE221CE0
BB8019CF28A7B33F6011048B700E1220ABC2B49A835457838BA4E238565CDCD6
73C74C40FAF34BD971DBBCCB60B2BD7AEC5253B4610F9137BF480E3C9F1CCAE0
F24F8F13C840D3D815D51C6C1BC368DBF428B5454132BDCEAF909FFDD31DB259
4E6F6B41EED47EAB63DF8B2D6B37DD024B3483CC13A06C356AE9895EAC769BEB
EF5E4839973091137858C1D8596000C2F85892D574194F0EA9B44085C3BBDC87
5A1C250E382F837F4A493228B7DAE705275B56BA63D4C4E5389B32052EF346F8
9349BEA0C53D690900696B7E92555F3935183C17752F1DE829847D167466BFFA
CD64CB39A99A44D0C255646911E40F0AA1A0F2EBB1E1A34E6EACB07A901BB4A9
4CED1ECD64E0FD0679EE72B812BE81BAE0196AA209D1CFA5C8267F794ACB69E7
1DCF71A547123C8464BC5DE64E0717E7B076251A9019C9AA9EB921266A103431
05E947584617685896EB18120F759C3D5B8305C186A61279D544E2B62DDBEFBE
EFCC6D6706337662B94BEF7C919C6829379849A19401260A7434413533269ECD
C99B60755D87C2F5FEDED313DC59B60614C2D7E72FFD2E71F2020931EF7C6287
E8933A4FA58300298B12F3DDB5318F92C6F33E6D384C155A789EF1DDB768507D
A2CF9AB31CFF42FE6B4F03CD53252501C2796B15E89FD7D5E9EDC21FFE4679C8
D20B5EA6C04F961E03169F13B0C2720DEBB9432F01A550980BF7FFCD72AFA257
B92EF40580FFC7D49BE88BC83E76967445B1F5730DE62C03875E50B14B0B6BF1
FE86A001507C04521B40EA1CF49975BFEEA0B2276AA0630DCBC4306D1D96FA21
AD7B1C806F4ED2BCE9A2B379B89EED605D72D0BDCC2A72DE0E9B41A66C608F7C
ECE80469201E64134B6D91829737B529FDD96D6C22A99E04D6532BEFAD6A9354
2B26C28A9D9D736D429C304296090F66AF3738F588D612DEBF7FA7DD4220A61C
D00F1BB5284434C917AAFE03A6BBAA3941B1056B6A3EFA631A9DE24D6E9DD8B5
26EF02EC5DDC3040E38CC2FA9F6EFE382FE4FBBBE7EEBD2D0C6FD2C5B3A41F00
08BEE50D97D2C3D6D004AD27CD4DE92D89F549D7C9959A0017F9F909E698BB12
7E4D543A7B128893D0D808E5933013A67DA0E78383EA858AE2A1BBB996C90D0A
557D1A0F97D00BB653C274848D0B49375AC07EAAC1F39A8CDAC4722F9EFBD234
9A572B8D9C49904081F5EE889665BFD5CF095DC10B658B1D2ECD03DE2F234B17
4D8B17FF27457D09F34E3AEA8B78003042DA8581975D4C14CBD9CAD608045328
4D21E7A6E9F0D06720FE1AABFD0D697B6365AE4DAFC3A88E05E97214FD97E281
20D8A1373B617E061109AA0AD371AF1987D9AE31AAEDE320A0520A1F095275D4
E9C6C475E9975FE2FC20D0E397EDB7BD229082E178AA6A6FCF0A1A038732E38F
7E37270241205A1E1B08F580E612EB64C4DC165BD6C64C44F44C208B84C0C7F3
CF111A7DC0B91D4BB0C8BECD16F1512AD2F69615F48D4050677787ED921DAF71
2A0135F35B9B1CCD769147E7A4D00F27C2E1AD8CAA72945C94960840005C7528
27F9AE2CC60088FAF1ABCADDA38D4EA22B3F912EB2DC12DAC3E890DA1F075E84
FC2FE0B2A3698E3F7166E15A9FFE7EE7B8FE92CF64E7E6A79BDCFE3F44CDE174
513001FEB070116A145FB3B0272C619E6A3CC8A3F602E7D0B639E2FDAACE60D5
A6009CC1644BCDB9A47BA7F0BD089F9BED1D904E7C6DD6BE703868758CC19E81
DAB955BB114FDF5F688DE08C84FF443BC122E310304907427C229938838A5454
CFF7A7DDB93250698AA0AB99C610D5739BED2629572529A19B0C080808C73007
08BE33F3599991D07DCA2785F52A2D9587FDF9FB095BFE6125C41C1EF08F815D
A9FC81DB308E78F05DBE7F262AE102DC020C35ED1F2F85E0B962B2967A677BFE
E847A8F50AB34063E50A0A05DD71CF004087F913EE0CF4B5284CF8FE9A2E99DF
6BCE0BC5F8D563531062B5F19117BC34CD778B057EBD29C3DD113D2D8A626621
778463D1287DB8D742DFE83E847C1720B47420F1C8B4AAE9F22CD6C76650A7D1
AA9D026CCD1B21B70D7FCE2E4C2ACBD6A361AC8026558DC3FDDEDD4109073210
DB92D6168DE1D9C33139E956AF79A217A315FA7B7962AAD680278ECE63C3448B
F5C2A651BA10469159C8911F844021FAD8EB29845025DE74A792B3389C249A86
EA1764EAD2D65F03B4FC9106B4610C16C97EC9C93466FDEF6E41F8C4CF0F8B45
10353168941D3EE27080E0DB79BA76EBCC5CB1F7A4304EEAECC2A8A0A9946986
E787A4F209BCB8231A8B7868C178B90FA4F8AF49174FDC29E90A51AAC9346830
D13A6715B0BEF3240832F4578998C78304964E4582DD5AD548FBC8B92B77D747
3283DBDF889ACF0BC6045629580331185936400C5D25554FBDE7BE9A1676087B
1B198068339EADB61B3D132E3C026ADC0B25959EE044DB0512EBAD4F21562DC8
0B0801625E8289C11C5900F17711F7240CE4579CC90C065F7306E923F13F5333
CDF11E95A4CEC38A43EEAC604DAC84F1CF10DEFDAB954503D2CDE2A2B3FC9698
45B48EF9D01AC7C3925944EA064215A6797C23C024E92040798EF63A6787213C
2565649B536D863443FC640386D7CDB73D7B19DED8C2BFF0C5A0A86232D58964
B150164F451705FA0ABD9581F43FFCB4C4A489751BE96AB8FE3E73451C9675B8
219DE84F6B8B004C17B923B5B9B145BE6D856FA813599B7F8708719D6688C530
A9CB87DB93F0A7AC7F8885E17AB46DA2993220240D6FA4E19621C9033F77A19F
E5E16BCBCEFE583BB52FECA268F0CAB7F5B7AD1F962894C919A663307CB98E3F
9AE062ED59BE6E82BD35215D8D83A278543F8C919BA7CF415F27923C9D516247
D0B121BC0352247E103D55BCB99FED4DD2914F5AAE6D6DB5E85436F5A8744CE9
AA277B8DD53D9560182D16C8BD5E2F9586661196DEC7D28729968409C8BD105A
913C910B28AD3DAE54AE8C60586ACD05F0492374ECC30BD782DBA0E881DC727B
7ACBC328D6109FA661F4D48AFE07139241C588605732F3CE021A2D8761AF795C
AC61AA4FD6DAC0A4DA6CF1EDD53C5E2533F4280C1223C3DD268A41D93EE38D24
3EE55BFD3F59F355755D4C3AF1ADAD3766FD6537B4B8A3706DC71C0E3903C9A0
2FB306D8FA32E73749536EFEE83FE96580EA512B51A1BBFB61AD2DE57EF60DCF
5A4F60ACA6A93AD19F7F19B59FA3B42A479732DB16480E807E8B596F0E61E8D3
25E4F0660D6CFF863A740751B1038FFAA04742058FE118C7A74F1BC759AC75FF
35B22AB5195667C0408A5A99CB7AF2740B80930E0150053C6F447621A48F6657
0FF7D428ED1ED365E74273CB56649B3CF218BBC6AE5C6337C6B57AA26D004651
849511ACFF673559655878CBCE1CF2A46FCAEE3E56D84ED42F44893393EA3DAE
8945CFA9A63415A0CBD3F0A6D5575C7F3872D15A03C4FD68DCD752E7FFF9F5F8
D35A3BBD16E8873A811954AF92E3AC35826283CB35F56F2000C8484D32D0D915
36C3BC863B916655D864D5DFBD741E3FF0F4A9CDA5466367A223B751CB408320
14D11C3B61129006A8E8E0EAE98AD6F5BF332EA677157D15BA8E8F6A9A0E3B2E
DD2479BDB81C14033D7E19A7EC9672A590C87CB9B8C64E5F8080E6C7F427BFB1
4A0D5004585BA16537EFDEB0C8BBB979C49CFEB0423C4EC4A7BE99AC9FCA2116
10F46A7700403A1963C9A91C8BF6AB4A892F90EE1B261542210BBDF3ED91193B
161D0A359E80D3B07ED07FC116B85AA4059A0CF9D5BFF0C5A0A86232D08526D9
FE3D0A47E0C2F5C8B747F604766DE6DB993017EDE8A3ECA57D06B7C97CD815DC
BE90864E4C0896E514FBD81B239C4DF15B6E569079B19F5D54452562002D46E6
412D7F9DCDA628379F7CA77790C6E7A6F0FC0FEE061CB4F460AD9C333DDF5AEA
23732E534AC1889D4750CA03382F47AA2F4DD489A17674C4F7456E4202CC902D
37520801088084B67206F029C337273D7D502D719CF430F4589CAB5314DA65E6
D95CAB483C92338DC7C2A619436239200A06AE7022A334E3CBD49CBDE58480FD
0C9E9EE33528A11EFE615BC0A173FFB287CAEDB99F36FA1A16DF8EB3F7C78D7B
4883382BE76889E53BC8BE12FD8014B4A6F0520589EC5FFFE4A312713B044190
2C88377AAE5790174157848585F8BD10368B9A26E1D4CD5F47855C30231D6F01
72A7F6E04CD7CDEEE073D086E01B9EB76B247F0ADA33C242B646DE0F0F682717
6D3405BA141E4F97BAAC1CE5D20931E048B22E4FCE61618C141DA1CA8310F453
DE21AF2DB430073F69EFF0B12D93208D7CE9CF01CC5CA8B407056E084DB29C1D
03E2D3F5E44C3862E5871B629D9B5E441590EB25F7528C28E164F720509CBABF
8C4F0D045A0ED931A6719AC6D4682A71372A9E80327477AA9EE07D7E8C8304DB
4BACA2959D02E0BBA2A17D610BCE9FB544638888E512ED42B9D57BF5AF5D6C2F
2900B56365091EB1632405C3ECA778EA80C9FEE684E5FC47B8C072DCB1A29CF3
A4B43C3F2BF12A015EAB86117D2BE8BC668B84CB77D92ED867A3C279AA2F4D23
EB633092316912DBB68E47AC50519E646AC2884CD6DBEC1FB7AE7B507C0A21C3
8B71E17D71E48581F268F00DDD16CEBD14198E6F8A99FE1A6287678A8C849D61
C344A86335BDA1ADE6F682C2DAE1B08D2021A080EF4942F81C28B2C487F00545
A2E200A4F4AE7D6E9F30CBFE58F957FB92419B6F3E2B625FDEF6C38ACD3B1982
F655B10A74BB5AD80BAEEA76D92A1BB2D923234FD2A787A184B3450C62F8C59F
28D3078A7EDB545C9C6C914133227F0D24A81520BB05791CD90B75557B27045D
94A837EA9D6A443A5F754439F1EA6386DAEA19A187F188EAD267A59C605AE23E
0F19AE6233CA7CE575BC41E224F6997EEB0669F5D956464579B1F24959FEEACC
5D48EDFD659CEC8F884225141460AD9D81DF82909FE635AABB7D3A3EDBE082F1
8B0FA02140AB3E76B9EA470066F36B374B2C1137EE34DD407792C45BBF0C25F0
0E889668C33A0D9172DF3B1B12AF2E75298CBDC8314DECA894C6AC618011E948
916CC01A2D41791D9F8C15AA8B375B3C445C648758F32A918872AD5119E3D31F
6D7E24EBC54A451434FFC6B9AC8F7C23EABBFD7F1A139AFA083EF443EEFE9F33
E25E553C4526729F481921A3554216864DF6BBDA5BA84AF9561FA97A821C7699
772E4E916430F66E69955AAC71347E5D7A8D79844CF37C6CF346329F3821A79D
C9C539F2EC7848D7C0BF8BAFFCF0AD1F55CF223F3E6E4EDD8804F7FEDA29CB15
E326218521C7CD6C3AD71A1E49E1B176F86CBAD154B46E71924C89E11F2DE95E
F8B30DCEF2066571440300F0BB4CEADBBBCE8234B59A6A1CDF1557A70C454161
BA65EEC9F2812D449CA5632EEF618E6AB78592AC30A2789B51B945E8F868FAF5
39F33B2575BE392EF94E3EA3004D6D37C02FCD9D5DAF9B06D6CD9628C061F491
A3E6DEC9ED2145972007ED9D1F32F99B8DD2CDED970A8D906FBF7421CC7D7620
78DD3E5018FA293F0D57007FD1104AFC97750AC8A9F8BE72CEE456DF62E587D9
18BDC79A29F57AFA14DF1DCD4820D5272BEAC7FF68FBD0441A1B946353575D59
461F97934077F4ADF6B088C778F34562D23517693CF1F228BB283AFD72A81226
9DE29686769BF30BB16F7B3C1AD51AA807678569442271699CD9BFAF1103E71D
C0494E8CCCB90C2B185D5F50143FCBB838BC0D230C40972E6D8847FEBBE834D5
9C9FB69442DC88166575049E84F3964145DF73495CA295BE6933B1441A825338
B73E229524277E0105FA1E37695B92C5104D4925F152F379BFD87F95C194F43C
A7F7DCA3CB7DE0FA7519FD2D2A2C3BF7A0711AF5440F82A0AA4328BDFB2EC71A
920C9DC9FE2D97DB6C7408DCBB56987A5DAC995C0C81C5E9C5A76273129D4087
2928802611B73E85A56F679D65D6F7150D631E0B79DE3BED706CFF64F6A777DC
207E7FAC2596297F84ACDA01FE55175AC439F1C0056BA48000B75B5C22E4F97F
0E7745B6E7E377278A34B363B4F1871B50ED6BEA46043DD8A1EFB2241F8FFB89
4BD68AD0BB35BF36A9CBBBDCA3161E222983B1C6280D69DD7A6C6B173AFD5663
7EA68A9FF992607FF78C6F639F50B3F0EC02A1E755F160F4E8DCB8DF16CC6766
8B0CFF61165D2CB140D249765296D30E078A88DE0B5E89DC62CB398B021CFF57
975CA5C89BCEDBEE593C678C3D2EFF80D460128BC46760DEA07559CA60EA821C
C5FE7C1B346256259A858F706B6AA311D5E9443DCAD11AAA407F3E0678C703BA
5F08E67DACAC002A4F33065C68458D28C670CBFF1BC0570B65F5BA5230097AC8
E07B5E8140DC0451529518B7D2509F710753C9AC13F612CD31C02C77A3774555
B110537A3607969ED4E2EF1AAFBEA5F5208F539AFDF9361520D394A6E245DC7E
DCA9DA2A7E2B98CDC99028253CEFC15BAE3BC88EBCD90CF3D97EC8E454F9D6E7
0A6296F807558EC45930779B7BEBA7EC14C45C290B88B6CF62192A347B6199C5
DE31E4E520360DCB5829CB45EB3EC9C6D28DED24E434D98573336D5F16497CF1
2B88A3B4450D2E18FF31B9CE2A7DAAA94DDC648036E5BE7DAC98C4E946942F88
7B099BD30DCA47FCBBAE51192E4A5DBD396F2F4A2720292FB0C0BC1288C5C455
A6398D785524D48916E6A19FB998F518A075AC7F0CCA6E2AD23A8B9F06254740
F4B18AFBCBAD00600DFA7106A73FCBFD977DD83111643CD7DF17986D96209992
1DB40F7880873FE4151F77A1CB63CCDACC8FCA97B5E0C1A476715D0954E529BB
BE22782929A466C6A317016AFC652EDC347D936C96D1F5BEB2A17E88AD187F7C
3699464592574758249035E3EFEBFCFED7C21CE3CB4ABE0686F6574C8F6E0303
57EF9F5845AB48A84A757BEDCD023A8380FB6D901187A6BEF1599A38B3E3962F
146AA02C587E820CCE0AB8BC8E30EC6D67884CDE4FB3E430C46A54D7D90B037A
78A57A063CFB0EB3C6FF697509736BCACAA7FBDE901B80DBB525C3467D21EFD5
D365D0D5891F3D44A1BA2AA9D22313A772ABD2F009E827566854C6F8A68F80EA
54B605DA297FD5FF195A597ED1A516061F918A31C577E9F9F60445268DB63E94
8E317A4C2D8A8775BDBE4A742936CE9DD5E2593C8E6A44DA27B7DE007AF380D2
632DF5DDFDE71208AFCF2CCA8773758D8D9C2872A401DB454BCC9E4F77679D65
AD7D1555E9C78C7DCAB3F647B7196C57B881D5D0462B0EE7B1431E12CFC3C678
F4A97DC34E5E3FFA5EB82DFB0A559092747656E6C1E56AA366FDB635B6D8125E
2943C052C94FFB34C9AB10A28CD219850795F9F4863DECB744676914A674BE9A
549AAD4A8D20B3AF0FEB4C4C59CA01612597D054282A55B106FCA0EA4DA15F0F
E86D24C70422227FAD9C4C37FE51549B2FE9F73DB581B5BEE30ADB2D54A26F17
50A2379F134BE521FA2B2AE66D02C9F77ABE35B2D2360530F0BC284C2495FEE0
CF62D091D522647BFBBEF712E604BBFB2A1C147FB5FC176D0DB84445E85E8D83
15D0A0E3E26DB60A6125A0C909C48DC1D96BF078100DFE9727E717BA7F5D54BB
399F7AD87556AC4B2DFE5E8D391D877CD8F2DB849E06FC42AD1B3AF6D1665A9E
916225861275A7E33DA0671E12E16BD967AFC5489A136238E27654D2EF38348B
6A4F413A566B7424AA836C2B4F5F473922C32FC7933C927E2168A4B89535FDAB
27A457D101D3704CB68AC68B84EB9051CB9CEAC9622B0972CA4B56C33A81947F
ACD4E6B7BB128280C049B07B07032333B21CB76E7B9A17117BB508A85E34AB0C
0FB1B0DFC1F03145D0EBF96AD373B546D16B2968752D112B787CF3E145F8E4C4
1FCF68538E07258F434CFB044DF60E68B023385A6B99415C2913BDBC1A3E21DE
66D0B05A9F13D86AC6F8F9A8245CC0A3025CE2431E28C32B941439C43B31C2DB
4B6C5724EA082C8B2DDC5A1043B26CD6643C199797840AD76C924EEF88681A3A
94B5475966580222B27330911908BF0293B8B5B3C8782521314697AC95209EC6
FFF847F6448FF7E097AD3FBD96CDB8D96C2ACF1EBDE5FFFF60D2D3A2CF45C5CE
312EFCB418B5230D6EA03EDD7A5CC73E573237E371CBD214054BA9FC6F3B6DA4
5217EFC851AFB32A449E22E4F80F05C1AA3039014F3C26AB00BA7C9D83B2D5CB
FECFC0728391F7B71160E6CEC7B0B61DADB95FBF91BD2AD13EAFA579F91F534B
15A83434C2978B082C9E238CF18C13D8DF7AD5697CAB67794847817B33E57AB2
803B20AD6048758587E83858D1127FA407F3C24FED213A3A8FEB8FE6B8B85F31
6CB98B5BC6C000DC88998041F8DCFB2CD252F7710963CAD0BB38458FD307763A
3CE4A6EDEA771A3852807A01845014A9587212FCF34FA8F2153C30D746A02B4D
568D4129F84A7AD62FFA63667CBF1EA5BF682C4635934AB7EDE932FFDE642C62
8CA7A2019685C8248E7695DF1251E69DBA480002B95C916E5CF6B6A655DCB981
8913EB756E0F6A404F10C953D2598481EB7CD9AC0B80B5CC33EF8BACAF7479F6
7CFB31970F0BA4F7A4C566C61F054D8C429F0F727C5B69BF26656762A25FE046
4CBD7897E2FB57478D52F3798246A06F9C88B0A1A4517B6850A4D4FAF353D77A
494737C74AB3B7EE7CA685090DD542E5B7CED8E8D340825FB06A95E0B4196107
41A413A1873C045DAD64FCB1B430C376EBD840E91D043F813CE89BD761691CA8
226EDA521925BD4FDAFCDF65CF7FDEEFC4EB905B0C0BA6C712237076848A5202
F7314B846B8D685F972CDFD0956FC1825D62CE3FD9973A1D226C2E01E495D62F
83C6E32F6A21DBA1C204D4BD28631CB6A4B33C567542F05816979CD264494E97
95D7B290F52F0132938BC6B31E4ADD62CF4EEE6C80038588E04319A2F1C34068
319233EE066D22E66939BC04856CDC7146AC596FB23F76E486ADADA8AF511EC5
FE339D1A8453CC7AF118BB135E70512342821B6D66A2ACDF7B66BEA904D529E0
05007E343CD856CB94A2A24CB89FEA081BB1F324673952D0F146D5B3A33619E5
50B47ADF650CA6D354F458E3B81D9E1F33051B1A6604F90CA753A643D82922A6
32B5015F8545F6839391F64F706B3C644255D24492AC0F942A24722D4DFAAB48
0586C90874DCDFC2D705B487BA157587E77B0D275BC02630C6B4D1E607A690BD
466FA0EC35A6F0CFF1DC3F8DD86A7B6B08C2C2B9AE44B58F9DDE9AA52D0BED19
E3F903567B50D59D6043E5DE215077EA384228980FE7831C74341F4CF2448BA8
55E555063AA1F869534DE6593F9EF18E917E837F0AE4D1D84EF61A8220EB2EC5
788417AFE6AAC7B7FF68CDB1AB191FED403075C1828C8A08FE98C99C2A55EFDB
97B56F3FD8892CA6BAA0C2C8BD0744574480A0701CB6B14E461261549383C68D
FEEDD25CE6DC826FACD0AE095B4121E2F49359244D095593F00B5703C0F08A04
8F29FAB54F5311E8C6EF061B50D96F94542EF68652A4BAE9EEFF8D1289F13C55
437517194C29B9313F998D56DE3B408336BFCDA2D4E24B5E8CEA89FF3246E7B8
6D7EFF554E0C7E451943A65732D9B27BED801BDB5503ECA5CA374B64CEB00585
AC9736F5843E846F49F2F83F39B4C367D377586674F978ED8A7081BB584EFDFF
F5F5EE9648134F344D719E1D3195F53918B7CF06D51F30CA20D22A7E42C5EE6C
7B34BA0D81412AB77BC8E1874CF329240CEE00E594E6A149CF8CB53B48BC458E
CB2824EA91D8C5FD5F549FED4E719D39E5C3E7D0E1FE8551354605820D48BA0B
2EEE00A7BD8D50CDAAB11BC5E360FE7B57EDF49EF08D1ECA202C629955FFEC45
FBCDEA39CB07BDD21E66132420A37FB98F940B773F20E3DA062D2E1257FFA78A
4D2EFFC01C98E6C10679BBF4AB5FAD1D99BAE3E2AC32BD3F62499E3D5D3C71B5
681C290590306254CB245473EE3B24F9B76270CD87F10AE3299C87A337D34D5D
FBB9E1357DEAF2DA109CB859DCF5F42A337AE1A95BD21E2CB2DDA569C6C92875
2F31F21E6D1D548CA1024917618247A5C25742590ED2A819AB14396C6829C8DB
1CFA6DF3306F4195D35DDF81018CFDE16ACA488806F7E791C10900221A00C1D8
554250107AB2EB8322B3495912AD77C5E8835742122402AE3543A98426A30BD3
87E54F1E63920B9AF8824628ECBD9E1B33C6C9938E8BC996F4B6EE13FB5EDC3C
728B598303CDBDBE1FCF91B2B32E7385F50CF4641D3A198B4C7DA931D672718C
97BD0DDC08CEEA6452C46DE549895B89900DAB29F3C7D61F30D49A4CD6D83EFD
62976E62327DA2F814015A5DF876D2BCA16F55A7BF27EA0B646834CEBED29DF2
43E25F63B28C45AE5775EFA4B38E590A132E2CDB9F75B17B2F16E43F5C46966E
45EDFA194B4744286F89E913D027C845835014FCC43576FBEFD17EBB62ACEAF8
6443EB935D04BBCA17933E808D983737B98488C4BE66613E3B6EE2C2157AFC8F
DF14DF98C0D0659D1111864F399D4748C11E2990CB690641518877AF8EDC2A17
6462F47E15B18C709972165913CD1AB9F1CC61D599C826945F5EC60809A9F78E
45BE340980B1E6C0AE87E06232F71C037F947F9CC09E9EE5AC41A03021D76957
91168252F57DC205B6BEFF2A81E852660218116F12009129FA3DA4869391BCBB
F1719E4DEB9BBFA47D89A2D7010D493631FE0BBB09C8ACC305F0EF9C3240F418
AFA8AE29F52D5899A27802081AD15E47605D45E4BF6F85FB8223624EFD8D857E
88FEC4341FEE546C0AAFC0F229F8600DF96D92D8BFBB2426C8A6526EA1459A63
5E712D516FFBC9507DDD77014C2925F8CBE6329C4AFE0360C8DF501977899341
87C060E59EF4B244CA58056E53F69B1CFAA0F9738110F09D41CCA0471BA80CF1
95065189BC66843F4175A92ADB000E1978A9EBD361EDE2AAC1A0872070A0707E
2BD307D957B94E5006349233EDE98FA51EEF53268230279941C1B1A2E9F0C252
818F856FFD805D39078D22F6C1056BAD17D86F381ED2C17F84079953DC14726F
7CFC4AFC3342DA8412E59BD7AE2C424487F79655D92248B51065C4AE6C1B02B7
69AF3E7F42656C12DD56F9A146ABD6E8DF855D4DA1967E148F381C909CF58E1E
DC25BAAA8889012BF840FD68495B38C9792986B572D928E96825738C4C2C7554
0D1CB8F0F7955CB6FCAC5C084DD9F920A9BBA8B65F93912D9FF23ECBDA863BF8
A09337806E42EF554040094307F31D2C03ABECE32CB9D34ED335B4ABAA446EC0
8EFBB29039068976B26AAB48DED8C3241F0A9FD412E005E4823F9EA8E3A8294D
816AB71D19C0548BE676D7B7E646540DBDD8EE803BBEC7A203A4A29D079C1327
AD276C7EBB75BA2460032E17EF20424108F2B5F090DF32FCED276B4C74935F56
71291F9769055D984BA68812F4EB36CBFAFB7DAC310FAEBC8451B0F2C2F12671
39B77AA48D09944FB97C16D2C09E328F3BDC3AC68455563381AB56F0AAFC60EA
821CC5FE7AA471BA975CC35F72EBAE5958494D55DAEFAD15B6584361873C7B37
838DE90775E66E068B4D8E0B446A5A2014E706D251C256783A43CA0AD09EF99C
25B97CD1CD78FC083094647EC563F7B4800F644E4F48DD061AF1FCA953523469
D031F2E060310D41E5D28EC91FD88BDBC4353694315897FA4DC7720849A3AA4A
CFA5E859F91C7E19D61913F4563109094B66F9FF18B37A143ADF52A72D727146
623E1DDB6DD45C1F88BECF9DEE83B1BE8F8275FE9ACF7B52E0863CD231847FFC
D53507376874E27A0625D1B09C04CA8FEA7DF04E7A24E312046CA3F4639CE305
49F9969CB1E9155CFE25FE7FBB87613ECF05CE517257D75E13B5F6588F7626C9
F10D769838A4E2FBFADBF3DD497660EA843F8E9D969D99B78EF5CB60A0B62AAF
D213E8CF47C1B5E915B55F5D224CC19B6D47299125124C201F3BF28BDD6DD004
3E90AD66201B29EC64D72D8385E649DD202041622C5E4A91382870E6B1645B32
A29F37A08DB74E5F219F490174186824FF78EC89C3C0BEBE57C228F61063854C
4AA81969255AB3EA73F8BF7919570526C92D517B2DA3626745FB3B86C31681A1
A74D2BB8468C530A53A931410D104F4B31C2636287654006B36F56F34087A0A8
7B8EE2DFB49CAD1A5E9DD0385A24A74A9F79ABD4FA0B45E244973E1D8D4164EE
26EB28BEB4E9A9FF4978CA04CDE72611CBA581EFDE8AA1B6146C5AEC3EBD15EC
8E64090DB412B32B89AFDEFB48EDBAA5F7A5E13BB7FAA4259A32E90E39C3301D
D958F079D152ED7195DEE9EDED5343D9703874AB7FD924D57E0BE99050FF7D05
C459649AB45977E51B59C58B51B40546D5745333C40DF0232ACD8C2CE2CE9463
29CD39C2CAB8667DFBE4C61AEF51A2BF972585F4A95922F60861D99911E33447
DF35E64A5DFDE1239479CB408285E4B468DE003C1093FF3D0A3AC14F3A7E73E9
B60B2504E6EA68CE02C81F7AD237A559FBABE75DFD22ABF35E3D2F65D6CC5A50
31E331E896F7A217B236EAA20B026C176CBC968560E4383E53236B8F2324F5FD
DFA4F26EBA2E5EDBFB155A44827022B8CF1F69EF2AEF192320E1545F2ED52644
4E8468ED6AF03CA44773026887E5539F56544B797A8A1652FFDFDABA7E3D3B08
31F0DE0DE96C5F110F19551035A7667F588E42D255755244AC84DBD4C229F447
38C7B1D4F806FEBE171369BCE8977B505FB7F90B1761A391BDD46DF8D19229AC
326E3377E4CCE5CBF9BE2664D19C365A5AC99B3FF921D80B58EC29D71C5F80A3
A28BECE3EBE83DA7844B8B2BB681C3C8EAEFB4C6FD7519C05FD3911174504C0C
3E3F02BDB58C471BA96CC4424A90F92CB78F0ABAAD0F0C95D045E85DA73F552B
CA922747C4600D0073A3CA86D60DA35927DAC1E8E5B074239CF3A166C3C3BE33
B62D0689198F5E3A1EBAFEE4BDC1B3227E123FDB3DD89008385759C978FCA80A
7AC6583F97609683FE7CA89B60B29C99F734FAD64CCC799E0AD5EDE46024816D
AE80EA11DB48A35DBBCD10C696BD0243575ACA21F0D69B7496F2911937825090
DBED77EE109B6C62E8D89A331B9D2D990392C923A5096FA0207044605865A09E
AD831F25BF86F60F0FEC817B0C0E0CAF454E54D849C83E35872599407F5DCF23
51942B10206BBE5A35E8119D0743ABC7BD6923A2E2D8B405DC67F51B6300E4A1
4A784DE5277A027A91E51846A162A43B86D63397CF71807ECC4DAD9CCE2EEC7B
A45E15B3E6943C1B1F500FEBCA493EAAC6F02F1E810520BA8F9E6176AFE665CA
EA3479701A7D8E8B514447324A6C836EA40AD3FDEDA199088E9324FE920D09E9
8B45B4DF4878D931B5A817A89E45F98DCB9DDA5B719EC05890EA64DE525221A9
BBA8B65F93912D9FF23ECBDA863ACCB42C2BD139648E1C584642A59417359369
922DDB308B966FB71C6F65A5E6E28BEB7CFE775C70B21CDB37C62BD779D9E64F
1C5B6A21926CDDF89A13C1B0D0D9B84426F69D9E94F880FE7684E763AEC3FF18
E73E7FE6AFECE1F475B50749D853BBEAD7A812F3B842A38A4FA209054D956203
D11C268D93BDEFA7C9F855C0C930BAE2D5E681E7D26D39B36D92DDE11F8E8D48
053A65741B172225EE93EE47689B1ABA07BB9100558BAEAB60F53A518D738038
67935EF829A080392D5032045F30A29CFEA10998063D21BD1A37394770EEE439
4A3AC5C6F68D680F7F4D6DBD2D70A31183360FA32CABC31F4DBD95123306DF4C
02C296953F481F2E0C7166F11062985E2AFBCB6A6B1379DB306EAA4C14832705
F37B72557A6FB3D159FC6295508C26813FC29132DE6676FD99BB8D28FCF55B86
7EC1F8BD652C64236A905697E3DC8DFB4D9F7CF19473F1845718FA0400BF13ED
3CE631E200296EE741F16B158B672C8A634BA4A9D6767EE6BA4CD3554C92CFDF
F91AB973BBA8D26DDB03EFBAC859FEC093193AEE3A19BA91063421988EA0AA7E
11038BEE23F6D2B534D97555C8FF1B0A72E195C7935B392722566FD5D4D7FDDD
F6363F5BB61C805F2DDF3E221806D7B4826E7FC2D6080453284D21E7A6E9F0D0
6720FE1C1A35DDD6A67DFE03960358E3A0A038FD4A37D828C027E75EB0891ED5
A200D311A904F4D16240155E0957F75E0CDB13A9FFE52C369B7AD6D1E5BDA6D2
C176B763A8DB62B8EAC15BF22EA3719F3966E88138CB39EFB16FFC6631A27F33
1AB1D4DE5374A7A85099AF41414CFBB9265FB2539884A1B726C37793D01C30EE
9B0711D94D7EDB931969D53D690A1966F9A788BECBDA3D55D6424C5CEF3369F3
33B8A0C411AEC9C185DB2E60948C2338B2322113622880DF4A64763FDFB8FBBC
B1EFA20D2BC9102A604063ED52CCDFA308CA5F1B104AB056549B188C0766F4F7
E6484187F8F476030C99FEF27C08BA14047EBC2DA3C5C72BFBE305A01C620070
B8A10DC69F520D7DF35DE48432BBAB9264D3BC8BD82DF3DACE44B0B82B6DDD4D
CE3AE4C5178533B46EC0DC0DA0AFC48D88384E4ABD697CEA852ADA1044A34E64
3E60736067292624ABEB7FCF25F8CF99D8DB47890DDC0B44B96396F92CAB0A49
30567A877A18153384CC9F7A50A2DFD0DA8FC9C22FC3E88F4BFEE13BAFF39711
33B618ED404B9668D1032FE13571230CA96FFA26EC7CA8CD79BEBCAAA4FA7A54
B4EACA4283BB0F056412B5FFA260C837D76B2BA7AAB2F7D0F251748A269FB9BA
C734FF4092C9128DA782D6F3695E5C189AC7FE93539B7B5BAA5F388A18D13626
692FA02FE7E5F205E27A2B9B78840409ACA2B1C6F6CA9D5D57DF1C4F0352AF81
8081F3DC484333FC7890D2D776D737E8D124F8E88CA8861B0BA83B7F21C567CC
64BE1A36DF67226E73CA9AD7D45FEE8633BB86D3F4D7986CFBBDFDDB0D56F981
25FD5B9C016B3366013629BBF9A5ED079F45AE936BF7DA3B1F8128ACF24AA165
77C272D5B872FCB48FE4A864AC9AFEF910C7F2416083A6FBFC587CDB40FF97CC
A2DCFED2504CB17DF5058B1EA84ACC95717254C4DE63A5DEC12BD488A783A911
ECD14AC326F6A87674D5AF46CB6E69FDC5D2AD95BFDD9CA02B107ABCA9A2EBA2
187F18A8EC4190233E3BB6764874CA4DF746A1FAD1D80113C0FBDA4614DDA756
0BFFACBEAA4F3497692E5052C22DDB21AD65C35798197C58DAF30405E36ADBDE
DF385D7B76FE56BD254719BEA35DAA0C0E6963A89F03D3601B0A543BA07DCF5D
001E7BBC59D6A13AC2CDC386A07CE7D288790BB950FE79D3BDDEE734182E07A6
F175F673BC66DCFF531AFD3FF44A3414FB8DC303CE9AD657446C340C79FF3A47
D75E8D6DEFAD15BF9951E27220EB3DDE611385AB2E8AF59FCD61CCCB0A037C63
4727AFE9E6EEDF6ABD1DD7B30BBD0764DDD99CD80F8FF5DCC8E96A5A1379037B
99E7BFA20BB17F9655DCCBFFDD065BC1F7969CBDBB716850D29BB97BC8DFAABD
FAC1810FD7BA1FE18BFF9CEC1171895131E3418FC6F6CADDF83E5C981E6C5CAE
C6E4522A422940C675103441E9554E7C8865B0F3EAEB6252B8BF063BCF8F37C4
EB230ED53086FCF8526C6DFB0C1BA6D3F9C6033752D155BBF22CEE7A588BC609
6815FE89E50A487B20FD07A9D8B4558DE8680C34E932ED425C8F709BC0E7C0AA
63C43AD047D723CA9DBCC0080FBCBE9452AE2FA5B56FBCAF6072BE221C872E74
C09411F693CB71C5669DE0C694AE3DEC230FC4FC42B5C7D7332ABB13E1B2C9D2
3B32EC380445C8AE7D83509A749F057A7F1C862224C26EC45E7BA0D83F5CF6E4
A60A38B4ADD5BDC260B49D4601A9717D3DF5708D4828C54122AC0D6050409441
9C149E24DA2DA14B97F14D7EE9FE3F416DC35A7E2DC5BCAA9746F8D9D1F5246F
88C908C40D0E6FB1DEE856B0C4A18964B5ECF55262916D3E105D61300443196F
7F22B81AB6A7CA8306A8B3E3EAA7AEFDBF76A556D4D1BD77CEC3E7B5DAE73926
F3305527DA229D208A367695DBE5B2FE474D113C5D714F50C679EF52E60CCBC6
131D401D9D13F0E6509DFF185029DACC086A485E89381585B5DA98C0F576A05C
B3B635B9C31B008A5700EE5CDE65AB3FA010D83B6F9F1CC54659C3B5DCD9A141
B07008DE9004DD9AE9E618847AE4CF9CB834B5214C4D5C343A48801013A93BFE
086465F970F8968E9160DD1A503E14778467AD38D7AF39480D2746C28ADA7F6D
D82E80AD781233FA10957D8C930D6A416B09E73FBB20DA9511215FD949D820F0
7BC754F0251782A4FC88748D17C6068387DA7E8F69078ECEC017613A41B3C67E
B681B959832A38728D3E534D16763456202747390312A7985237B5E9767B1569
6F9BA9B493E7F995D35F1E4B1ACE6331513AB6CD40D3B9147F2316CD7E5CD835
9EEB8F356DC505DC261FB0D8B2C5DB4000326931C8AA39DB30BB1778EBF4C53D
D4DFCF4EB16A2B6950CEFCDC362841098B6EE3ABB00E8644A6E8B58BA4F8B4D7
C85D0906B660964D6B1F1D3171C75C69D827FD35D27C9C77F640393F7DE2176A
F07C0F03FF986FF8782B683FBF0D07604FA15F92CEB0D1BD47087510A92F08FF
3A40DAE47AA1BC1BB6BBDF21E82ABE5D8472000269782B9BA2DD8A4F3949D883
B86C0BA8982E8D9B09CD1156ADB7506B0384E15B66A51BE53821E16F686AFDE0
31E3A212B849C3AE764AA2A6E06A46B29AF737B50E18A4742B557FDD04961863
FC765358861FAB6C24B6EDA52A9B90A6E65CF1CD7CB83C503C52647875DD9501
0CB64E8465FB979561C62F1C6CC5DBEBCBA7FF411114829C418D6A5565569A39
23C3264A9A6310A958D90CFCD756A9383799EB32A9EDCA6AC5E4A47BE8A9AF65
F35B99DF46CE7DB49E470E220B8B5463907B3E9D0CB18456C5799C5E927C027F
FB0F867123143E5295F4C688D4C3190C7D63CA0C0A4F6845351B08087AB35459
F6AE4C18D76E0B6F433B7BCD0231A13E3842D9E5A611436DC4F218651F851407
DEA4BEE0C3475053642398B719F956CFED2D319E3EE1BA0BD33DCC8567378625
990936B0B818BACEC96C11BB67E91CE2A7B96ED09A4659A681FED04C8B665EB0
B038CDE0E07E38069649B7CEBDBF1C47D6C2AAB9C9F6A0585965E85DE9891854
5D279DF06B65E2C75A84D71C02BC1ECF330B7C8F008D7C26929B1CD9F29A2A06
0D3BBBFBE2D9D4157FDD6C78F9171ECE856E4A65FA0C14306321922B224967A5
6E5FB439D9B30806C84730646A26AB660BBFDC77036C3C99F88A0A56E314ED6B
C886B0EAEB2B431EE0E35919E7A49B613CDC5752A1D9F52604744F90C47B5673
943D30A830F546BDE8C2EA31E42B3542BE77C55552F4D615B293F32032CD05F7
37F029182B3F307E1A51C1696663B30C7AB52AE2FBE4E5A315AD46CB9346DEA6
DABC2B1D273799606BC7A01584180109020618C5DDAB7EC3CEE49D659FAA71C6
4505ADDBFE2A6E2F0BA30FF8FFDE308B966F11A043AE6302071A7D867CC8DD6D
F360ECE40AA44141CA59A677D61F0B114E540F957BAD0C4CB1F58E26B3942425
2A3CFBA6D14F99488CE919BE2ECFADBA188940158CFF63166331B0C26B0D8BA4
23BD5993BD810A12A3E6C95A76FCCD3C9C11D9EB01106B4DDD657C1C2C01DDE9
94DA05522D478148E8B36C4091872D7F024A5BF0C3DF6D631BDC300EC1BBB563
B82080252C8CE2BC04D369C647304A574660A2A83791B1B050EF2DE104129744
819782AA7370DEE7E464FF6BCBA21F95ABB9C694E41E857206E6C4E1DCFB1979
B2B8EA995AC738C9D133EA107866EBFBE6F40F2403EF00A8D54B4C804699B63D
052A5E4A26955F2E4F652900A8EEA2EFF8998D04CF945A168FE605E1B279095D
D7C214CFC9CDF88672E4992E5968B167A353FCDA4281F3291448D109EC4700B9
8B6C405729FDD8C8181D641B592971BDBC437ECA64630DAB9DF3108808788C13
0355A550867CC7BC6246AB29D67BD9DAC18082817921B11E764EE83BF6568EC3
4AA9DE2A2557845A3E19A4B50606079ECE27BE9A5A5CED3C1DF1DAFCC2B0526E
CA529F39920D4F14848DFA1C3ACEAAFC386E7C4A06F789DDA2CA37C731A65B6C
1A26E81D6A58F7F539B5D378D8FD56DC549C6142D2148FB6ED3F0A855FADEE2F
29B70E4EC9B12653CC6A13F74A26EBA654724B4FA892ED7A17C10E1CFFFAB081
A58EBEC4B72A5E03550730109A9D54FBE859643EDED694D1A39F3FBFDFED74D6
61AA2579504ED341BC491B9F1D0B54F470D37E531B413EB3E02AEB685143D658
81879644F2A63749DCA092F245A46C5AFAEC3099E55C26C7E0C3C814CB027D64
6E92DD0406AE504C8D49534F4A55BFD843F3045DFC1F4CA8405BE4D10D241970
B33E34977FDCC183C2BB1EE01D6A95AB721A6F3453E7E3307AEB69D2ED9CBA71
7226458D234B664636B149AE146FDE0063C5458D2677A0067EDC9A8F0DA88EEF
E141A90E29E6E0EBBC03C0A256D232480301AC8C4B74F10C3585BE77305387BB
2FD255BF980C4BBA7AA1F8D97B9CF69676B0E74BE29B4EB720E57E054821539F
816F47200AA8938C5C0811638EBD465BAAD72DB2A4C2F7E51ED1FFD1B192F391
D256256CFD53BA30AE4F343F013BB79C4A8C7F939A67674D291E17B5325BE9E4
522597C35E36FF2E06AFFE8018F2EF767E62A5AEB630A83046BFE190E3364D4B
91CC177487EC5EE614EE06FA6BC9B42C2E6D43C125F8746F7F4C860154585ABE
70AF6AC227D0419D678C301E49273325BA7848263A14E7E38BAEDE0536FBAD32
11B03AB689580054CB0E5F4CD5623B13D9B78F9E3288023BD38ABCCA40367D9F
66BA6788B6D4F1EF7A14D0FFDDE7BCE16630ED79B4B7694A88057B18D13DEC2A
3B295D3275DF83AF2FD1F155202715CE5AFBF03C25FF45B9F41142C9A0AD22E9
054DA59B5EB588D4EC00990838C790311AF3B33181D273E3C98A39B3678849D6
CDB21F5D1EE12BC59406F05D8DFE9DF847AD129A9FE909F894E6F5DA5515740A
43E64FE0C97FE0724C7A4EA7D8AD4743CC1DDF788C5C8CF65D1C87A581EF75BD
E7A4E324CDC02C69B6E53A758B1B51AEFB80FEC158EF3EE504FCB9DB9262103D
82EA4C03504C9EA7CD36288DD93E003AEBC3FBF8C9601E5F7DBC829F75CDDEC6
A61BB929C540192C80C2DE9F20E23FFAFA212687FF183A1BDC49F1C5C6CEDD12
885B0E56F5DEF5DDD6821E0A870AD54896AC237E937CAEE709AE61500C8E8EE5
2AA70DC8431A57735BC9C48EEE481E318BC44202BA4474DD791D049CC747F0DC
2D28D0FDDCEEE8054624F3D55188D7F2FA00F5DC9DBF3281DBC312DED11CFEF6
25B32A79ABD6E266AB7CA8807DF5914AF74BEFE7CCD3BF16C1B4D2DE34F68C04
8C0367268B1064ED52FBAB055CE4E6ECCE6BF6BBB850FCEEE6DEEA8DB0871D74
03FF9A9270231926CE2332865FB50A08F8D232219103F99A320BEE9733A734CB
0AF93FC5049668245561AC6849D21C6F308C3054C35272BA6A964676F2BC6120
D24C07A591E145F485BD63A24D708BBE0591424A7F44717F980902FE7B1A04A3
9DB14C19538B96961D1D089E9EFE96C784285322E98FE6C66F5692D74CBF2FEF
6DA4554B4D5091D215F48695437041A06E27AC7BEAECF0C8312149AD5C48F16F
1E8FD7699C1F55F74E2156F4CB5B49171B9DDDFB429F7FB2B67E89BD26EE2CCA
A740232254EE9FCA654F3F966C4E0DE80DAA048ABBB3FA5B4A791C11FFCD41A7
84AF24397BA2F9B53539476881D472D29A30F00FBA385F852BC0CB5EC7D41B32
A80809F863673E5D28B629A8B4BAE420493D2F81C94BD0D13FD6DAB194763C6F
428323F37377DCDC0A7638C4D6C79EAC938F6BFF63783CEBF0215141FAFE73F2
6F17623A1A01E719CE1ADCC5A20A028E29A5D8D777D56506D9EA99D892AF07ED
D1D63C3EBDA8B5AF92D9FF088639CD77FABE7C1D09121C4FA2EB7857FF07CA5C
41093CFD519BE204329929A5262B3348DF415766009A93F2A6D23542BB8A34CB
83F106D9238406023CD6A8E629366A71D792CE24F06B9C843E1AC5A24807519B
1A76C92A0161341AB0C40024BD8C464A1EBF06E10EFC57797882874D6E2F11B4
C0D0A3764178CA6028D00EE5AA0C77ACCE05D12625A9C63847460DE9002F04A5
E3DF8B3021DD39F923B28A87BC805BC6E58924D9F0045700E013C4CD2F321D1D
0D4ACDF0E2621DC7B3DA6F1B64BBC0EBB9F47A282E4E5395EF63D90BE7527B0B
C6D040FB9B28497FA577A0D322F09D8F692688C63D33EEF28EE0D99C42FF692C
C21421982FEC442752A62A5C7FD8B6E2E617A8422A974BD8DA77F913B3713B5C
408BAC1657BAD27CE032DC7111AEFA917065245A74EC3A52029E99175C535B94
84E381024E81762E063B201200E672BDC2B7F8E420518DE42E2A4100254A5A15
62165EC43D4AA4EA3B125A9F2B180834E7E1DED3B99E3F4162
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600
(/Users/Matze/Dropbox/Nachhilfe/Aufgabenblätter/Mathe/Raumgeometrie/.texpadtmp/Raumgeometrie - Rot)
@start /Fa 235[71 20[{}1 90.9091 /CMSY10 rf /Fb 194[71
9[45 1[45 45 6[35 35 40[{}6 90.9091 /CMR10 rf /Fc 27[46
108[60 2[30 37 38 1[46 46 51 1[23 2[28 3[41 3[46 16[61
7[67 13[28 16[37 37 40[{ T1Encoding ReEncodeFont }17
90.9091 /SFTI1095 rf /Fd 188[50 53 53 65[{}3 66.4176
/CMMI8 rf /Fe 146[80 9[39 39 48 10[53 18[65 69 68 4[71
25 33[52 25[{}11 90.9091 /CMMI10 rf /Ff 3[50 5[45 17[45
105[40 48 1[65 48 50 35 36 35 1[50 45 50 75 25 48 1[25
50 45 28 40 50 40 50 45 6[55 2[93 68 2[50 67 5[56 70
3[71 2[69 2[68 1[43 4[25 8[45 2[25 30 25 2[35 35 40[{
 T1Encoding ReEncodeFont }44 90.9091 /SFRM1095 rf /Fg
138[71 50 1[47 2[69 1[109 3[32 1[69 1[63 3[66 14[88 32[69
49[{ T1Encoding ReEncodeFont }11 119.552 /SFSX1440 rf
/Fh 138[50 35 36 35 3[50 1[25 2[25 50 2[40 2[50 45 19[83
56 1[46 8[68 10[45 3[45 45 45 1[25 46[{ T1Encoding ReEncodeFont }20
90.9091 /SFSL1095 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136 -442
a
SDict begin H.S end
 -136 -442 a -136 -442 a
SDict begin H.R end
 -136 -442 a -136 -442 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -136
-442 a 0 TeXcolorgray 0 TeXcolorgray -128 -327 a Fh(Matthias)31
b(Linh)m(ub)s(er)884 b(Arb)s(eitsblatt)31 b(Mathe)1142
b(2.)30 b(Juni)h(2016)p 0 TeXcolorgray -128 -290 2008
4 v 1880 -290 V Black 0 TeXcolorgray -128 -128 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -128
-128 a -128 -128 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 -128 a -128 -128 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -128 -128
a -128 -128 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Raumgeometrie) /OUT
pdfmark end
 -128 -128 a -128 -128 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -128 -128 a -128
-128 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -128 -128 a -128 -128 a
SDict begin H.S end
 -128 -128 a -128 -128
a
SDict begin 13.6 H.A end
 -128 -128 a -128 -128 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -128 -128 a -128 -128 a
SDict begin H.S end
 -128
-128 a -128 -128 a
SDict begin 13.6 H.A end
 -128 -128 a -128 -128 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -128 -128
a 0 TeXcolorgray 92 x Fg(1)69 b(Raumgeometrie)p 0 TeXcolorgray
-128 40 a
SDict begin H.S end
 -128 40 a -128 40 a
SDict begin 13.6 H.A end
 -128 40 a -128 40 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -128
40 a 0 TeXcolorgray -16 167 a Ff(1.)p 0 TeXcolorgray
46 w(Gegeb)s(en)30 b(sei)h(ein)f(Rec)m(h)m(tec)m(k)i(mit)f(Kan)m
(tenl\344ngen)i Fe(a)d Ff(und)h Fe(b)p Ff(.)-128 184
y
SDict begin H.S end
 -128 184 a -128 184 a
SDict begin 13.6 H.A end
 -128 184 a -128 184 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -128 184
a 0 TeXcolorgray 174 317 a Ff(a\))p 0 TeXcolorgray 46
w(W)-8 b(elc)m(he)32 b(K)m(\366rp)s(er)f(en)m(tstehen,)h(w)m(enn)f(wir)
g(das)f(Dreiec)m(k)h Fe(AB)5 b(C)37 b Ff(um)30 b Fe(AB)35
b Ff(bzw.)c Fe(AC)37 b Ff(rotieren)31 b(lassen?)-128
340 y
SDict begin H.S end
 -128 340 a -128 340 a
SDict begin 13.6 H.A end
 -128 340 a -128 340 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -128
340 a 0 TeXcolorgray 169 467 a Ff(b\))p 0 TeXcolorgray
46 w(Geb)s(en)f(Sie)h(eine)g(V)-8 b(erm)m(utung)32 b(ab,)f(wie)f(sic)m
(h)h(die)g(b)s(eiden)g(V)-8 b(olumina)31 b(zueinander)h(v)m(erhalten.)
-128 490 y
SDict begin H.S end
 -128 490 a -128 490 a
SDict begin 13.6 H.A end
 -128 490 a -128 490
a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -128 490 a 0 TeXcolorgray 179 617 a Ff(c\))p 0 TeXcolorgray
46 w(Stellen)c(Sie)g(n)m(un)h(durc)m(h)g(allgemeine)g(Rec)m(hnen)g
(einen)f(Zusammenhang)i(zwisc)m(hen)f(den)f(Rotationsv)m(o-)300
730 y(lumina)j Fe(V)654 744 y Fd(AB)798 730 y Ff(\(Rotationsac)m(hse)g
Fe(AB)5 b Ff(\))30 b(und)h Fe(V)1896 744 y Fd(AC)2038
730 y Ff(\(Rotationsac)m(hse)h Fe(AB)5 b Ff(\))30 b(dar.)300
843 y Fc(\(Hinweis:)h(Pr)-5 b(op)g(ortionalit\344t\))-128
866 y
SDict begin H.S end
 -128 866 a -128 866 a
SDict begin 13.6 H.A end
 -128 866 a -128 866 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -128
866 a 0 TeXcolorgray 169 994 a Ff(d\))p 0 TeXcolorgray
46 w(V)d(on)30 b(n)m(un)i(an)e(gilt:)h Fe(V)46 b Fb(=)25
b(30)p Fe(\031)-128 1016 y
SDict begin H.S end
 -128 1016 a -128 1016 a
SDict begin 13.6 H.A end
 -128
1016 a -128 1016 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -128 1016 a 0 TeXcolorgray 374 1144
a Ff(i.)p 0 TeXcolorgray 46 w(Wie)30 b(viele)g(W)-8 b(ertepaare)33
b Fb(\()p Fe(a;)15 b(b)p Fb(\))31 b Ff(gibt)g(es,)f(so)g(dass)g(gilt)g
Fe(V)46 b Fb(=)25 b(30)p Fe(\031)s Ff(.)-128 1167 y
SDict begin H.S end
 -128
1167 a -128 1167 a
SDict begin 13.6 H.A end
 -128 1167 a -128 1167 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -128 1167
a 0 TeXcolorgray 349 1294 a Ff(ii.)p 0 TeXcolorgray 46
w(Stellen)31 b(Sie)g Fe(b)p Fb(\()p Fe(a)p Fb(\))g Ff(\(L\344nge)g(b)g
(in)f(Abh\344ngigk)m(eit)i(v)m(on)f(L\344nge)g(a\))g(dar.)-128
1317 y
SDict begin H.S end
 -128 1317 a -128 1317 a
SDict begin 13.6 H.A end
 -128 1317 a -128 1317
a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -128 1317 a 0 TeXcolorgray 324 1444 a Ff(iii.)p 0 TeXcolorgray
46 w(Zeic)m(hnen)h(Sie)f Fe(b)p Fb(\()p Fe(a)p Fb(\))f
Ff(f\374r)h Fb(0)25 b Fe(<)g(a)h Fa(\024)f Fb(10)p Fe(cm)31
b Ff(in)f(ein)h(K)m(o)s(ordinatensystem.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
